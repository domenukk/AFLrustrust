use ::libc;
extern "C" {
    pub type _IO_wide_data;
    pub type _IO_codecvt;
    pub type _IO_marker;
    pub type cmp_map;
    #[no_mangle]
    fn close(__fd: libc::c_int) -> libc::c_int;
    #[no_mangle]
    fn read(__fd: libc::c_int, __buf: *mut libc::c_void, __nbytes: size_t)
     -> ssize_t;
    #[no_mangle]
    fn random() -> libc::c_long;
    #[no_mangle]
    fn srandom(__seed: libc::c_uint);
    #[no_mangle]
    fn rand() -> libc::c_int;
    #[no_mangle]
    fn realloc(_: *mut libc::c_void, _: libc::c_ulong) -> *mut libc::c_void;
    #[no_mangle]
    fn free(__ptr: *mut libc::c_void);
    #[no_mangle]
    fn abort() -> !;
    #[no_mangle]
    fn exit(_: libc::c_int) -> !;
    #[no_mangle]
    fn __errno_location() -> *mut libc::c_int;
    #[no_mangle]
    static mut stdout: *mut FILE;
    #[no_mangle]
    fn fflush(__stream: *mut FILE) -> libc::c_int;
    #[no_mangle]
    fn printf(_: *const libc::c_char, _: ...) -> libc::c_int;
    #[no_mangle]
    fn snprintf(_: *mut libc::c_char, _: libc::c_ulong,
                _: *const libc::c_char, _: ...) -> libc::c_int;
    #[no_mangle]
    fn memcpy(_: *mut libc::c_void, _: *const libc::c_void, _: libc::c_ulong)
     -> *mut libc::c_void;
    #[no_mangle]
    fn memmove(_: *mut libc::c_void, _: *const libc::c_void, _: libc::c_ulong)
     -> *mut libc::c_void;
    #[no_mangle]
    fn memset(_: *mut libc::c_void, _: libc::c_int, _: libc::c_ulong)
     -> *mut libc::c_void;
    #[no_mangle]
    fn memcmp(_: *const libc::c_void, _: *const libc::c_void,
              _: libc::c_ulong) -> libc::c_int;
    #[no_mangle]
    fn memchr(_: *const libc::c_void, _: libc::c_int, _: libc::c_ulong)
     -> *mut libc::c_void;
    #[no_mangle]
    fn strerror(_: libc::c_int) -> *mut libc::c_char;
    #[no_mangle]
    fn open(__file: *const libc::c_char, __oflag: libc::c_int, _: ...)
     -> libc::c_int;
    #[no_mangle]
    fn mmap(__addr: *mut libc::c_void, __len: size_t, __prot: libc::c_int,
            __flags: libc::c_int, __fd: libc::c_int, __offset: __off64_t)
     -> *mut libc::c_void;
    #[no_mangle]
    fn munmap(__addr: *mut libc::c_void, __len: size_t) -> libc::c_int;
    #[no_mangle]
    static mut interesting_8: [s8; 9];
    #[no_mangle]
    static mut interesting_16: [s16; 19];
    #[no_mangle]
    static mut interesting_32: [s32; 27];
    #[no_mangle]
    fn mark_as_det_done(_: *mut afl_state_t, _: *mut queue_entry);
    #[no_mangle]
    fn calculate_score(_: *mut afl_state_t, _: *mut queue_entry) -> u32_0;
    #[no_mangle]
    fn maybe_add_auto(_: *mut libc::c_void, _: *mut u8_0, _: u32_0);
    #[no_mangle]
    fn calibrate_case(_: *mut afl_state_t, _: *mut queue_entry, _: *mut u8_0,
                      _: u32_0, _: u8_0) -> u8_0;
    #[no_mangle]
    fn trim_case(_: *mut afl_state_t, _: *mut queue_entry, _: *mut u8_0)
     -> u8_0;
    #[no_mangle]
    fn common_fuzz_stuff(_: *mut afl_state_t, _: *mut u8_0, _: u32_0) -> u8_0;
    #[no_mangle]
    fn input_to_state_stage(afl: *mut afl_state_t, orig_buf: *mut u8_0,
                            buf: *mut u8_0, len: u32_0, exec_cksum: u32_0)
     -> u8_0;
    #[no_mangle]
    fn get_cur_time() -> u64_0;
}
pub type __int8_t = libc::c_schar;
pub type __uint8_t = libc::c_uchar;
pub type __int16_t = libc::c_short;
pub type __uint16_t = libc::c_ushort;
pub type __int32_t = libc::c_int;
pub type __uint32_t = libc::c_uint;
pub type __int64_t = libc::c_long;
pub type __off_t = libc::c_long;
pub type __off64_t = libc::c_long;
pub type __ssize_t = libc::c_long;
pub type int8_t = __int8_t;
pub type int16_t = __int16_t;
pub type int32_t = __int32_t;
pub type int64_t = __int64_t;
pub type uint8_t = __uint8_t;
pub type uint16_t = __uint16_t;
pub type uint32_t = __uint32_t;
pub type size_t = libc::c_ulong;
pub type ssize_t = __ssize_t;
/*
   american fuzzy lop++ - type definitions and minor macros
   --------------------------------------------------------

   Originally written by Michal Zalewski

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

 */
pub type u8_0 = uint8_t;
pub type u16_0 = uint16_t;
pub type u32_0 = uint32_t;
/*

   Ugh. There is an unintended compiler / glibc #include glitch caused by
   combining the u64 type an %llu in format strings, necessitating a workaround.

   In essence, the compiler is always looking for 'unsigned long long' for %llu.
   On 32-bit systems, the u64 type (aliased to uint64_t) is expanded to
   'unsigned long long' in <bits/types.h>, so everything checks out.

   But on 64-bit systems, it is #ifdef'ed in the same file as 'unsigned long'.
   Now, it only happens in circumstances where the type happens to have the
   expected bit width, *but* the compiler does not know that... and complains
   about 'unsigned long' being unsafe to pass to %llu.

 */
pub type u64_0 = libc::c_ulonglong;
/* ^__x86_64__ */
pub type s8 = int8_t;
pub type s16 = int16_t;
pub type s32 = int32_t;
pub type s64 = int64_t;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct _IO_FILE {
    pub _flags: libc::c_int,
    pub _IO_read_ptr: *mut libc::c_char,
    pub _IO_read_end: *mut libc::c_char,
    pub _IO_read_base: *mut libc::c_char,
    pub _IO_write_base: *mut libc::c_char,
    pub _IO_write_ptr: *mut libc::c_char,
    pub _IO_write_end: *mut libc::c_char,
    pub _IO_buf_base: *mut libc::c_char,
    pub _IO_buf_end: *mut libc::c_char,
    pub _IO_save_base: *mut libc::c_char,
    pub _IO_backup_base: *mut libc::c_char,
    pub _IO_save_end: *mut libc::c_char,
    pub _markers: *mut _IO_marker,
    pub _chain: *mut _IO_FILE,
    pub _fileno: libc::c_int,
    pub _flags2: libc::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: libc::c_ushort,
    pub _vtable_offset: libc::c_schar,
    pub _shortbuf: [libc::c_char; 1],
    pub _lock: *mut libc::c_void,
    pub _offset: __off64_t,
    pub _codecvt: *mut _IO_codecvt,
    pub _wide_data: *mut _IO_wide_data,
    pub _freeres_list: *mut _IO_FILE,
    pub _freeres_buf: *mut libc::c_void,
    pub __pad5: size_t,
    pub _mode: libc::c_int,
    pub _unused2: [libc::c_char; 20],
}
pub type _IO_lock_t = ();
pub type FILE = _IO_FILE;
/*
   american fuzzy lop++ - shared memory related header
   ---------------------------------------------------

   Originally written by Michal Zalewski

   Forkserver design by Jann Horn <jannhorn@googlemail.com>

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

   Shared code to handle the shared memory. This is used by the fuzzer
   as well the other components like afl-tmin, afl-showmap, etc...

 */
#[derive(Copy, Clone)]
#[repr(C)]
pub struct sharedmem {
    pub shm_id: s32,
    pub cmplog_shm_id: s32,
    pub map: *mut u8_0,
    pub size_alloc: size_t,
    pub size_used: size_t,
    pub cmplog_mode: libc::c_int,
    pub cmp_map: *mut cmp_map,
}
pub type sharedmem_t = sharedmem;
/*
   american fuzzy lop++ - forkserver header
   ----------------------------------------

   Originally written by Michal Zalewski

   Forkserver design by Jann Horn <jannhorn@googlemail.com>

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

   Shared code that implements a forkserver. This is used by the fuzzer
   as well the other components like afl-tmin.

 */
#[derive(Copy, Clone)]
#[repr(C)]
pub struct afl_forkserver {
    pub uses_asan: u8_0,
    pub trace_bits: *mut u8_0,
    pub use_stdin: u8_0,
    pub fsrv_pid: s32,
    pub child_pid: s32,
    pub out_dir_fd: s32,
    pub out_fd: s32,
    pub dev_urandom_fd: s32,
    pub dev_null_fd: s32,
    pub fsrv_ctl_fd: s32,
    pub fsrv_st_fd: s32,
    pub exec_tmout: u32_0,
    pub map_size: u32_0,
    pub snapshot: u32_0,
    pub mem_limit: u64_0,
    pub out_file: *mut u8_0,
    pub target_path: *mut u8_0,
    pub plot_file: *mut FILE,
    pub child_timed_out: u8_0,
    pub use_fauxsrv: u8_0,
    pub prev_timed_out: u32_0,
    pub qemu_mode: u8_0,
    pub cmplog_binary: *mut libc::c_char,
    pub init_child_func: Option<unsafe extern "C" fn(_: *mut afl_forkserver,
                                                     _:
                                                         *mut *mut libc::c_char)
                                    -> ()>,
    pub function_opt: *mut u8_0,
    pub function_ptr: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                  _: *mut u8_0, _: u32_0)
                                 -> ()>,
}
pub type afl_forkserver_t = afl_forkserver;
/*
   american fuzzy lop++ - prealloc a buffer to reuse small elements often
   ----------------------------------------------------------------------

   Originally written by Michal Zalewski

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

 */
/* If we know we'll reuse small elements often, we'll just preallocate a buffer,
 * then fall back to malloc */
// TODO: Replace free status check with bitmask+CLZ
pub type prealloc_status = libc::c_uint;
/* system malloc */
/* used in buf */
pub const PRE_STATUS_MALLOC: prealloc_status = 2;
/* free in buf */
pub const PRE_STATUS_USED: prealloc_status = 1;
pub const PRE_STATUS_UNUSED: prealloc_status = 0;
pub type pre_status_t = prealloc_status;
/*
   american fuzzy lop++ - linked list code
   ---------------------------------------

   Originally written by Michal Zalewski

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

   This allocator is not designed to resist malicious attackers (the canaries
   are small and predictable), but provides a robust and portable way to detect
   use-after-free, off-by-one writes, stale pointers, and so on.

 */
/* How many elements to allocate before malloc is needed */
#[derive(Copy, Clone)]
#[repr(C)]
pub struct list_element {
    pub pre_status: pre_status_t,
    pub prev: *mut list_element,
    pub next: *mut list_element,
    pub data: *mut libc::c_void,
}
pub type element_t = list_element;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct queue_entry {
    pub fname: *mut u8_0,
    pub len: u32_0,
    pub cal_failed: u8_0,
    pub trim_done: u8_0,
    pub was_fuzzed: u8_0,
    pub passed_det: u8_0,
    pub has_new_cov: u8_0,
    pub var_behavior: u8_0,
    pub favored: u8_0,
    pub fs_redundant: u8_0,
    pub fully_colorized: u8_0,
    pub bitmap_size: u32_0,
    pub fuzz_level: u32_0,
    pub exec_cksum: u32_0,
    pub exec_us: u64_0,
    pub handicap: u64_0,
    pub n_fuzz: u64_0,
    pub depth: u64_0,
    pub trace_mini: *mut u8_0,
    pub tc_ref: u32_0,
    pub next: *mut queue_entry,
    pub next_100: *mut queue_entry,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct extra_data {
    pub data: *mut u8_0,
    pub len: u32_0,
    pub hit_cnt: u32_0,
}
pub type C2RustUnnamed = libc::c_uint;
pub const STAGE_ITS: C2RustUnnamed = 21;
pub const STAGE_COLORIZATION: C2RustUnnamed = 20;
pub const STAGE_CUSTOM_MUTATOR: C2RustUnnamed = 19;
pub const STAGE_RADAMSA: C2RustUnnamed = 18;
pub const STAGE_PYTHON: C2RustUnnamed = 17;
pub const STAGE_SPLICE: C2RustUnnamed = 16;
pub const STAGE_HAVOC: C2RustUnnamed = 15;
pub const STAGE_EXTRAS_AO: C2RustUnnamed = 14;
pub const STAGE_EXTRAS_UI: C2RustUnnamed = 13;
pub const STAGE_EXTRAS_UO: C2RustUnnamed = 12;
pub const STAGE_INTEREST32: C2RustUnnamed = 11;
pub const STAGE_INTEREST16: C2RustUnnamed = 10;
pub const STAGE_INTEREST8: C2RustUnnamed = 9;
pub const STAGE_ARITH32: C2RustUnnamed = 8;
pub const STAGE_ARITH16: C2RustUnnamed = 7;
pub const STAGE_ARITH8: C2RustUnnamed = 6;
pub const STAGE_FLIP32: C2RustUnnamed = 5;
pub const STAGE_FLIP16: C2RustUnnamed = 4;
pub const STAGE_FLIP8: C2RustUnnamed = 3;
pub const STAGE_FLIP4: C2RustUnnamed = 2;
pub const STAGE_FLIP2: C2RustUnnamed = 1;
pub const STAGE_FLIP1: C2RustUnnamed = 0;
pub type C2RustUnnamed_0 = libc::c_uint;
pub const STAGE_VAL_BE: C2RustUnnamed_0 = 2;
pub const STAGE_VAL_LE: C2RustUnnamed_0 = 1;
pub const STAGE_VAL_NONE: C2RustUnnamed_0 = 0;
pub type C2RustUnnamed_1 = libc::c_uint;
pub const FAULT_NOBITS: C2RustUnnamed_1 = 5;
pub const FAULT_NOINST: C2RustUnnamed_1 = 4;
pub const FAULT_ERROR: C2RustUnnamed_1 = 3;
pub const FAULT_CRASH: C2RustUnnamed_1 = 2;
pub const FAULT_TMOUT: C2RustUnnamed_1 = 1;
pub const FAULT_NONE: C2RustUnnamed_1 = 0;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct MOpt_globals {
    pub finds: *mut u64_0,
    pub finds_v2: *mut u64_0,
    pub cycles: *mut u64_0,
    pub cycles_v2: *mut u64_0,
    pub cycles_v3: *mut u64_0,
    pub is_pilot_mode: u32_0,
    pub pTime: *mut u64_0,
    pub period: u64_0,
    pub havoc_stagename: *mut libc::c_char,
    pub splice_stageformat: *mut libc::c_char,
    pub havoc_stagenameshort: *mut libc::c_char,
    pub splice_stagenameshort: *mut libc::c_char,
}
pub type MOpt_globals_t = MOpt_globals;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct afl_env_vars {
    pub afl_skip_cpufreq: u8_0,
    pub afl_exit_when_done: u8_0,
    pub afl_no_affinity: u8_0,
    pub afl_skip_bin_check: u8_0,
    pub afl_dumb_forksrv: u8_0,
    pub afl_import_first: u8_0,
    pub afl_custom_mutator_only: u8_0,
    pub afl_no_ui: u8_0,
    pub afl_force_ui: u8_0,
    pub afl_i_dont_care_about_missing_crashes: u8_0,
    pub afl_bench_just_one: u8_0,
    pub afl_bench_until_crash: u8_0,
    pub afl_debug_child_output: u8_0,
    pub afl_autoresume: u8_0,
    pub afl_cal_fast: u8_0,
    pub afl_tmpdir: *mut u8_0,
    pub afl_post_library: *mut u8_0,
    pub afl_custom_mutator_library: *mut u8_0,
    pub afl_python_module: *mut u8_0,
    pub afl_path: *mut u8_0,
    pub afl_hang_tmout: *mut u8_0,
    pub afl_skip_crashes: *mut u8_0,
    pub afl_preload: *mut u8_0,
}
pub type afl_env_vars_t = afl_env_vars;
#[derive(Copy, Clone)]
#[repr(C)]
pub struct afl_state {
    pub _id: u32_0,
    pub fsrv: afl_forkserver_t,
    pub shm: sharedmem_t,
    pub afl_env: afl_env_vars_t,
    pub argv: *mut *mut libc::c_char,
    pub orig_hit_cnt_puppet: u64_0,
    pub last_limit_time_start: u64_0,
    pub tmp_pilot_time: u64_0,
    pub total_pacemaker_time: u64_0,
    pub total_puppet_find: u64_0,
    pub temp_puppet_find: u64_0,
    pub most_time_key: u64_0,
    pub most_time: u64_0,
    pub most_execs_key: u64_0,
    pub most_execs: u64_0,
    pub old_hit_count: u64_0,
    pub force_ui_update: u64_0,
    pub mopt_globals_core: MOpt_globals_t,
    pub mopt_globals_pilot: MOpt_globals_t,
    pub limit_time_puppet: s32,
    pub SPLICE_CYCLES_puppet: s32,
    pub limit_time_sig: s32,
    pub key_puppet: s32,
    pub key_module: s32,
    pub w_init: libc::c_double,
    pub w_end: libc::c_double,
    pub w_now: libc::c_double,
    pub g_now: s32,
    pub g_max: s32,
    pub tmp_core_time: u64_0,
    pub swarm_now: s32,
    pub x_now: [[libc::c_double; 16]; 5],
    pub L_best: [[libc::c_double; 16]; 5],
    pub eff_best: [[libc::c_double; 16]; 5],
    pub G_best: [libc::c_double; 16],
    pub v_now: [[libc::c_double; 16]; 5],
    pub probability_now: [[libc::c_double; 16]; 5],
    pub swarm_fitness: [libc::c_double; 5],
    pub stage_finds_puppet: [[u64_0; 16]; 5],
    pub stage_finds_puppet_v2: [[u64_0; 16]; 5],
    pub stage_cycles_puppet_v2: [[u64_0; 16]; 5],
    pub stage_cycles_puppet_v3: [[u64_0; 16]; 5],
    pub stage_cycles_puppet: [[u64_0; 16]; 5],
    pub operator_finds_puppet: [u64_0; 16],
    pub core_operator_finds_puppet: [u64_0; 16],
    pub core_operator_finds_puppet_v2: [u64_0; 16],
    pub core_operator_cycles_puppet: [u64_0; 16],
    pub core_operator_cycles_puppet_v2: [u64_0; 16],
    pub core_operator_cycles_puppet_v3: [u64_0; 16],
    pub period_pilot_tmp: libc::c_double,
    pub key_lv: s32,
    pub in_dir: *mut u8_0,
    pub out_dir: *mut u8_0,
    pub tmp_dir: *mut u8_0,
    pub sync_dir: *mut u8_0,
    pub sync_id: *mut u8_0,
    pub power_name: *mut u8_0,
    pub use_banner: *mut u8_0,
    pub in_bitmap: *mut u8_0,
    pub file_extension: *mut u8_0,
    pub orig_cmdline: *mut u8_0,
    pub infoexec: *mut u8_0,
    pub hang_tmout: u32_0,
    pub cal_cycles: u8_0,
    pub cal_cycles_long: u8_0,
    pub no_unlink: u8_0,
    pub debug: u8_0,
    pub custom_only: u8_0,
    pub python_only: u8_0,
    pub stats_update_freq: u32_0,
    pub schedule: u8_0,
    pub havoc_max_mult: u8_0,
    pub use_radamsa: u8_0,
    pub radamsa_mutate_ptr: Option<unsafe extern "C" fn(_: *mut u8_0,
                                                        _: size_t,
                                                        _: *mut u8_0,
                                                        _: size_t, _: u32_0)
                                       -> size_t>,
    pub skip_deterministic: u8_0,
    pub force_deterministic: u8_0,
    pub use_splicing: u8_0,
    pub dumb_mode: u8_0,
    pub score_changed: u8_0,
    pub kill_signal: u8_0,
    pub resuming_fuzz: u8_0,
    pub timeout_given: u8_0,
    pub not_on_tty: u8_0,
    pub term_too_small: u8_0,
    pub no_forkserver: u8_0,
    pub crash_mode: u8_0,
    pub in_place_resume: u8_0,
    pub autoresume: u8_0,
    pub auto_changed: u8_0,
    pub no_cpu_meter_red: u8_0,
    pub no_arith: u8_0,
    pub shuffle_queue: u8_0,
    pub bitmap_changed: u8_0,
    pub unicorn_mode: u8_0,
    pub use_wine: u8_0,
    pub skip_requested: u8_0,
    pub run_over10m: u8_0,
    pub persistent_mode: u8_0,
    pub deferred_mode: u8_0,
    pub fixed_seed: u8_0,
    pub fast_cal: u8_0,
    pub disable_trim: u8_0,
    pub virgin_bits: [u8_0; 65536],
    pub virgin_tmout: [u8_0; 65536],
    pub virgin_crash: [u8_0; 65536],
    pub var_bytes: [u8_0; 65536],
    pub stop_soon: u8_0,
    pub clear_screen: u8_0,
    pub queued_paths: u32_0,
    pub queued_variable: u32_0,
    pub queued_at_start: u32_0,
    pub queued_discovered: u32_0,
    pub queued_imported: u32_0,
    pub queued_favored: u32_0,
    pub queued_with_cov: u32_0,
    pub pending_not_fuzzed: u32_0,
    pub pending_favored: u32_0,
    pub cur_skipped_paths: u32_0,
    pub cur_depth: u32_0,
    pub max_depth: u32_0,
    pub useless_at_start: u32_0,
    pub var_byte_count: u32_0,
    pub current_entry: u32_0,
    pub havoc_div: u32_0,
    pub total_crashes: u64_0,
    pub unique_crashes: u64_0,
    pub total_tmouts: u64_0,
    pub unique_tmouts: u64_0,
    pub unique_hangs: u64_0,
    pub total_execs: u64_0,
    pub last_crash_execs: u64_0,
    pub queue_cycle: u64_0,
    pub cycles_wo_finds: u64_0,
    pub trim_execs: u64_0,
    pub bytes_trim_in: u64_0,
    pub bytes_trim_out: u64_0,
    pub blocks_eff_total: u64_0,
    pub blocks_eff_select: u64_0,
    pub start_time: u64_0,
    pub last_path_time: u64_0,
    pub last_crash_time: u64_0,
    pub last_hang_time: u64_0,
    pub slowest_exec_ms: u32_0,
    pub subseq_tmouts: u32_0,
    pub stage_name: *mut u8_0,
    pub stage_short: *mut u8_0,
    pub syncing_party: *mut u8_0,
    pub stage_name_buf: [u8_0; 64],
    pub stage_cur: s32,
    pub stage_max: s32,
    pub splicing_with: s32,
    pub master_id: u32_0,
    pub master_max: u32_0,
    pub syncing_case: u32_0,
    pub stage_cur_byte: s32,
    pub stage_cur_val: s32,
    pub stage_val_type: u8_0,
    pub stage_finds: [u64_0; 32],
    pub stage_cycles: [u64_0; 32],
    pub rand_cnt: u32_0,
    pub rand_seed: [u32_0; 2],
    pub init_seed: s64,
    pub total_cal_us: u64_0,
    pub total_cal_cycles: u64_0,
    pub total_bitmap_size: u64_0,
    pub total_bitmap_entries: u64_0,
    pub cpu_core_count: s32,
    pub cpu_aff: s32,
    pub queue: *mut queue_entry,
    pub queue_cur: *mut queue_entry,
    pub queue_top: *mut queue_entry,
    pub q_prev100: *mut queue_entry,
    pub top_rated: [*mut queue_entry; 65536],
    pub extras: *mut extra_data,
    pub extras_cnt: u32_0,
    pub a_extras: *mut extra_data,
    pub a_extras_cnt: u32_0,
    pub post_init: Option<unsafe extern "C" fn(_: *mut afl_state)
                              -> *mut libc::c_void>,
    pub post_handler: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                  _: *mut u8_0, _: u32_0,
                                                  _: *mut *mut u8_0)
                                 -> size_t>,
    pub post_deinit: Option<unsafe extern "C" fn(_: *mut libc::c_void)
                                -> *mut libc::c_void>,
    pub post_data: *mut libc::c_void,
    pub cmplog_binary: *mut libc::c_char,
    pub cmplog_fsrv: afl_forkserver_t,
    pub mutator: *mut custom_mutator,
    pub cmplog_fsrv_ctl_fd: s32,
    pub cmplog_fsrv_st_fd: s32,
    pub cmplog_prev_timed_out: u32_0,
    pub describe_op_buf_256: [u8_0; 256],
    pub maybe_add_auto: *mut libc::c_void,
    pub last_bitmap_cvg: libc::c_double,
    pub last_stability: libc::c_double,
    pub last_eps: libc::c_double,
    pub plot_prev_qp: u32_0,
    pub plot_prev_pf: u32_0,
    pub plot_prev_pnf: u32_0,
    pub plot_prev_ce: u32_0,
    pub plot_prev_md: u32_0,
    pub plot_prev_qc: u64_0,
    pub plot_prev_uc: u64_0,
    pub plot_prev_uh: u64_0,
    pub stats_last_stats_ms: u64_0,
    pub stats_last_plot_ms: u64_0,
    pub stats_last_ms: u64_0,
    pub stats_last_execs: u64_0,
    pub stats_avg_exec: libc::c_double,
    pub clean_trace: [u8_0; 65536],
    pub clean_trace_custom: [u8_0; 65536],
    pub first_trace: [u8_0; 65536],
    pub out_buf: *mut u8_0,
    pub out_size: size_t,
    pub out_scratch_buf: *mut u8_0,
    pub out_scratch_size: size_t,
    pub eff_buf: *mut u8_0,
    pub eff_size: size_t,
    pub in_buf: *mut u8_0,
    pub in_size: size_t,
    pub in_scratch_buf: *mut u8_0,
    pub in_scratch_size: size_t,
    pub ex_buf: *mut u8_0,
    pub ex_size: size_t,
}
#[derive(Copy, Clone)]
#[repr(C)]
pub struct custom_mutator {
    pub name: *const libc::c_char,
    pub dh: *mut libc::c_void,
    pub pre_save_buf: *mut u8_0,
    pub pre_save_size: size_t,
    pub data: *mut libc::c_void,
    pub afl_custom_init: Option<unsafe extern "C" fn(_: *mut afl_state_t,
                                                     _: libc::c_uint)
                                    -> *mut libc::c_void>,
    pub afl_custom_fuzz: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                     _: *mut u8_0, _: size_t,
                                                     _: *mut *mut u8_0,
                                                     _: *mut u8_0, _: size_t,
                                                     _: size_t) -> size_t>,
    pub afl_custom_pre_save: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                         _: *mut u8_0,
                                                         _: size_t,
                                                         _: *mut *mut u8_0)
                                        -> size_t>,
    pub afl_custom_init_trim: Option<unsafe extern "C" fn(_:
                                                              *mut libc::c_void,
                                                          _: *mut u8_0,
                                                          _: size_t) -> s32>,
    pub afl_custom_trim: Option<unsafe extern "C" fn(_: *mut libc::c_void,
                                                     _: *mut *mut u8_0)
                                    -> size_t>,
    pub afl_custom_post_trim: Option<unsafe extern "C" fn(_:
                                                              *mut libc::c_void,
                                                          _: u8_0) -> s32>,
    pub afl_custom_havoc_mutation: Option<unsafe extern "C" fn(_:
                                                                   *mut libc::c_void,
                                                               _: *mut u8_0,
                                                               _: size_t,
                                                               _:
                                                                   *mut *mut u8_0,
                                                               _: size_t)
                                              -> size_t>,
    pub afl_custom_havoc_mutation_probability: Option<unsafe extern "C" fn(_:
                                                                               *mut libc::c_void)
                                                          -> u8_0>,
    pub afl_custom_queue_get: Option<unsafe extern "C" fn(_:
                                                              *mut libc::c_void,
                                                          _: *const u8_0)
                                         -> u8_0>,
    pub afl_custom_queue_new_entry: Option<unsafe extern "C" fn(_:
                                                                    *mut libc::c_void,
                                                                _:
                                                                    *const u8_0,
                                                                _:
                                                                    *const u8_0)
                                               -> ()>,
    pub afl_custom_deinit: Option<unsafe extern "C" fn(_: *mut libc::c_void)
                                      -> ()>,
}
pub type afl_state_t = afl_state;
/* Free memory, checking for double free and corrupted heap. When DEBUG_BUILD
   is set, the old memory will be also clobbered with 0xFF. */
#[inline]
unsafe extern "C" fn DFL_ck_free(mut mem: *mut libc::c_void) {
    if mem.is_null() { return }
    free(mem);
}
/* Re-allocate a buffer, checking for issues and zeroing any newly-added tail.
   With DEBUG_BUILD, the buffer is always reallocated to a new addresses and the
   old memory is clobbered with 0xFF. */
#[inline]
unsafe extern "C" fn DFL_ck_realloc(mut orig: *mut libc::c_void,
                                    mut size: u32_0) -> *mut libc::c_void {
    let mut ret: *mut libc::c_void = 0 as *mut libc::c_void;
    if size == 0 { DFL_ck_free(orig); return 0 as *mut libc::c_void }
    if size > 0x40000000 as libc::c_int as libc::c_uint {
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mBad alloc request: %u bytes\x00"
                   as *const u8 as *const libc::c_char, size);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\n\x00"
                   as *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"include/alloc-inl.h\x00" as *const u8 as *const libc::c_char,
               139 as libc::c_int);
        abort();
    }
    /* Catch pointer issues sooner: force relocation and make sure that the
     original buffer is wiped. */
    ret = realloc(orig, size as libc::c_ulong);
    if ret.is_null() {
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mOut of memory: can\'t allocate %u bytes\x00"
                   as *const u8 as *const libc::c_char, size);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\n\x00"
                   as *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"include/alloc-inl.h\x00" as *const u8 as *const libc::c_char,
               146 as libc::c_int);
        abort();
    }
    return ret;
}
/* In non-debug mode, we just do straightforward aliasing of the above functions
   to user-visible names such as ck_alloc(). */
/* _WANT_ORIGINAL_AFL_ALLOC */
/* This function calculates the next power of 2 greater or equal its argument.
 @return The rounded up power of 2 (if no overflow) or 0 on overflow.
*/
#[inline]
unsafe extern "C" fn next_pow2(mut in_0: size_t) -> size_t {
    if in_0 == 0 as libc::c_int as libc::c_ulong ||
           in_0 > -(1 as libc::c_int) as size_t {
        return 0 as libc::c_int as size_t
    } /* avoid undefined behaviour under-/overflow */
    let mut out: size_t =
        in_0.wrapping_sub(1 as libc::c_int as libc::c_ulong);
    out |= out >> 1 as libc::c_int;
    out |= out >> 2 as libc::c_int;
    out |= out >> 4 as libc::c_int;
    out |= out >> 8 as libc::c_int;
    out |= out >> 16 as libc::c_int;
    return out.wrapping_add(1 as libc::c_int as libc::c_ulong);
}
/* This function makes sure *size is > size_needed after call.
 It will realloc *buf otherwise.
 *size will grow exponentially as per:
 https://blog.mozilla.org/nnethercote/2014/11/04/please-grow-your-buffers-exponentially/
 Will FATAL if size_needed is <1.
 @return For convenience, this function returns *buf.
 */
#[inline]
unsafe extern "C" fn ck_maybe_grow(mut buf: *mut *mut libc::c_void,
                                   mut size: *mut size_t,
                                   mut size_needed: size_t)
 -> *mut libc::c_void {
    /* Oops. found a bug? */
    if size_needed < 1 as libc::c_int as libc::c_ulong {
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mcannot grow to non-positive size\x00"
                   as *const u8 as *const libc::c_char);
        printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                   as *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"include/alloc-inl.h\x00" as *const u8 as *const libc::c_char,
               827 as libc::c_int);
        exit(1 as libc::c_int);
    }
    /* No need to realloc */
    if *size >= size_needed { return *buf }
    /* No initial size was set */
    if size_needed < 64 as libc::c_int as libc::c_ulong {
        size_needed = 64 as libc::c_int as size_t
    }
    /* grow exponentially */
    let mut next_size: size_t = next_pow2(size_needed);
    /* handle overflow */
    if next_size == 0 { next_size = size_needed }
    /* alloc */
    *buf = DFL_ck_realloc(*buf, next_size as u32_0);
    *size = next_size;
    return *buf;
}
/* Swaps buf1 ptr and buf2 ptr, as well as their sizes */
#[inline]
unsafe extern "C" fn swap_bufs(mut buf1: *mut *mut libc::c_void,
                               mut size1: *mut size_t,
                               mut buf2: *mut *mut libc::c_void,
                               mut size2: *mut size_t) {
    let mut scratch_buf: *mut libc::c_void = *buf1;
    let mut scratch_size: size_t = *size1;
    *buf1 = *buf2;
    *size1 = *size2;
    *buf2 = scratch_buf;
    *size2 = scratch_size;
}
/*
   american fuzzy lop++ - hashing function
   ---------------------------------------

   The hash32() function is a variant of MurmurHash3, a good
   non-cryptosafe hashing function developed by Austin Appleby.

   For simplicity, this variant does *NOT* accept buffer lengths
   that are not divisible by 8 bytes. The 32-bit version is otherwise
   similar to the original; the 64-bit one is a custom hack with
   mostly-unproven properties.

   Austin's original code is public domain.

   Other code written by Michal Zalewski

   Copyright 2016 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

 */
#[inline]
unsafe extern "C" fn hash32(mut key: *const libc::c_void, mut len: u32_0,
                            mut seed: u32_0) -> u32_0 {
    let mut data: *const u64_0 = key as *mut u64_0;
    let mut h1: u64_0 = (seed ^ len) as u64_0;
    len >>= 3 as libc::c_int;
    loop  {
        let fresh0 = len;
        len = len.wrapping_sub(1);
        if !(fresh0 != 0) { break ; }
        let fresh1 = data;
        data = data.offset(1);
        let mut k1: u64_0 = *fresh1;
        k1 =
            (k1 as
                 libc::c_ulonglong).wrapping_mul(0x87c37b91114253d5 as
                                                     libc::c_ulonglong) as
                u64_0 as u64_0;
        k1 =
            k1 << 31 as libc::c_int |
                k1 >> 64 as libc::c_int - 31 as libc::c_int;
        k1 =
            (k1 as
                 libc::c_ulonglong).wrapping_mul(0x4cf5ad432745937f as
                                                     libc::c_ulonglong) as
                u64_0 as u64_0;
        h1 ^= k1;
        h1 =
            h1 << 27 as libc::c_int |
                h1 >> 64 as libc::c_int - 27 as libc::c_int;
        h1 =
            h1.wrapping_mul(5 as libc::c_int as
                                libc::c_ulonglong).wrapping_add(0x52dce729 as
                                                                    libc::c_int
                                                                    as
                                                                    libc::c_ulonglong)
    }
    h1 ^= h1 >> 33 as libc::c_int;
    h1 =
        (h1 as
             libc::c_ulonglong).wrapping_mul(0xff51afd7ed558ccd as
                                                 libc::c_ulonglong) as u64_0
            as u64_0;
    h1 ^= h1 >> 33 as libc::c_int;
    h1 =
        (h1 as
             libc::c_ulonglong).wrapping_mul(0xc4ceb9fe1a85ec53 as
                                                 libc::c_ulonglong) as u64_0
            as u64_0;
    h1 ^= h1 >> 33 as libc::c_int;
    return h1 as u32_0;
}
#[inline]
unsafe extern "C" fn rand_below(mut afl: *mut afl_state_t, mut limit: u32_0)
 -> u32_0 {
    let fresh2 = (*afl).rand_cnt;
    (*afl).rand_cnt = (*afl).rand_cnt.wrapping_sub(1);
    if fresh2 == 0 && (*afl).fixed_seed == 0 {
        let mut _len: u32_0 =
            ::std::mem::size_of::<[u32_0; 2]>() as libc::c_ulong as u32_0;
        let mut _res: s32 =
            read((*afl).fsrv.dev_urandom_fd,
                 &mut (*afl).rand_seed as *mut [u32_0; 2] as
                     *mut libc::c_void, _len as size_t) as s32;
        if _res as libc::c_uint != _len {
            if _res < 0 as libc::c_int {
                fflush(stdout);
                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mShort read from %s\x00"
                           as *const u8 as *const libc::c_char,
                       b"/dev/urandom\x00" as *const u8 as
                           *const libc::c_char);
                printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                           as *const u8 as *const libc::c_char,
                       b"func_unknown\x00" as *const u8 as
                           *const libc::c_char,
                       b"include/afl-fuzz.h\x00" as *const u8 as
                           *const libc::c_char, 948 as libc::c_int);
                printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as
                           *const u8 as *const libc::c_char,
                       strerror(*__errno_location()));
                exit(1 as libc::c_int);
            } else {
                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mShort read from %s\x00"
                           as *const u8 as *const libc::c_char,
                       b"/dev/urandom\x00" as *const u8 as
                           *const libc::c_char);
                printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                           as *const u8 as *const libc::c_char,
                       b"func_unknown\x00" as *const u8 as
                           *const libc::c_char,
                       b"include/afl-fuzz.h\x00" as *const u8 as
                           *const libc::c_char, 948 as libc::c_int);
                exit(1 as libc::c_int);
            }
        }
        srandom((*afl).rand_seed[0 as libc::c_int as usize]);
        (*afl).rand_cnt =
            ((10000 as libc::c_int / 2 as libc::c_int) as
                 libc::c_uint).wrapping_add((*afl).rand_seed[1 as libc::c_int
                                                                 as
                                                                 usize].wrapping_rem(10000
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint))
    }
    return (random() % limit as libc::c_long) as u32_0;
}
#[inline]
unsafe extern "C" fn get_rand_seed(mut afl: *mut afl_state_t) -> u32_0 {
    if (*afl).fixed_seed != 0 { return (*afl).init_seed as u32_0 }
    return (*afl).rand_seed[0 as libc::c_int as usize];
}
/*
   american fuzzy lop++ - fuzze_one routines in different flavours
   ---------------------------------------------------------------

   Originally written by Michal Zalewski

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                        Heiko Eißfeldt <heiko.eissfeldt@hexco.de> and
                        Andrea Fioraldi <andreafioraldi@gmail.com>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

   This is the real deal: the program takes an instrumented binary and
   attempts a variety of basic fuzzing tricks, paying close attention to
   how they affect the execution path.

 */
/* MOpt */
#[no_mangle]
pub unsafe extern "C" fn select_algorithm(mut afl: *mut afl_state_t)
 -> libc::c_int {
    let mut i_puppet: libc::c_int = 0;
    let mut j_puppet: libc::c_int = 0;
    let mut sele: libc::c_double =
        rand_below(afl, 10000 as libc::c_int as u32_0) as libc::c_double *
            0.0001f64;
    j_puppet = 0 as libc::c_int;
    i_puppet = 0 as libc::c_int;
    while i_puppet < 16 as libc::c_int {
        if i_puppet == 0 as libc::c_int {
            if sele <
                   (*afl).probability_now[(*afl).swarm_now as
                                              usize][i_puppet as usize] {
                break ;
            }
        } else if sele <
                      (*afl).probability_now[(*afl).swarm_now as
                                                 usize][i_puppet as usize] {
            j_puppet = 1 as libc::c_int;
            break ;
        }
        i_puppet += 1
    }
    if j_puppet == 1 as libc::c_int &&
           sele <
               (*afl).probability_now[(*afl).swarm_now as
                                          usize][(i_puppet - 1 as libc::c_int)
                                                     as usize] {
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0merror select_algorithm\x00"
                   as *const u8 as *const libc::c_char);
        printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                   as *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"src/afl-fuzz-one.c\x00" as *const u8 as *const libc::c_char,
               57 as libc::c_int);
        exit(1 as libc::c_int);
    }
    return i_puppet;
}
/* Helper to choose random block len for block operations in fuzz_one().
   Doesn't return zero, provided that max_len is > 0. */
unsafe extern "C" fn choose_block_len(mut afl: *mut afl_state_t,
                                      mut limit: u32_0) -> u32_0 {
    let mut min_value: u32_0 = 0;
    let mut max_value: u32_0 = 0;
    let mut rlim: u32_0 =
        ({
             let mut _a: u64_0 = (*afl).queue_cycle;
             let mut _b: libc::c_int = 3 as libc::c_int;
             if _a < _b as libc::c_ulonglong {
                 _a
             } else { _b as libc::c_ulonglong }
         }) as u32_0;
    if (*afl).run_over10m == 0 { rlim = 1 as libc::c_int as u32_0 }
    match rand_below(afl, rlim) {
        0 => {
            min_value = 1 as libc::c_int as u32_0;
            max_value = 32 as libc::c_int as u32_0
        }
        1 => {
            min_value = 32 as libc::c_int as u32_0;
            max_value = 128 as libc::c_int as u32_0
        }
        _ => {
            if rand_below(afl, 10 as libc::c_int as u32_0) != 0 {
                min_value = 128 as libc::c_int as u32_0;
                max_value = 1500 as libc::c_int as u32_0
            } else {
                min_value = 1500 as libc::c_int as u32_0;
                max_value = 32768 as libc::c_int as u32_0
            }
        }
    }
    if min_value >= limit { min_value = 1 as libc::c_int as u32_0 }
    return min_value.wrapping_add(rand_below(afl,
                                             ({
                                                  let mut _a: u32_0 =
                                                      max_value;
                                                  let mut _b: u32_0 = limit;
                                                  (if _a < _b {
                                                       _a
                                                   } else { _b })
                                              }).wrapping_sub(min_value).wrapping_add(1
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          libc::c_uint)));
}
/* Helper function to see if a particular change (xor_val = old ^ new) could
   be a product of deterministic bit flips with the lengths and stepovers
   attempted by afl-fuzz. This is used to avoid dupes in some of the
   deterministic fuzzing operations that follow bit flips. We also
   return 1 if xor_val is zero, which implies that the old and attempted new
   values are identical and the exec would be a waste of time. */
unsafe extern "C" fn could_be_bitflip(mut xor_val: u32_0) -> u8_0 {
    let mut sh: u32_0 = 0 as libc::c_int as u32_0;
    if xor_val == 0 { return 1 as libc::c_int as u8_0 }
    /* Shift left until first bit set. */
    while xor_val & 1 as libc::c_int as libc::c_uint == 0 {
        sh = sh.wrapping_add(1);
        xor_val >>= 1 as libc::c_int
    }
    /* 1-, 2-, and 4-bit patterns are OK anywhere. */
    if xor_val == 1 as libc::c_int as libc::c_uint ||
           xor_val == 3 as libc::c_int as libc::c_uint ||
           xor_val == 15 as libc::c_int as libc::c_uint {
        return 1 as libc::c_int as u8_0
    }
    /* 8-, 16-, and 32-bit patterns are OK only if shift factor is
     divisible by 8, since that's the stepover for these ops. */
    if sh & 7 as libc::c_int as libc::c_uint != 0 {
        return 0 as libc::c_int as u8_0
    }
    if xor_val == 0xff as libc::c_int as libc::c_uint ||
           xor_val == 0xffff as libc::c_int as libc::c_uint ||
           xor_val == 0xffffffff as libc::c_uint {
        return 1 as libc::c_int as u8_0
    }
    return 0 as libc::c_int as u8_0;
}
/* Helper function to see if a particular value is reachable through
   arithmetic operations. Used for similar purposes. */
unsafe extern "C" fn could_be_arith(mut old_val: u32_0, mut new_val: u32_0,
                                    mut blen: u8_0) -> u8_0 {
    let mut i: u32_0 = 0;
    let mut ov: u32_0 = 0 as libc::c_int as u32_0;
    let mut nv: u32_0 = 0 as libc::c_int as u32_0;
    let mut diffs: u32_0 = 0 as libc::c_int as u32_0;
    if old_val == new_val { return 1 as libc::c_int as u8_0 }
    /* See if one-byte adjustments to any byte could produce this result. */
    i = 0 as libc::c_int as u32_0;
    while i < blen as libc::c_uint {
        let mut a: u8_0 =
            (old_val >> (8 as libc::c_int as libc::c_uint).wrapping_mul(i)) as
                u8_0;
        let mut b: u8_0 =
            (new_val >> (8 as libc::c_int as libc::c_uint).wrapping_mul(i)) as
                u8_0;
        if a as libc::c_int != b as libc::c_int {
            diffs = diffs.wrapping_add(1);
            ov = a as u32_0;
            nv = b as u32_0
        }
        i = i.wrapping_add(1)
    }
    /* If only one byte differs and the values are within range, return 1. */
    if diffs == 1 as libc::c_int as libc::c_uint {
        if ov.wrapping_sub(nv) as u8_0 as libc::c_int <= 35 as libc::c_int ||
               nv.wrapping_sub(ov) as u8_0 as libc::c_int <= 35 as libc::c_int
           {
            return 1 as libc::c_int as u8_0
        }
    }
    if blen as libc::c_int == 1 as libc::c_int {
        return 0 as libc::c_int as u8_0
    }
    /* See if two-byte adjustments to any byte would produce this result. */
    diffs = 0 as libc::c_int as u32_0;
    i = 0 as libc::c_int as u32_0;
    while i < (blen as libc::c_int / 2 as libc::c_int) as libc::c_uint {
        let mut a_0: u16_0 =
            (old_val >> (16 as libc::c_int as libc::c_uint).wrapping_mul(i))
                as u16_0;
        let mut b_0: u16_0 =
            (new_val >> (16 as libc::c_int as libc::c_uint).wrapping_mul(i))
                as u16_0;
        if a_0 as libc::c_int != b_0 as libc::c_int {
            diffs = diffs.wrapping_add(1);
            ov = a_0 as u32_0;
            nv = b_0 as u32_0
        }
        i = i.wrapping_add(1)
    }
    /* If only one word differs and the values are within range, return 1. */
    if diffs == 1 as libc::c_int as libc::c_uint {
        if ov.wrapping_sub(nv) as u16_0 as libc::c_int <= 35 as libc::c_int ||
               nv.wrapping_sub(ov) as u16_0 as libc::c_int <=
                   35 as libc::c_int {
            return 1 as libc::c_int as u8_0
        }
        ov =
            ({
                 let mut _ret: u16_0 = ov as u16_0;
                 ((_ret as libc::c_int) << 8 as libc::c_int |
                      _ret as libc::c_int >> 8 as libc::c_int) as u16_0
             }) as u32_0;
        nv =
            ({
                 let mut _ret: u16_0 = nv as u16_0;
                 ((_ret as libc::c_int) << 8 as libc::c_int |
                      _ret as libc::c_int >> 8 as libc::c_int) as u16_0
             }) as u32_0;
        if ov.wrapping_sub(nv) as u16_0 as libc::c_int <= 35 as libc::c_int ||
               nv.wrapping_sub(ov) as u16_0 as libc::c_int <=
                   35 as libc::c_int {
            return 1 as libc::c_int as u8_0
        }
    }
    /* Finally, let's do the same thing for dwords. */
    if blen as libc::c_int == 4 as libc::c_int {
        if old_val.wrapping_sub(new_val) <= 35 as libc::c_int as libc::c_uint
               ||
               new_val.wrapping_sub(old_val) <=
                   35 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
        new_val =
            ({
                 let mut _ret: u32_0 = new_val;
                 (_ret << 24 as libc::c_int | _ret >> 24 as libc::c_int |
                      _ret << 8 as libc::c_int &
                          0xff0000 as libc::c_int as libc::c_uint) |
                     _ret >> 8 as libc::c_int &
                         0xff00 as libc::c_int as libc::c_uint
             });
        old_val =
            ({
                 let mut _ret: u32_0 = old_val;
                 (_ret << 24 as libc::c_int | _ret >> 24 as libc::c_int |
                      _ret << 8 as libc::c_int &
                          0xff0000 as libc::c_int as libc::c_uint) |
                     _ret >> 8 as libc::c_int &
                         0xff00 as libc::c_int as libc::c_uint
             });
        if old_val.wrapping_sub(new_val) <= 35 as libc::c_int as libc::c_uint
               ||
               new_val.wrapping_sub(old_val) <=
                   35 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
    }
    return 0 as libc::c_int as u8_0;
}
/* Last but not least, a similar helper to see if insertion of an
   interesting integer is redundant given the insertions done for
   shorter blen. The last param (check_le) is set if the caller
   already executed LE insertion for current blen and wants to see
   if BE variant passed in new_val is unique. */
unsafe extern "C" fn could_be_interest(mut old_val: u32_0, mut new_val: u32_0,
                                       mut blen: u8_0, mut check_le: u8_0)
 -> u8_0 {
    let mut i: u32_0 = 0;
    let mut j: u32_0 = 0;
    if old_val == new_val { return 1 as libc::c_int as u8_0 }
    /* See if one-byte insertions from interesting_8 over old_val could
     produce new_val. */
    i = 0 as libc::c_int as u32_0;
    while i < blen as libc::c_uint {
        j = 0 as libc::c_int as u32_0;
        while (j as libc::c_ulong) <
                  ::std::mem::size_of::<[s8; 9]>() as libc::c_ulong {
            let mut tval: u32_0 =
                old_val &
                    !((0xff as libc::c_int) <<
                          i.wrapping_mul(8 as libc::c_int as libc::c_uint)) as
                        libc::c_uint |
                    ((interesting_8[j as usize] as u8_0 as libc::c_int) <<
                         i.wrapping_mul(8 as libc::c_int as libc::c_uint)) as
                        libc::c_uint;
            if new_val == tval { return 1 as libc::c_int as u8_0 }
            j = j.wrapping_add(1)
        }
        i = i.wrapping_add(1)
    }
    /* Bail out unless we're also asked to examine two-byte LE insertions
     as a preparation for BE attempts. */
    if blen as libc::c_int == 2 as libc::c_int && check_le == 0 {
        return 0 as libc::c_int as u8_0
    }
    /* See if two-byte insertions over old_val could give us new_val. */
    i = 0 as libc::c_int as u32_0;
    while i < (blen as libc::c_int - 1 as libc::c_int) as libc::c_uint {
        j = 0 as libc::c_int as u32_0;
        while (j as libc::c_ulong) <
                  (::std::mem::size_of::<[s16; 19]>() as
                       libc::c_ulong).wrapping_div(2 as libc::c_int as
                                                       libc::c_ulong) {
            let mut tval_0: u32_0 =
                old_val &
                    !((0xffff as libc::c_int) <<
                          i.wrapping_mul(8 as libc::c_int as libc::c_uint)) as
                        libc::c_uint |
                    ((interesting_16[j as usize] as u16_0 as libc::c_int) <<
                         i.wrapping_mul(8 as libc::c_int as libc::c_uint)) as
                        libc::c_uint;
            if new_val == tval_0 { return 1 as libc::c_int as u8_0 }
            /* Continue here only if blen > 2. */
            if blen as libc::c_int > 2 as libc::c_int {
                tval_0 =
                    old_val &
                        !((0xffff as libc::c_int) <<
                              i.wrapping_mul(8 as libc::c_int as
                                                 libc::c_uint)) as
                            libc::c_uint |
                        ((({
                               let mut _ret: u16_0 =
                                   interesting_16[j as usize] as u16_0;
                               ((_ret as libc::c_int) << 8 as libc::c_int |
                                    _ret as libc::c_int >> 8 as libc::c_int)
                                   as u16_0
                           }) as libc::c_int) <<
                             i.wrapping_mul(8 as libc::c_int as libc::c_uint))
                            as libc::c_uint;
                if new_val == tval_0 { return 1 as libc::c_int as u8_0 }
            }
            j = j.wrapping_add(1)
        }
        i = i.wrapping_add(1)
    }
    if blen as libc::c_int == 4 as libc::c_int && check_le as libc::c_int != 0
       {
        /* See if four-byte insertions could produce the same result
       (LE only). */
        j = 0 as libc::c_int as u32_0;
        while (j as libc::c_ulong) <
                  (::std::mem::size_of::<[s32; 27]>() as
                       libc::c_ulong).wrapping_div(4 as libc::c_int as
                                                       libc::c_ulong) {
            if new_val == interesting_32[j as usize] as u32_0 {
                return 1 as libc::c_int as u8_0
            }
            j = j.wrapping_add(1)
        }
    }
    return 0 as libc::c_int as u8_0;
}
/* Helper function to compare buffers; returns first and last differing offset.
   We use this to find reasonable locations for splicing two files. */
unsafe extern "C" fn locate_diffs(mut ptr1: *mut u8_0, mut ptr2: *mut u8_0,
                                  mut len: u32_0, mut first: *mut s32,
                                  mut last: *mut s32) {
    let mut f_loc: s32 = -(1 as libc::c_int);
    let mut l_loc: s32 = -(1 as libc::c_int);
    let mut pos: u32_0 = 0;
    pos = 0 as libc::c_int as u32_0;
    while pos < len {
        let fresh3 = ptr1;
        ptr1 = ptr1.offset(1);
        let fresh4 = ptr2;
        ptr2 = ptr2.offset(1);
        if *fresh3 as libc::c_int != *fresh4 as libc::c_int {
            if f_loc == -(1 as libc::c_int) { f_loc = pos as s32 }
            l_loc = pos as s32
        }
        pos = pos.wrapping_add(1)
    }
    *first = f_loc;
    *last = l_loc;
}
/* !IGNORE_FINDS */
/* Take the current entry from the queue, fuzz it for a while. This
   function is a tad too long... returns 0 if fuzzed successfully, 1 if
   skipped or bailed out. */
#[no_mangle]
pub unsafe extern "C" fn fuzz_one_original(mut afl: *mut afl_state_t)
 -> u8_0 {
    let mut max_seed_size: u32_0 = 0;
    let mut stacked_custom: u8_0 = 0;
    let mut stacked_custom_prob: u8_0 = 0;
    let mut save_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut max_len: u32_0 = 0;
    let mut new_buf_3: *mut u8_0 = 0 as *mut u8_0;
    let mut tmp_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut current_block: u64;
    let mut len: s32 = 0;
    let mut fd: s32 = 0;
    let mut temp_len: s32 = 0;
    let mut i: s32 = 0;
    let mut j: s32 = 0;
    let mut in_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut out_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut orig_in: *mut u8_0 = 0 as *mut u8_0;
    let mut ex_tmp: *mut u8_0 = 0 as *mut u8_0;
    let mut eff_map: *mut u8_0 = 0 as *mut u8_0;
    let mut havoc_queued: u64_0 = 0 as libc::c_int as u64_0;
    let mut orig_hit_cnt: u64_0 = 0;
    let mut new_hit_cnt: u64_0 = 0;
    let mut splice_cycle: u32_0 = 0 as libc::c_int as u32_0;
    let mut perf_score: u32_0 = 100 as libc::c_int as u32_0;
    let mut orig_perf: u32_0 = 0;
    let mut prev_cksum: u32_0 = 0;
    let mut eff_cnt: u32_0 = 1 as libc::c_int as u32_0;
    let mut ret_val: u8_0 = 1 as libc::c_int as u8_0;
    let mut doing_det: u8_0 = 0 as libc::c_int as u8_0;
    let mut a_collect: [u8_0; 32] = [0; 32];
    let mut a_len: u32_0 = 0 as libc::c_int as u32_0;
    /* Not pretty, but saves a lot of writing */
    if !(*afl).mutator.is_null() &&
           (*(*afl).mutator).afl_custom_queue_get.is_some() {
        /* The custom mutator will decide to skip this test case or not. */
        if (*(*afl).mutator).afl_custom_queue_get.expect("non-null function pointer")((*(*afl).mutator).data,
                                                                                      (*(*afl).queue_cur).fname)
               == 0 {
            return 1 as libc::c_int as u8_0
        }
    }
    if (*afl).pending_favored != 0 {
        /* If we have any favored, non-fuzzed new arrivals in the queue,
       possibly skip to them at the expense of already-fuzzed or non-favored
       cases. */
        if ((*(*afl).queue_cur).was_fuzzed as libc::c_int > 0 as libc::c_int
                ||
                (*(*afl).queue_cur).fuzz_level >
                    0 as libc::c_int as libc::c_uint ||
                (*(*afl).queue_cur).favored == 0) &&
               rand_below(afl, 100 as libc::c_int as u32_0) <
                   99 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
    } else if (*afl).dumb_mode == 0 && (*(*afl).queue_cur).favored == 0 &&
                  (*afl).queued_paths > 10 as libc::c_int as libc::c_uint {
        /* Otherwise, still possibly skip non-favored cases, albeit less often.
       The odds of skipping stuff are higher for already-fuzzed inputs and
       lower for never-fuzzed entries. */
        if (*afl).queue_cycle > 1 as libc::c_int as libc::c_ulonglong &&
               ((*(*afl).queue_cur).fuzz_level ==
                    0 as libc::c_int as libc::c_uint ||
                    (*(*afl).queue_cur).was_fuzzed as libc::c_int != 0) {
            if rand_below(afl, 100 as libc::c_int as u32_0) <
                   75 as libc::c_int as libc::c_uint {
                return 1 as libc::c_int as u8_0
            }
        } else if rand_below(afl, 100 as libc::c_int as u32_0) <
                      95 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
    }
    /* ^IGNORE_FINDS */
    if (*afl).not_on_tty != 0 {
        printf(b"\x1b[1;94m[*] \x1b[0mFuzzing test case #%u (%u total, %llu uniq crashes found)...\x00"
                   as *const u8 as *const libc::c_char, (*afl).current_entry,
               (*afl).queued_paths, (*afl).unique_crashes);
        printf(b"\x1b[0m\n\x00" as *const u8 as *const libc::c_char);
        fflush(stdout);
    }
    /* Map the test case into memory. */
    fd =
        open((*(*afl).queue_cur).fname as *const libc::c_char,
             0 as libc::c_int);
    if fd < 0 as libc::c_int {
        fflush(stdout);
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to open \'%s\'\x00"
                   as *const u8 as *const libc::c_char,
               (*(*afl).queue_cur).fname);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00" as
                   *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"src/afl-fuzz-one.c\x00" as *const u8 as *const libc::c_char,
               418 as libc::c_int);
        printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as *const u8
                   as *const libc::c_char, strerror(*__errno_location()));
        exit(1 as libc::c_int);
    }
    len = (*(*afl).queue_cur).len as s32;
    in_buf =
        mmap(0 as *mut libc::c_void, len as size_t,
             0x1 as libc::c_int | 0x2 as libc::c_int, 0x2 as libc::c_int, fd,
             0 as libc::c_int as __off64_t) as *mut u8_0;
    orig_in = in_buf;
    if orig_in == -(1 as libc::c_int) as *mut libc::c_void as *mut u8_0 {
        fflush(stdout);
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to mmap \'%s\' with len %d\x00"
                   as *const u8 as *const libc::c_char,
               (*(*afl).queue_cur).fname, len);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00" as
                   *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"src/afl-fuzz-one.c\x00" as *const u8 as *const libc::c_char,
               425 as libc::c_int);
        printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as *const u8
                   as *const libc::c_char, strerror(*__errno_location()));
        exit(1 as libc::c_int);
    }
    close(fd);
    /* We could mmap() out_buf as MAP_PRIVATE, but we end up clobbering every
     single byte anyway, so it wouldn't give us any performance or memory usage
     benefits. */
    out_buf =
        ck_maybe_grow(&mut (*afl).out_buf as *mut *mut u8_0 as
                          *mut *mut libc::c_void, &mut (*afl).out_size,
                      len as size_t) as *mut u8_0;
    (*afl).subseq_tmouts = 0 as libc::c_int as u32_0;
    (*afl).cur_depth = (*(*afl).queue_cur).depth as u32_0;
    /* ******************************************
   * CALIBRATION (only if failed earlier on) *
   *******************************************/
    if (*(*afl).queue_cur).cal_failed != 0 {
        let mut res: u8_0 = FAULT_TMOUT as libc::c_int as u8_0;
        if ((*(*afl).queue_cur).cal_failed as libc::c_int) < 3 as libc::c_int
           {
            res =
                calibrate_case(afl, (*afl).queue_cur, in_buf,
                               (*afl).queue_cycle.wrapping_sub(1 as
                                                                   libc::c_int
                                                                   as
                                                                   libc::c_ulonglong)
                                   as u32_0, 0 as libc::c_int as u8_0);
            if res as libc::c_int == FAULT_ERROR as libc::c_int {
                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mUnable to execute target application\x00"
                           as *const u8 as *const libc::c_char);
                printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                           as *const u8 as *const libc::c_char,
                       b"func_unknown\x00" as *const u8 as
                           *const libc::c_char,
                       b"src/afl-fuzz-one.c\x00" as *const u8 as
                           *const libc::c_char, 453 as libc::c_int);
                exit(1 as libc::c_int);
            }
        }
        if (*afl).stop_soon as libc::c_int != 0 ||
               res as libc::c_int != (*afl).crash_mode as libc::c_int {
            (*afl).cur_skipped_paths =
                (*afl).cur_skipped_paths.wrapping_add(1);
            current_block = 12777433616733951266;
        } else { current_block = 5235537862154438448; }
    } else { current_block = 5235537862154438448; }
    match current_block {
        5235537862154438448 =>
        /* ***********
   * TRIMMING *
   ************/
        {
            if (*afl).dumb_mode == 0 && (*(*afl).queue_cur).trim_done == 0 &&
                   (*afl).disable_trim == 0 {
                let mut res_0: u8_0 =
                    trim_case(afl, (*afl).queue_cur, in_buf);
                if res_0 as libc::c_int == FAULT_ERROR as libc::c_int {
                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mUnable to execute target application\x00"
                               as *const u8 as *const libc::c_char);
                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                               as *const u8 as *const libc::c_char,
                           b"func_unknown\x00" as *const u8 as
                               *const libc::c_char,
                           b"src/afl-fuzz-one.c\x00" as *const u8 as
                               *const libc::c_char, 475 as libc::c_int);
                    exit(1 as libc::c_int);
                }
                if (*afl).stop_soon != 0 {
                    (*afl).cur_skipped_paths =
                        (*afl).cur_skipped_paths.wrapping_add(1);
                    current_block = 12777433616733951266;
                } else {
                    /* Don't retry trimming, even if it failed. */
                    (*(*afl).queue_cur).trim_done = 1 as libc::c_int as u8_0;
                    len = (*(*afl).queue_cur).len as s32;
                    current_block = 4216521074440650966;
                }
            } else { current_block = 4216521074440650966; }
            match current_block {
                12777433616733951266 => { }
                _ => {
                    memcpy(out_buf as *mut libc::c_void,
                           in_buf as *const libc::c_void,
                           len as libc::c_ulong);
                    /* ********************
   * PERFORMANCE SCORE *
   *********************/
                    perf_score = calculate_score(afl, (*afl).queue_cur);
                    orig_perf = perf_score;
                    if !(perf_score == 0 as libc::c_int as libc::c_uint) {
                        if (*afl).use_radamsa as libc::c_int >
                               1 as libc::c_int {
                            current_block = 4683855478427662309;
                        } else {
                            if (*afl).shm.cmplog_mode != 0 {
                                if input_to_state_stage(afl, in_buf, out_buf,
                                                        len as u32_0,
                                                        (*(*afl).queue_cur).exec_cksum)
                                       != 0 {
                                    current_block = 12777433616733951266;
                                } else {
                                    current_block = 17020603795727957434;
                                }
                            } else { current_block = 17020603795727957434; }
                            match current_block {
                                12777433616733951266 => { }
                                _ =>
                                /* Skip right away if -d is given, if it has not been chosen sufficiently
     often to warrant the expensive deterministic stage (fuzz_level), or
     if it has gone through deterministic testing in earlier, resumed runs
     (passed_det). */
                                {
                                    if (*afl).skip_deterministic as
                                           libc::c_int != 0 ||
                                           (*(*afl).queue_cur).passed_det == 0
                                               &&
                                               (perf_score as
                                                    libc::c_ulonglong) <
                                                   (if (*(*afl).queue_cur).depth.wrapping_mul(30
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  as
                                                                                                  libc::c_ulonglong)
                                                           <=
                                                           ((*afl).havoc_max_mult
                                                                as libc::c_int
                                                                *
                                                                100 as
                                                                    libc::c_int)
                                                               as
                                                               libc::c_ulonglong
                                                       {
                                                        (*(*afl).queue_cur).depth.wrapping_mul(30
                                                                                                   as
                                                                                                   libc::c_int
                                                                                                   as
                                                                                                   libc::c_ulonglong)
                                                    } else {
                                                        ((*afl).havoc_max_mult
                                                             as libc::c_int *
                                                             100 as
                                                                 libc::c_int)
                                                            as
                                                            libc::c_ulonglong
                                                    }) ||
                                           (*(*afl).queue_cur).passed_det as
                                               libc::c_int != 0 {
                                        current_block = 2255134846115646098;
                                    } else if (*afl).master_max != 0 &&
                                                  (*(*afl).queue_cur).exec_cksum.wrapping_rem((*afl).master_max)
                                                      !=
                                                      (*afl).master_id.wrapping_sub(1
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint)
                                     {
                                        current_block = 2255134846115646098;
                                    } else {
                                        doing_det = 1 as libc::c_int as u8_0;
                                        /* Skip deterministic fuzzing if exec path checksum puts this out of scope
     for this master instance. */
                                        /* ********************************************
   * SIMPLE BITFLIP (+dictionary construction) *
   *********************************************/
                                        /* Single walking bit. */
                                        (*afl).stage_short =
                                            b"flip1\x00" as *const u8 as
                                                *const libc::c_char as
                                                *mut u8_0;
                                        (*afl).stage_max =
                                            len << 3 as libc::c_int;
                                        (*afl).stage_name =
                                            b"bitflip 1/1\x00" as *const u8 as
                                                *const libc::c_char as
                                                *mut u8_0;
                                        (*afl).stage_val_type =
                                            STAGE_VAL_NONE as libc::c_int as
                                                u8_0;
                                        orig_hit_cnt =
                                            ((*afl).queued_paths as
                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                        prev_cksum =
                                            (*(*afl).queue_cur).exec_cksum;
                                        (*afl).stage_cur = 0 as libc::c_int;
                                        loop  {
                                            if !((*afl).stage_cur <
                                                     (*afl).stage_max) {
                                                current_block =
                                                    11718254377427810743;
                                                break ;
                                            }
                                            (*afl).stage_cur_byte =
                                                (*afl).stage_cur >>
                                                    3 as libc::c_int;
                                            let mut _arf: *mut u8_0 = out_buf;
                                            let mut _bf: u32_0 =
                                                (*afl).stage_cur as u32_0;
                                            let ref mut fresh5 =
                                                *_arf.offset((_bf >>
                                                                  3 as
                                                                      libc::c_int)
                                                                 as isize);
                                            *fresh5 =
                                                (*fresh5 as libc::c_int ^
                                                     128 as libc::c_int >>
                                                         (_bf &
                                                              7 as libc::c_int
                                                                  as
                                                                  libc::c_uint))
                                                    as u8_0;
                                            if common_fuzz_stuff(afl, out_buf,
                                                                 len as u32_0)
                                                   != 0 {
                                                current_block =
                                                    12777433616733951266;
                                                break ;
                                            }
                                            let mut _arf_0: *mut u8_0 =
                                                out_buf;
                                            let mut _bf_0: u32_0 =
                                                (*afl).stage_cur as u32_0;
                                            let ref mut fresh6 =
                                                *_arf_0.offset((_bf_0 >>
                                                                    3 as
                                                                        libc::c_int)
                                                                   as isize);
                                            *fresh6 =
                                                (*fresh6 as libc::c_int ^
                                                     128 as libc::c_int >>
                                                         (_bf_0 &
                                                              7 as libc::c_int
                                                                  as
                                                                  libc::c_uint))
                                                    as u8_0;
                                            /* While flipping the least significant bit in every byte, pull of an extra
       trick to detect possible syntax tokens. In essence, the idea is that if
       you have a binary blob like this:

       xxxxxxxxIHDRxxxxxxxx

       ...and changing the leading and trailing bytes causes variable or no
       changes in program flow, but touching any character in the "IHDR" string
       always produces the same, distinctive path, it's highly likely that
       "IHDR" is an atomically-checked magic value of special significance to
       the fuzzed format.

       We do this here, rather than as a separate stage, because it's a nice
       way to keep the operation approximately "free" (i.e., no extra execs).

       Empirically, performing the check when flipping the least significant bit
       is advantageous, compared to doing it at the time of more disruptive
       changes, where the program flow may be affected in more violent ways.

       The caveat is that we won't generate dictionaries in the -d mode or -S
       mode - but that's probably a fair trade-off.

       This won't work particularly well with paths that exhibit variable
       behavior, but fails gracefully, so we'll carry out the checks anyway.

      */
                                            if (*afl).dumb_mode == 0 &&
                                                   (*afl).stage_cur &
                                                       7 as libc::c_int ==
                                                       7 as libc::c_int {
                                                let mut cksum: u32_0 =
                                                    hash32((*afl).fsrv.trace_bits
                                                               as
                                                               *const libc::c_void,
                                                           (*afl).fsrv.map_size,
                                                           0xa5b35705 as
                                                               libc::c_uint);
                                                if (*afl).stage_cur ==
                                                       (*afl).stage_max -
                                                           1 as libc::c_int &&
                                                       cksum == prev_cksum {
                                                    /* If at end of file and we are still collecting a string, grab the
           final character and force output. */
                                                    if a_len <
                                                           32 as libc::c_int
                                                               as libc::c_uint
                                                       {
                                                        a_collect[a_len as
                                                                      usize] =
                                                            *out_buf.offset(((*afl).stage_cur
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize)
                                                    }
                                                    a_len =
                                                        a_len.wrapping_add(1);
                                                    if a_len >=
                                                           3 as libc::c_int as
                                                               libc::c_uint &&
                                                           a_len <=
                                                               32 as
                                                                   libc::c_int
                                                                   as
                                                                   libc::c_uint
                                                       {
                                                        maybe_add_auto(afl as
                                                                           *mut u8_0
                                                                           as
                                                                           *mut libc::c_void,
                                                                       a_collect.as_mut_ptr(),
                                                                       a_len);
                                                    }
                                                } else if cksum != prev_cksum
                                                 {
                                                    /* Otherwise, if the checksum has changed, see if we have something
           worthwhile queued up, and collect that if the answer is yes. */
                                                    if a_len >=
                                                           3 as libc::c_int as
                                                               libc::c_uint &&
                                                           a_len <=
                                                               32 as
                                                                   libc::c_int
                                                                   as
                                                                   libc::c_uint
                                                       {
                                                        maybe_add_auto(afl as
                                                                           *mut u8_0
                                                                           as
                                                                           *mut libc::c_void,
                                                                       a_collect.as_mut_ptr(),
                                                                       a_len);
                                                    }
                                                    a_len =
                                                        0 as libc::c_int as
                                                            u32_0;
                                                    prev_cksum = cksum
                                                }
                                                /* Continue collecting string, but only if the bit flip actually made
         any difference - we don't want no-op tokens. */
                                                if cksum !=
                                                       (*(*afl).queue_cur).exec_cksum
                                                   {
                                                    if a_len <
                                                           32 as libc::c_int
                                                               as libc::c_uint
                                                       {
                                                        a_collect[a_len as
                                                                      usize] =
                                                            *out_buf.offset(((*afl).stage_cur
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize)
                                                    }
                                                    a_len =
                                                        a_len.wrapping_add(1)
                                                }
                                            }
                                            (*afl).stage_cur += 1
                                        }
                                        match current_block {
                                            12777433616733951266 => { }
                                            _ => {
                                                new_hit_cnt =
                                                    ((*afl).queued_paths as
                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                (*afl).stage_finds[STAGE_FLIP1
                                                                       as
                                                                       libc::c_int
                                                                       as
                                                                       usize]
                                                    =
                                                    ((*afl).stage_finds[STAGE_FLIP1
                                                                            as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                                                         as
                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                        as u64_0 as u64_0;
                                                (*afl).stage_cycles[STAGE_FLIP1
                                                                        as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                                                    =
                                                    ((*afl).stage_cycles[STAGE_FLIP1
                                                                             as
                                                                             libc::c_int
                                                                             as
                                                                             usize]
                                                         as
                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                             as
                                                                                             libc::c_ulonglong)
                                                        as u64_0 as u64_0;
                                                /* Two walking bits. */
                                                (*afl).stage_name =
                                                    b"bitflip 2/1\x00" as
                                                        *const u8 as
                                                        *const libc::c_char as
                                                        *mut u8_0;
                                                (*afl).stage_short =
                                                    b"flip2\x00" as *const u8
                                                        as *const libc::c_char
                                                        as *mut u8_0;
                                                (*afl).stage_max =
                                                    (len << 3 as libc::c_int)
                                                        - 1 as libc::c_int;
                                                orig_hit_cnt = new_hit_cnt;
                                                (*afl).stage_cur =
                                                    0 as libc::c_int;
                                                loop  {
                                                    if !((*afl).stage_cur <
                                                             (*afl).stage_max)
                                                       {
                                                        current_block =
                                                            5151888778912688305;
                                                        break ;
                                                    }
                                                    (*afl).stage_cur_byte =
                                                        (*afl).stage_cur >>
                                                            3 as libc::c_int;
                                                    let mut _arf_1:
                                                            *mut u8_0 =
                                                        out_buf;
                                                    let mut _bf_1: u32_0 =
                                                        (*afl).stage_cur as
                                                            u32_0;
                                                    let ref mut fresh7 =
                                                        *_arf_1.offset((_bf_1
                                                                            >>
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           isize);
                                                    *fresh7 =
                                                        (*fresh7 as
                                                             libc::c_int ^
                                                             128 as
                                                                 libc::c_int
                                                                 >>
                                                                 (_bf_1 &
                                                                      7 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint))
                                                            as u8_0;
                                                    let mut _arf_2:
                                                            *mut u8_0 =
                                                        out_buf;
                                                    let mut _bf_2: u32_0 =
                                                        ((*afl).stage_cur +
                                                             1 as libc::c_int)
                                                            as u32_0;
                                                    let ref mut fresh8 =
                                                        *_arf_2.offset((_bf_2
                                                                            >>
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           isize);
                                                    *fresh8 =
                                                        (*fresh8 as
                                                             libc::c_int ^
                                                             128 as
                                                                 libc::c_int
                                                                 >>
                                                                 (_bf_2 &
                                                                      7 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint))
                                                            as u8_0;
                                                    if common_fuzz_stuff(afl,
                                                                         out_buf,
                                                                         len
                                                                             as
                                                                             u32_0)
                                                           != 0 {
                                                        current_block =
                                                            12777433616733951266;
                                                        break ;
                                                    }
                                                    let mut _arf_3:
                                                            *mut u8_0 =
                                                        out_buf;
                                                    let mut _bf_3: u32_0 =
                                                        (*afl).stage_cur as
                                                            u32_0;
                                                    let ref mut fresh9 =
                                                        *_arf_3.offset((_bf_3
                                                                            >>
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           isize);
                                                    *fresh9 =
                                                        (*fresh9 as
                                                             libc::c_int ^
                                                             128 as
                                                                 libc::c_int
                                                                 >>
                                                                 (_bf_3 &
                                                                      7 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint))
                                                            as u8_0;
                                                    let mut _arf_4:
                                                            *mut u8_0 =
                                                        out_buf;
                                                    let mut _bf_4: u32_0 =
                                                        ((*afl).stage_cur +
                                                             1 as libc::c_int)
                                                            as u32_0;
                                                    let ref mut fresh10 =
                                                        *_arf_4.offset((_bf_4
                                                                            >>
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           isize);
                                                    *fresh10 =
                                                        (*fresh10 as
                                                             libc::c_int ^
                                                             128 as
                                                                 libc::c_int
                                                                 >>
                                                                 (_bf_4 &
                                                                      7 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint))
                                                            as u8_0;
                                                    (*afl).stage_cur += 1
                                                }
                                                match current_block {
                                                    12777433616733951266 => {
                                                    }
                                                    _ => {
                                                        new_hit_cnt =
                                                            ((*afl).queued_paths
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                        (*afl).stage_finds[STAGE_FLIP2
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize]
                                                            =
                                                            ((*afl).stage_finds[STAGE_FLIP2
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                as u64_0 as
                                                                u64_0;
                                                        (*afl).stage_cycles[STAGE_FLIP2
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                                                            =
                                                            ((*afl).stage_cycles[STAGE_FLIP2
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0;
                                                        /* Four walking bits. */
                                                        (*afl).stage_name =
                                                            b"bitflip 4/1\x00"
                                                                as *const u8
                                                                as
                                                                *const libc::c_char
                                                                as *mut u8_0;
                                                        (*afl).stage_short =
                                                            b"flip4\x00" as
                                                                *const u8 as
                                                                *const libc::c_char
                                                                as *mut u8_0;
                                                        (*afl).stage_max =
                                                            (len <<
                                                                 3 as
                                                                     libc::c_int)
                                                                -
                                                                3 as
                                                                    libc::c_int;
                                                        orig_hit_cnt =
                                                            new_hit_cnt;
                                                        (*afl).stage_cur =
                                                            0 as libc::c_int;
                                                        loop  {
                                                            if !((*afl).stage_cur
                                                                     <
                                                                     (*afl).stage_max)
                                                               {
                                                                current_block
                                                                    =
                                                                    17518666747792551745;
                                                                break ;
                                                            }
                                                            (*afl).stage_cur_byte
                                                                =
                                                                (*afl).stage_cur
                                                                    >>
                                                                    3 as
                                                                        libc::c_int;
                                                            let mut _arf_5:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_5:
                                                                    u32_0 =
                                                                (*afl).stage_cur
                                                                    as u32_0;
                                                            let ref mut fresh11 =
                                                                *_arf_5.offset((_bf_5
                                                                                    >>
                                                                                    3
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   isize);
                                                            *fresh11 =
                                                                (*fresh11 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_5
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_6:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_6:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     1 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh12 =
                                                                *_arf_6.offset((_bf_6
                                                                                    >>
                                                                                    3
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   isize);
                                                            *fresh12 =
                                                                (*fresh12 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_6
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_7:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_7:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     2 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh13 =
                                                                *_arf_7.offset((_bf_7
                                                                                    >>
                                                                                    3
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   isize);
                                                            *fresh13 =
                                                                (*fresh13 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_7
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_8:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_8:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     3 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh14 =
                                                                *_arf_8.offset((_bf_8
                                                                                    >>
                                                                                    3
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   isize);
                                                            *fresh14 =
                                                                (*fresh14 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_8
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            if common_fuzz_stuff(afl,
                                                                                 out_buf,
                                                                                 len
                                                                                     as
                                                                                     u32_0)
                                                                   != 0 {
                                                                current_block
                                                                    =
                                                                    12777433616733951266;
                                                                break ;
                                                            }
                                                            let mut _arf_9:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_9:
                                                                    u32_0 =
                                                                (*afl).stage_cur
                                                                    as u32_0;
                                                            let ref mut fresh15 =
                                                                *_arf_9.offset((_bf_9
                                                                                    >>
                                                                                    3
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   isize);
                                                            *fresh15 =
                                                                (*fresh15 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_9
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_10:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_10:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     1 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh16 =
                                                                *_arf_10.offset((_bf_10
                                                                                     >>
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    as
                                                                                    isize);
                                                            *fresh16 =
                                                                (*fresh16 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_10
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_11:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_11:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     2 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh17 =
                                                                *_arf_11.offset((_bf_11
                                                                                     >>
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    as
                                                                                    isize);
                                                            *fresh17 =
                                                                (*fresh17 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_11
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            let mut _arf_12:
                                                                    *mut u8_0 =
                                                                out_buf;
                                                            let mut _bf_12:
                                                                    u32_0 =
                                                                ((*afl).stage_cur
                                                                     +
                                                                     3 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            let ref mut fresh18 =
                                                                *_arf_12.offset((_bf_12
                                                                                     >>
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    as
                                                                                    isize);
                                                            *fresh18 =
                                                                (*fresh18 as
                                                                     libc::c_int
                                                                     ^
                                                                     128 as
                                                                         libc::c_int
                                                                         >>
                                                                         (_bf_12
                                                                              &
                                                                              7
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint))
                                                                    as u8_0;
                                                            (*afl).stage_cur
                                                                += 1
                                                        }
                                                        match current_block {
                                                            12777433616733951266
                                                            => {
                                                            }
                                                            _ => {
                                                                new_hit_cnt =
                                                                    ((*afl).queued_paths
                                                                         as
                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                (*afl).stage_finds[STAGE_FLIP4
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       usize]
                                                                    =
                                                                    ((*afl).stage_finds[STAGE_FLIP4
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            usize]
                                                                         as
                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                        as
                                                                        u64_0
                                                                        as
                                                                        u64_0;
                                                                (*afl).stage_cycles[STAGE_FLIP4
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        usize]
                                                                    =
                                                                    ((*afl).stage_cycles[STAGE_FLIP4
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             usize]
                                                                         as
                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                             as
                                                                                                             libc::c_ulonglong)
                                                                        as
                                                                        u64_0
                                                                        as
                                                                        u64_0;
                                                                /* Effector map setup. These macros calculate:

     EFF_APOS      - position of a particular file offset in the map.
     EFF_ALEN      - length of a map with a particular number of bytes.
     EFF_SPAN_ALEN - map span for a sequence of bytes.

   */
                                                                /* Initialize effector map for the next step (see comments below). Always
     flag first and last byte as doing something. */
                                                                eff_map =
                                                                    ck_maybe_grow(&mut (*afl).eff_buf
                                                                                      as
                                                                                      *mut *mut u8_0
                                                                                      as
                                                                                      *mut *mut libc::c_void,
                                                                                  &mut (*afl).eff_size,
                                                                                  ((len
                                                                                        >>
                                                                                        3
                                                                                            as
                                                                                            libc::c_int)
                                                                                       +
                                                                                       (len
                                                                                            &
                                                                                            ((1
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                                 <<
                                                                                                 3
                                                                                                     as
                                                                                                     libc::c_int)
                                                                                                -
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int
                                                                                            !=
                                                                                            0)
                                                                                           as
                                                                                           libc::c_int)
                                                                                      as
                                                                                      size_t)
                                                                        as
                                                                        *mut u8_0;
                                                                *eff_map.offset(0
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    isize)
                                                                    =
                                                                    1 as
                                                                        libc::c_int
                                                                        as
                                                                        u8_0;
                                                                if len -
                                                                       1 as
                                                                           libc::c_int
                                                                       >>
                                                                       3 as
                                                                           libc::c_int
                                                                       !=
                                                                       0 as
                                                                           libc::c_int
                                                                   {
                                                                    *eff_map.offset((len
                                                                                         -
                                                                                         1
                                                                                             as
                                                                                             libc::c_int
                                                                                         >>
                                                                                         3
                                                                                             as
                                                                                             libc::c_int)
                                                                                        as
                                                                                        isize)
                                                                        =
                                                                        1 as
                                                                            libc::c_int
                                                                            as
                                                                            u8_0;
                                                                    eff_cnt =
                                                                        eff_cnt.wrapping_add(1)
                                                                }
                                                                /* Walking byte. */
                                                                (*afl).stage_name
                                                                    =
                                                                    b"bitflip 8/8\x00"
                                                                        as
                                                                        *const u8
                                                                        as
                                                                        *const libc::c_char
                                                                        as
                                                                        *mut u8_0;
                                                                (*afl).stage_short
                                                                    =
                                                                    b"flip8\x00"
                                                                        as
                                                                        *const u8
                                                                        as
                                                                        *const libc::c_char
                                                                        as
                                                                        *mut u8_0;
                                                                (*afl).stage_max
                                                                    = len;
                                                                orig_hit_cnt =
                                                                    new_hit_cnt;
                                                                (*afl).stage_cur
                                                                    =
                                                                    0 as
                                                                        libc::c_int;
                                                                loop  {
                                                                    if !((*afl).stage_cur
                                                                             <
                                                                             (*afl).stage_max)
                                                                       {
                                                                        current_block
                                                                            =
                                                                            162359820444412279;
                                                                        break
                                                                            ;
                                                                    }
                                                                    (*afl).stage_cur_byte
                                                                        =
                                                                        (*afl).stage_cur;
                                                                    let ref mut fresh19 =
                                                                        *out_buf.offset((*afl).stage_cur
                                                                                            as
                                                                                            isize);
                                                                    *fresh19 =
                                                                        (*fresh19
                                                                             as
                                                                             libc::c_int
                                                                             ^
                                                                             0xff
                                                                                 as
                                                                                 libc::c_int)
                                                                            as
                                                                            u8_0;
                                                                    if common_fuzz_stuff(afl,
                                                                                         out_buf,
                                                                                         len
                                                                                             as
                                                                                             u32_0)
                                                                           !=
                                                                           0 {
                                                                        current_block
                                                                            =
                                                                            12777433616733951266;
                                                                        break
                                                                            ;
                                                                    }
                                                                    /* We also use this stage to pull off a simple trick: we identify
       bytes that seem to have no effect on the current execution path
       even when fully flipped - and we skip them during more expensive
       deterministic stages, such as arithmetics or known ints. */
                                                                    if *eff_map.offset(((*afl).stage_cur
                                                                                            >>
                                                                                            3
                                                                                                as
                                                                                                libc::c_int)
                                                                                           as
                                                                                           isize)
                                                                           ==
                                                                           0 {
                                                                        let mut cksum_0:
                                                                                u32_0 =
                                                                            0;
                                                                        /* If in dumb mode or if the file is very short, just flag everything
         without wasting time on checksums. */
                                                                        if (*afl).dumb_mode
                                                                               ==
                                                                               0
                                                                               &&
                                                                               len
                                                                                   >=
                                                                                   128
                                                                                       as
                                                                                       libc::c_int
                                                                           {
                                                                            cksum_0
                                                                                =
                                                                                hash32((*afl).fsrv.trace_bits
                                                                                           as
                                                                                           *const libc::c_void,
                                                                                       (*afl).fsrv.map_size,
                                                                                       0xa5b35705
                                                                                           as
                                                                                           libc::c_uint)
                                                                        } else {
                                                                            cksum_0
                                                                                =
                                                                                !(*(*afl).queue_cur).exec_cksum
                                                                        }
                                                                        if cksum_0
                                                                               !=
                                                                               (*(*afl).queue_cur).exec_cksum
                                                                           {
                                                                            *eff_map.offset(((*afl).stage_cur
                                                                                                 >>
                                                                                                 3
                                                                                                     as
                                                                                                     libc::c_int)
                                                                                                as
                                                                                                isize)
                                                                                =
                                                                                1
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    u8_0;
                                                                            eff_cnt
                                                                                =
                                                                                eff_cnt.wrapping_add(1)
                                                                        }
                                                                    }
                                                                    let ref mut fresh20 =
                                                                        *out_buf.offset((*afl).stage_cur
                                                                                            as
                                                                                            isize);
                                                                    *fresh20 =
                                                                        (*fresh20
                                                                             as
                                                                             libc::c_int
                                                                             ^
                                                                             0xff
                                                                                 as
                                                                                 libc::c_int)
                                                                            as
                                                                            u8_0;
                                                                    (*afl).stage_cur
                                                                        += 1
                                                                }
                                                                match current_block
                                                                    {
                                                                    12777433616733951266
                                                                    => {
                                                                    }
                                                                    _ => {
                                                                        /* If the effector map is more than EFF_MAX_PERC dense, just flag the
     whole thing as worth fuzzing, since we wouldn't be saving much time
     anyway. */
                                                                        if eff_cnt
                                                                               !=
                                                                               ((len
                                                                                     >>
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    +
                                                                                    (len
                                                                                         &
                                                                                         ((1
                                                                                               as
                                                                                               libc::c_int)
                                                                                              <<
                                                                                              3
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                             -
                                                                                             1
                                                                                                 as
                                                                                                 libc::c_int
                                                                                         !=
                                                                                         0)
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   libc::c_uint
                                                                               &&
                                                                               eff_cnt.wrapping_mul(100
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        as
                                                                                                        libc::c_uint).wrapping_div(((len
                                                                                                                                         >>
                                                                                                                                         3
                                                                                                                                             as
                                                                                                                                             libc::c_int)
                                                                                                                                        +
                                                                                                                                        (len
                                                                                                                                             &
                                                                                                                                             ((1
                                                                                                                                                   as
                                                                                                                                                   libc::c_int)
                                                                                                                                                  <<
                                                                                                                                                  3
                                                                                                                                                      as
                                                                                                                                                      libc::c_int)
                                                                                                                                                 -
                                                                                                                                                 1
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                             !=
                                                                                                                                             0)
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                       as
                                                                                                                                       libc::c_uint)
                                                                                   >
                                                                                   90
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       libc::c_uint
                                                                           {
                                                                            memset(eff_map
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   1
                                                                                       as
                                                                                       libc::c_int,
                                                                                   ((len
                                                                                         >>
                                                                                         3
                                                                                             as
                                                                                             libc::c_int)
                                                                                        +
                                                                                        (len
                                                                                             &
                                                                                             ((1
                                                                                                   as
                                                                                                   libc::c_int)
                                                                                                  <<
                                                                                                  3
                                                                                                      as
                                                                                                      libc::c_int)
                                                                                                 -
                                                                                                 1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                             !=
                                                                                             0)
                                                                                            as
                                                                                            libc::c_int)
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            (*afl).blocks_eff_select
                                                                                =
                                                                                ((*afl).blocks_eff_select
                                                                                     as
                                                                                     libc::c_ulonglong).wrapping_add(((len
                                                                                                                           >>
                                                                                                                           3
                                                                                                                               as
                                                                                                                               libc::c_int)
                                                                                                                          +
                                                                                                                          (len
                                                                                                                               &
                                                                                                                               ((1
                                                                                                                                     as
                                                                                                                                     libc::c_int)
                                                                                                                                    <<
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   -
                                                                                                                                   1
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                               !=
                                                                                                                               0)
                                                                                                                              as
                                                                                                                              libc::c_int)
                                                                                                                         as
                                                                                                                         libc::c_ulonglong)
                                                                                    as
                                                                                    u64_0
                                                                                    as
                                                                                    u64_0
                                                                        } else {
                                                                            (*afl).blocks_eff_select
                                                                                =
                                                                                ((*afl).blocks_eff_select
                                                                                     as
                                                                                     libc::c_ulonglong).wrapping_add(eff_cnt
                                                                                                                         as
                                                                                                                         libc::c_ulonglong)
                                                                                    as
                                                                                    u64_0
                                                                                    as
                                                                                    u64_0
                                                                        }
                                                                        (*afl).blocks_eff_total
                                                                            =
                                                                            ((*afl).blocks_eff_total
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add(((len
                                                                                                                       >>
                                                                                                                       3
                                                                                                                           as
                                                                                                                           libc::c_int)
                                                                                                                      +
                                                                                                                      (len
                                                                                                                           &
                                                                                                                           ((1
                                                                                                                                 as
                                                                                                                                 libc::c_int)
                                                                                                                                <<
                                                                                                                                3
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                               -
                                                                                                                               1
                                                                                                                                   as
                                                                                                                                   libc::c_int
                                                                                                                           !=
                                                                                                                           0)
                                                                                                                          as
                                                                                                                          libc::c_int)
                                                                                                                     as
                                                                                                                     libc::c_ulonglong)
                                                                                as
                                                                                u64_0
                                                                                as
                                                                                u64_0;
                                                                        new_hit_cnt
                                                                            =
                                                                            ((*afl).queued_paths
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                        (*afl).stage_finds[STAGE_FLIP8
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               usize]
                                                                            =
                                                                            ((*afl).stage_finds[STAGE_FLIP8
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    usize]
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                as
                                                                                u64_0
                                                                                as
                                                                                u64_0;
                                                                        (*afl).stage_cycles[STAGE_FLIP8
                                                                                                as
                                                                                                libc::c_int
                                                                                                as
                                                                                                usize]
                                                                            =
                                                                            ((*afl).stage_cycles[STAGE_FLIP8
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     usize]
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                     as
                                                                                                                     libc::c_ulonglong)
                                                                                as
                                                                                u64_0
                                                                                as
                                                                                u64_0;
                                                                        /* Two walking bytes. */
                                                                        if len
                                                                               <
                                                                               2
                                                                                   as
                                                                                   libc::c_int
                                                                           {
                                                                            current_block
                                                                                =
                                                                                12371740430880646530;
                                                                        } else {
                                                                            (*afl).stage_name
                                                                                =
                                                                                b"bitflip 16/8\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0;
                                                                            (*afl).stage_short
                                                                                =
                                                                                b"flip16\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0;
                                                                            (*afl).stage_cur
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int;
                                                                            (*afl).stage_max
                                                                                =
                                                                                len
                                                                                    -
                                                                                    1
                                                                                        as
                                                                                        libc::c_int;
                                                                            orig_hit_cnt
                                                                                =
                                                                                new_hit_cnt;
                                                                            i
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int;
                                                                            loop 
                                                                                 {
                                                                                if !(i
                                                                                         <
                                                                                         len
                                                                                             -
                                                                                             1
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                   {
                                                                                    current_block
                                                                                        =
                                                                                        4678630226925495487;
                                                                                    break
                                                                                        ;
                                                                                }
                                                                                /* Let's consult the effector map... */
                                                                                if *eff_map.offset((i
                                                                                                        >>
                                                                                                        3
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                       as
                                                                                                       isize)
                                                                                       ==
                                                                                       0
                                                                                       &&
                                                                                       *eff_map.offset((i
                                                                                                            +
                                                                                                            1
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                            >>
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           as
                                                                                                           isize)
                                                                                           ==
                                                                                           0
                                                                                   {
                                                                                    (*afl).stage_max
                                                                                        -=
                                                                                        1
                                                                                } else {
                                                                                    (*afl).stage_cur_byte
                                                                                        =
                                                                                        i;
                                                                                    let ref mut fresh21 =
                                                                                        *(out_buf.offset(i
                                                                                                             as
                                                                                                             isize)
                                                                                              as
                                                                                              *mut u16_0);
                                                                                    *fresh21
                                                                                        =
                                                                                        (*fresh21
                                                                                             as
                                                                                             libc::c_int
                                                                                             ^
                                                                                             0xffff
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u16_0;
                                                                                    if common_fuzz_stuff(afl,
                                                                                                         out_buf,
                                                                                                         len
                                                                                                             as
                                                                                                             u32_0)
                                                                                           !=
                                                                                           0
                                                                                       {
                                                                                        current_block
                                                                                            =
                                                                                            12777433616733951266;
                                                                                        break
                                                                                            ;
                                                                                    }
                                                                                    (*afl).stage_cur
                                                                                        +=
                                                                                        1;
                                                                                    let ref mut fresh22 =
                                                                                        *(out_buf.offset(i
                                                                                                             as
                                                                                                             isize)
                                                                                              as
                                                                                              *mut u16_0);
                                                                                    *fresh22
                                                                                        =
                                                                                        (*fresh22
                                                                                             as
                                                                                             libc::c_int
                                                                                             ^
                                                                                             0xffff
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u16_0
                                                                                }
                                                                                i
                                                                                    +=
                                                                                    1
                                                                            }
                                                                            match current_block
                                                                                {
                                                                                12777433616733951266
                                                                                =>
                                                                                {
                                                                                }
                                                                                _
                                                                                =>
                                                                                {
                                                                                    new_hit_cnt
                                                                                        =
                                                                                        ((*afl).queued_paths
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                    (*afl).stage_finds[STAGE_FLIP16
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           usize]
                                                                                        =
                                                                                        ((*afl).stage_finds[STAGE_FLIP16
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    (*afl).stage_cycles[STAGE_FLIP16
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            usize]
                                                                                        =
                                                                                        ((*afl).stage_cycles[STAGE_FLIP16
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 as
                                                                                                                 usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong)
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    if len
                                                                                           <
                                                                                           4
                                                                                               as
                                                                                               libc::c_int
                                                                                       {
                                                                                        current_block
                                                                                            =
                                                                                            12371740430880646530;
                                                                                    } else {
                                                                                        /* Four walking bytes. */
                                                                                        (*afl).stage_name
                                                                                            =
                                                                                            b"bitflip 32/8\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_short
                                                                                            =
                                                                                            b"flip32\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_cur
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        (*afl).stage_max
                                                                                            =
                                                                                            len
                                                                                                -
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int;
                                                                                        orig_hit_cnt
                                                                                            =
                                                                                            new_hit_cnt;
                                                                                        i
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        loop 
                                                                                             {
                                                                                            if !(i
                                                                                                     <
                                                                                                     len
                                                                                                         -
                                                                                                         3
                                                                                                             as
                                                                                                             libc::c_int)
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    14065265019409502504;
                                                                                                break
                                                                                                    ;
                                                                                            }
                                                                                            /* Let's consult the effector map... */
                                                                                            if *eff_map.offset((i
                                                                                                                    >>
                                                                                                                    3
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                   as
                                                                                                                   isize)
                                                                                                   ==
                                                                                                   0
                                                                                                   &&
                                                                                                   *eff_map.offset((i
                                                                                                                        +
                                                                                                                        1
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                                   &&
                                                                                                   *eff_map.offset((i
                                                                                                                        +
                                                                                                                        2
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                                   &&
                                                                                                   *eff_map.offset((i
                                                                                                                        +
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                               {
                                                                                                (*afl).stage_max
                                                                                                    -=
                                                                                                    1
                                                                                            } else {
                                                                                                (*afl).stage_cur_byte
                                                                                                    =
                                                                                                    i;
                                                                                                let ref mut fresh23 =
                                                                                                    *(out_buf.offset(i
                                                                                                                         as
                                                                                                                         isize)
                                                                                                          as
                                                                                                          *mut u32_0);
                                                                                                *fresh23
                                                                                                    ^=
                                                                                                    0xffffffff
                                                                                                        as
                                                                                                        libc::c_uint;
                                                                                                if common_fuzz_stuff(afl,
                                                                                                                     out_buf,
                                                                                                                     len
                                                                                                                         as
                                                                                                                         u32_0)
                                                                                                       !=
                                                                                                       0
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        12777433616733951266;
                                                                                                    break
                                                                                                        ;
                                                                                                }
                                                                                                (*afl).stage_cur
                                                                                                    +=
                                                                                                    1;
                                                                                                let ref mut fresh24 =
                                                                                                    *(out_buf.offset(i
                                                                                                                         as
                                                                                                                         isize)
                                                                                                          as
                                                                                                          *mut u32_0);
                                                                                                *fresh24
                                                                                                    ^=
                                                                                                    0xffffffff
                                                                                                        as
                                                                                                        libc::c_uint
                                                                                            }
                                                                                            i
                                                                                                +=
                                                                                                1
                                                                                        }
                                                                                        match current_block
                                                                                            {
                                                                                            12777433616733951266
                                                                                            =>
                                                                                            {
                                                                                            }
                                                                                            _
                                                                                            =>
                                                                                            {
                                                                                                new_hit_cnt
                                                                                                    =
                                                                                                    ((*afl).queued_paths
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                (*afl).stage_finds[STAGE_FLIP32
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                                       as
                                                                                                                       usize]
                                                                                                    =
                                                                                                    ((*afl).stage_finds[STAGE_FLIP32
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                (*afl).stage_cycles[STAGE_FLIP32
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        usize]
                                                                                                    =
                                                                                                    ((*afl).stage_cycles[STAGE_FLIP32
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             as
                                                                                                                             usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                             as
                                                                                                                                             libc::c_ulonglong)
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                current_block
                                                                                                    =
                                                                                                    12371740430880646530;
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        match current_block
                                                                            {
                                                                            12777433616733951266
                                                                            =>
                                                                            {
                                                                            }
                                                                            _
                                                                            =>
                                                                            {
                                                                                if (*afl).no_arith
                                                                                       !=
                                                                                       0
                                                                                   {
                                                                                    current_block
                                                                                        =
                                                                                        12182190900736103889;
                                                                                } else {
                                                                                    /* *********************
   * ARITHMETIC INC/DEC *
   **********************/
                                                                                    /* 8-bit arithmetics. */
                                                                                    (*afl).stage_name
                                                                                        =
                                                                                        b"arith 8/8\x00"
                                                                                            as
                                                                                            *const u8
                                                                                            as
                                                                                            *const libc::c_char
                                                                                            as
                                                                                            *mut u8_0;
                                                                                    (*afl).stage_short
                                                                                        =
                                                                                        b"arith8\x00"
                                                                                            as
                                                                                            *const u8
                                                                                            as
                                                                                            *const libc::c_char
                                                                                            as
                                                                                            *mut u8_0;
                                                                                    (*afl).stage_cur
                                                                                        =
                                                                                        0
                                                                                            as
                                                                                            libc::c_int;
                                                                                    (*afl).stage_max
                                                                                        =
                                                                                        2
                                                                                            as
                                                                                            libc::c_int
                                                                                            *
                                                                                            len
                                                                                            *
                                                                                            35
                                                                                                as
                                                                                                libc::c_int;
                                                                                    (*afl).stage_val_type
                                                                                        =
                                                                                        STAGE_VAL_LE
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            u8_0;
                                                                                    orig_hit_cnt
                                                                                        =
                                                                                        new_hit_cnt;
                                                                                    i
                                                                                        =
                                                                                        0
                                                                                            as
                                                                                            libc::c_int;
                                                                                    's_1324:
                                                                                        loop 
                                                                                             {
                                                                                            if !(i
                                                                                                     <
                                                                                                     len)
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    14140861069861637531;
                                                                                                break
                                                                                                    ;
                                                                                            }
                                                                                            let mut orig:
                                                                                                    u8_0 =
                                                                                                *out_buf.offset(i
                                                                                                                    as
                                                                                                                    isize);
                                                                                            /* Let's consult the effector map... */
                                                                                            if *eff_map.offset((i
                                                                                                                    >>
                                                                                                                    3
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                   as
                                                                                                                   isize)
                                                                                                   ==
                                                                                                   0
                                                                                               {
                                                                                                (*afl).stage_max
                                                                                                    -=
                                                                                                    2
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        *
                                                                                                        35
                                                                                                            as
                                                                                                            libc::c_int
                                                                                            } else {
                                                                                                (*afl).stage_cur_byte
                                                                                                    =
                                                                                                    i;
                                                                                                j
                                                                                                    =
                                                                                                    1
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                while j
                                                                                                          <=
                                                                                                          35
                                                                                                              as
                                                                                                              libc::c_int
                                                                                                      {
                                                                                                    let mut r:
                                                                                                            u8_0 =
                                                                                                        (orig
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             orig
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 +
                                                                                                                 j)
                                                                                                            as
                                                                                                            u8_0;
                                                                                                    /* Do arithmetic operations only if the result couldn't be a product
         of a bitflip. */
                                                                                                    if could_be_bitflip(r
                                                                                                                            as
                                                                                                                            u32_0)
                                                                                                           ==
                                                                                                           0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            j;
                                                                                                        *out_buf.offset(i
                                                                                                                            as
                                                                                                                            isize)
                                                                                                            =
                                                                                                            (orig
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 +
                                                                                                                 j)
                                                                                                                as
                                                                                                                u8_0;
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                12777433616733951266;
                                                                                                            break
                                                                                                                's_1324
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    r
                                                                                                        =
                                                                                                        (orig
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             orig
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 -
                                                                                                                 j)
                                                                                                            as
                                                                                                            u8_0;
                                                                                                    if could_be_bitflip(r
                                                                                                                            as
                                                                                                                            u32_0)
                                                                                                           ==
                                                                                                           0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            -j;
                                                                                                        *out_buf.offset(i
                                                                                                                            as
                                                                                                                            isize)
                                                                                                            =
                                                                                                            (orig
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 -
                                                                                                                 j)
                                                                                                                as
                                                                                                                u8_0;
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                12777433616733951266;
                                                                                                            break
                                                                                                                's_1324
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    *out_buf.offset(i
                                                                                                                        as
                                                                                                                        isize)
                                                                                                        =
                                                                                                        orig;
                                                                                                    j
                                                                                                        +=
                                                                                                        1
                                                                                                }
                                                                                            }
                                                                                            i
                                                                                                +=
                                                                                                1
                                                                                        }
                                                                                    match current_block
                                                                                        {
                                                                                        12777433616733951266
                                                                                        =>
                                                                                        {
                                                                                        }
                                                                                        _
                                                                                        =>
                                                                                        {
                                                                                            new_hit_cnt
                                                                                                =
                                                                                                ((*afl).queued_paths
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                            (*afl).stage_finds[STAGE_ARITH8
                                                                                                                   as
                                                                                                                   libc::c_int
                                                                                                                   as
                                                                                                                   usize]
                                                                                                =
                                                                                                ((*afl).stage_finds[STAGE_ARITH8
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        usize]
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                    as
                                                                                                    u64_0
                                                                                                    as
                                                                                                    u64_0;
                                                                                            (*afl).stage_cycles[STAGE_ARITH8
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    usize]
                                                                                                =
                                                                                                ((*afl).stage_cycles[STAGE_ARITH8
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         as
                                                                                                                         usize]
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                         as
                                                                                                                                         libc::c_ulonglong)
                                                                                                    as
                                                                                                    u64_0
                                                                                                    as
                                                                                                    u64_0;
                                                                                            /* 16-bit arithmetics, both endians. */
                                                                                            if len
                                                                                                   <
                                                                                                   2
                                                                                                       as
                                                                                                       libc::c_int
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    12182190900736103889;
                                                                                            } else {
                                                                                                (*afl).stage_name
                                                                                                    =
                                                                                                    b"arith 16/8\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0;
                                                                                                (*afl).stage_short
                                                                                                    =
                                                                                                    b"arith16\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0;
                                                                                                (*afl).stage_cur
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                (*afl).stage_max
                                                                                                    =
                                                                                                    4
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        *
                                                                                                        (len
                                                                                                             -
                                                                                                             1
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                        *
                                                                                                        35
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                orig_hit_cnt
                                                                                                    =
                                                                                                    new_hit_cnt;
                                                                                                i
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                's_1481:
                                                                                                    loop 
                                                                                                         {
                                                                                                        if !(i
                                                                                                                 <
                                                                                                                 len
                                                                                                                     -
                                                                                                                     1
                                                                                                                         as
                                                                                                                         libc::c_int)
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                11492026467802181866;
                                                                                                            break
                                                                                                                ;
                                                                                                        }
                                                                                                        let mut orig_0:
                                                                                                                u16_0 =
                                                                                                            *(out_buf.offset(i
                                                                                                                                 as
                                                                                                                                 isize)
                                                                                                                  as
                                                                                                                  *mut u16_0);
                                                                                                        /* Let's consult the effector map... */
                                                                                                        if *eff_map.offset((i
                                                                                                                                >>
                                                                                                                                3
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                               as
                                                                                                                               isize)
                                                                                                               ==
                                                                                                               0
                                                                                                               &&
                                                                                                               *eff_map.offset((i
                                                                                                                                    +
                                                                                                                                    1
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                           {
                                                                                                            (*afl).stage_max
                                                                                                                -=
                                                                                                                4
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    *
                                                                                                                    35
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                        } else {
                                                                                                            (*afl).stage_cur_byte
                                                                                                                =
                                                                                                                i;
                                                                                                            j
                                                                                                                =
                                                                                                                1
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            while j
                                                                                                                      <=
                                                                                                                      35
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                  {
                                                                                                                let mut r1:
                                                                                                                        u16_0 =
                                                                                                                    (orig_0
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         ^
                                                                                                                         orig_0
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             +
                                                                                                                             j)
                                                                                                                        as
                                                                                                                        u16_0;
                                                                                                                let mut r2:
                                                                                                                        u16_0 =
                                                                                                                    (orig_0
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         ^
                                                                                                                         orig_0
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             -
                                                                                                                             j)
                                                                                                                        as
                                                                                                                        u16_0;
                                                                                                                let mut r3:
                                                                                                                        u16_0 =
                                                                                                                    (orig_0
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         ^
                                                                                                                         ({
                                                                                                                              let mut _ret:
                                                                                                                                      u16_0 =
                                                                                                                                  (({
                                                                                                                                        let mut _ret_0:
                                                                                                                                                u16_0 =
                                                                                                                                            orig_0;
                                                                                                                                        ((_ret_0
                                                                                                                                              as
                                                                                                                                              libc::c_int)
                                                                                                                                             <<
                                                                                                                                             8
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                             |
                                                                                                                                             _ret_0
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int)
                                                                                                                                            as
                                                                                                                                            u16_0
                                                                                                                                    })
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       +
                                                                                                                                       j)
                                                                                                                                      as
                                                                                                                                      u16_0;
                                                                                                                              ((_ret
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                                   <<
                                                                                                                                   8
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                   |
                                                                                                                                   _ret
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       >>
                                                                                                                                       8
                                                                                                                                           as
                                                                                                                                           libc::c_int)
                                                                                                                                  as
                                                                                                                                  u16_0
                                                                                                                          })
                                                                                                                             as
                                                                                                                             libc::c_int)
                                                                                                                        as
                                                                                                                        u16_0;
                                                                                                                let mut r4:
                                                                                                                        u16_0 =
                                                                                                                    (orig_0
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         ^
                                                                                                                         ({
                                                                                                                              let mut _ret:
                                                                                                                                      u16_0 =
                                                                                                                                  (({
                                                                                                                                        let mut _ret_0:
                                                                                                                                                u16_0 =
                                                                                                                                            orig_0;
                                                                                                                                        ((_ret_0
                                                                                                                                              as
                                                                                                                                              libc::c_int)
                                                                                                                                             <<
                                                                                                                                             8
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                             |
                                                                                                                                             _ret_0
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int)
                                                                                                                                            as
                                                                                                                                            u16_0
                                                                                                                                    })
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       -
                                                                                                                                       j)
                                                                                                                                      as
                                                                                                                                      u16_0;
                                                                                                                              ((_ret
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                                   <<
                                                                                                                                   8
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                   |
                                                                                                                                   _ret
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       >>
                                                                                                                                       8
                                                                                                                                           as
                                                                                                                                           libc::c_int)
                                                                                                                                  as
                                                                                                                                  u16_0
                                                                                                                          })
                                                                                                                             as
                                                                                                                             libc::c_int)
                                                                                                                        as
                                                                                                                        u16_0;
                                                                                                                /* Try little endian addition and subtraction first. Do it only
         if the operation would affect more than one byte (hence the
         & 0xff overflow checks) and if it couldn't be a product of
         a bitflip. */
                                                                                                                (*afl).stage_val_type
                                                                                                                    =
                                                                                                                    STAGE_VAL_LE
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        u8_0;
                                                                                                                if (orig_0
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        &
                                                                                                                        0xff
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       +
                                                                                                                       j
                                                                                                                       >
                                                                                                                       0xff
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r1
                                                                                                                                            as
                                                                                                                                            u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u16_0)
                                                                                                                        =
                                                                                                                        (orig_0
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             +
                                                                                                                             j)
                                                                                                                            as
                                                                                                                            u16_0;
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            12777433616733951266;
                                                                                                                        break
                                                                                                                            's_1481
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                if (orig_0
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        &
                                                                                                                        0xff
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       <
                                                                                                                       j
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r2
                                                                                                                                            as
                                                                                                                                            u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        -j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u16_0)
                                                                                                                        =
                                                                                                                        (orig_0
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             -
                                                                                                                             j)
                                                                                                                            as
                                                                                                                            u16_0;
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            12777433616733951266;
                                                                                                                        break
                                                                                                                            's_1481
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                /* Big endian comes next. Same deal. */
                                                                                                                (*afl).stage_val_type
                                                                                                                    =
                                                                                                                    STAGE_VAL_BE
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        u8_0;
                                                                                                                if (orig_0
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        >>
                                                                                                                        8
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       +
                                                                                                                       j
                                                                                                                       >
                                                                                                                       0xff
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r3
                                                                                                                                            as
                                                                                                                                            u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u16_0)
                                                                                                                        =
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u16_0 =
                                                                                                                                 (({
                                                                                                                                       let mut _ret_0:
                                                                                                                                               u16_0 =
                                                                                                                                           orig_0;
                                                                                                                                       ((_ret_0
                                                                                                                                             as
                                                                                                                                             libc::c_int)
                                                                                                                                            <<
                                                                                                                                            8
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                            |
                                                                                                                                            _ret_0
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                                >>
                                                                                                                                                8
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                           as
                                                                                                                                           u16_0
                                                                                                                                   })
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      +
                                                                                                                                      j)
                                                                                                                                     as
                                                                                                                                     u16_0;
                                                                                                                             ((_ret
                                                                                                                                   as
                                                                                                                                   libc::c_int)
                                                                                                                                  <<
                                                                                                                                  8
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      >>
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int)
                                                                                                                                 as
                                                                                                                                 u16_0
                                                                                                                         });
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            12777433616733951266;
                                                                                                                        break
                                                                                                                            's_1481
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                if (orig_0
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        >>
                                                                                                                        8
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       <
                                                                                                                       j
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r4
                                                                                                                                            as
                                                                                                                                            u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        -j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u16_0)
                                                                                                                        =
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u16_0 =
                                                                                                                                 (({
                                                                                                                                       let mut _ret_0:
                                                                                                                                               u16_0 =
                                                                                                                                           orig_0;
                                                                                                                                       ((_ret_0
                                                                                                                                             as
                                                                                                                                             libc::c_int)
                                                                                                                                            <<
                                                                                                                                            8
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                            |
                                                                                                                                            _ret_0
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                                >>
                                                                                                                                                8
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                           as
                                                                                                                                           u16_0
                                                                                                                                   })
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      -
                                                                                                                                      j)
                                                                                                                                     as
                                                                                                                                     u16_0;
                                                                                                                             ((_ret
                                                                                                                                   as
                                                                                                                                   libc::c_int)
                                                                                                                                  <<
                                                                                                                                  8
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      >>
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int)
                                                                                                                                 as
                                                                                                                                 u16_0
                                                                                                                         });
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            12777433616733951266;
                                                                                                                        break
                                                                                                                            's_1481
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u16_0)
                                                                                                                    =
                                                                                                                    orig_0;
                                                                                                                j
                                                                                                                    +=
                                                                                                                    1
                                                                                                            }
                                                                                                        }
                                                                                                        i
                                                                                                            +=
                                                                                                            1
                                                                                                    }
                                                                                                match current_block
                                                                                                    {
                                                                                                    12777433616733951266
                                                                                                    =>
                                                                                                    {
                                                                                                    }
                                                                                                    _
                                                                                                    =>
                                                                                                    {
                                                                                                        new_hit_cnt
                                                                                                            =
                                                                                                            ((*afl).queued_paths
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                        (*afl).stage_finds[STAGE_ARITH16
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               usize]
                                                                                                            =
                                                                                                            ((*afl).stage_finds[STAGE_ARITH16
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        (*afl).stage_cycles[STAGE_ARITH16
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                usize]
                                                                                                            =
                                                                                                            ((*afl).stage_cycles[STAGE_ARITH16
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                     as
                                                                                                                                                     libc::c_ulonglong)
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        /* 32-bit arithmetics, both endians. */
                                                                                                        if len
                                                                                                               <
                                                                                                               4
                                                                                                                   as
                                                                                                                   libc::c_int
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                12182190900736103889;
                                                                                                        } else {
                                                                                                            (*afl).stage_name
                                                                                                                =
                                                                                                                b"arith 32/8\x00"
                                                                                                                    as
                                                                                                                    *const u8
                                                                                                                    as
                                                                                                                    *const libc::c_char
                                                                                                                    as
                                                                                                                    *mut u8_0;
                                                                                                            (*afl).stage_short
                                                                                                                =
                                                                                                                b"arith32\x00"
                                                                                                                    as
                                                                                                                    *const u8
                                                                                                                    as
                                                                                                                    *const libc::c_char
                                                                                                                    as
                                                                                                                    *mut u8_0;
                                                                                                            (*afl).stage_cur
                                                                                                                =
                                                                                                                0
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            (*afl).stage_max
                                                                                                                =
                                                                                                                4
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    *
                                                                                                                    (len
                                                                                                                         -
                                                                                                                         3
                                                                                                                             as
                                                                                                                             libc::c_int)
                                                                                                                    *
                                                                                                                    35
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                            orig_hit_cnt
                                                                                                                =
                                                                                                                new_hit_cnt;
                                                                                                            i
                                                                                                                =
                                                                                                                0
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            's_1702:
                                                                                                                loop 
                                                                                                                     {
                                                                                                                    if !(i
                                                                                                                             <
                                                                                                                             len
                                                                                                                                 -
                                                                                                                                 3
                                                                                                                                     as
                                                                                                                                     libc::c_int)
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            15264922082917136948;
                                                                                                                        break
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    let mut orig_1:
                                                                                                                            u32_0 =
                                                                                                                        *(out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *mut u32_0);
                                                                                                                    /* Let's consult the effector map... */
                                                                                                                    if *eff_map.offset((i
                                                                                                                                            >>
                                                                                                                                            3
                                                                                                                                                as
                                                                                                                                                libc::c_int)
                                                                                                                                           as
                                                                                                                                           isize)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                           &&
                                                                                                                           *eff_map.offset((i
                                                                                                                                                +
                                                                                                                                                1
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                >>
                                                                                                                                                3
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                               as
                                                                                                                                               isize)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           *eff_map.offset((i
                                                                                                                                                +
                                                                                                                                                2
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                >>
                                                                                                                                                3
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                               as
                                                                                                                                               isize)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           *eff_map.offset((i
                                                                                                                                                +
                                                                                                                                                3
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                >>
                                                                                                                                                3
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                               as
                                                                                                                                               isize)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                       {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            4
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                *
                                                                                                                                35
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                    } else {
                                                                                                                        (*afl).stage_cur_byte
                                                                                                                            =
                                                                                                                            i;
                                                                                                                        j
                                                                                                                            =
                                                                                                                            1
                                                                                                                                as
                                                                                                                                libc::c_int;
                                                                                                                        while j
                                                                                                                                  <=
                                                                                                                                  35
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                              {
                                                                                                                            let mut r1_0:
                                                                                                                                    u32_0 =
                                                                                                                                orig_1
                                                                                                                                    ^
                                                                                                                                    orig_1.wrapping_add(j
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint);
                                                                                                                            let mut r2_0:
                                                                                                                                    u32_0 =
                                                                                                                                orig_1
                                                                                                                                    ^
                                                                                                                                    orig_1.wrapping_sub(j
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint);
                                                                                                                            let mut r3_0:
                                                                                                                                    u32_0 =
                                                                                                                                orig_1
                                                                                                                                    ^
                                                                                                                                    ({
                                                                                                                                         let mut _ret:
                                                                                                                                                 u32_0 =
                                                                                                                                             ({
                                                                                                                                                  let mut _ret_0:
                                                                                                                                                          u32_0 =
                                                                                                                                                      orig_1;
                                                                                                                                                  (_ret_0
                                                                                                                                                       <<
                                                                                                                                                       24
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           >>
                                                                                                                                                           24
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           &
                                                                                                                                                           0xff0000
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_uint)
                                                                                                                                                      |
                                                                                                                                                      _ret_0
                                                                                                                                                          >>
                                                                                                                                                          8
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          &
                                                                                                                                                          0xff00
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint
                                                                                                                                              }).wrapping_add(j
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_uint);
                                                                                                                                         (_ret
                                                                                                                                              <<
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  >>
                                                                                                                                                  24
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  <<
                                                                                                                                                  8
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                  &
                                                                                                                                                  0xff0000
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint)
                                                                                                                                             |
                                                                                                                                             _ret
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                 &
                                                                                                                                                 0xff00
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                     as
                                                                                                                                                     libc::c_uint
                                                                                                                                     });
                                                                                                                            let mut r4_0:
                                                                                                                                    u32_0 =
                                                                                                                                orig_1
                                                                                                                                    ^
                                                                                                                                    ({
                                                                                                                                         let mut _ret:
                                                                                                                                                 u32_0 =
                                                                                                                                             ({
                                                                                                                                                  let mut _ret_0:
                                                                                                                                                          u32_0 =
                                                                                                                                                      orig_1;
                                                                                                                                                  (_ret_0
                                                                                                                                                       <<
                                                                                                                                                       24
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           >>
                                                                                                                                                           24
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           &
                                                                                                                                                           0xff0000
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_uint)
                                                                                                                                                      |
                                                                                                                                                      _ret_0
                                                                                                                                                          >>
                                                                                                                                                          8
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          &
                                                                                                                                                          0xff00
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint
                                                                                                                                              }).wrapping_sub(j
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_uint);
                                                                                                                                         (_ret
                                                                                                                                              <<
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  >>
                                                                                                                                                  24
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  <<
                                                                                                                                                  8
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                  &
                                                                                                                                                  0xff0000
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint)
                                                                                                                                             |
                                                                                                                                             _ret
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                 &
                                                                                                                                                 0xff00
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                     as
                                                                                                                                                     libc::c_uint
                                                                                                                                     });
                                                                                                                            /* Little endian first. Same deal as with 16-bit: we only want to
         try if the operation would have effect on more than two bytes. */
                                                                                                                            (*afl).stage_val_type
                                                                                                                                =
                                                                                                                                STAGE_VAL_LE
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    u8_0;
                                                                                                                            if (orig_1
                                                                                                                                    &
                                                                                                                                    0xffff
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint).wrapping_add(j
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_uint)
                                                                                                                                   >
                                                                                                                                   0xffff
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                                   &&
                                                                                                                                   could_be_bitflip(r1_0)
                                                                                                                                       ==
                                                                                                                                       0
                                                                                                                               {
                                                                                                                                (*afl).stage_cur_val
                                                                                                                                    =
                                                                                                                                    j;
                                                                                                                                *(out_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *mut u32_0)
                                                                                                                                    =
                                                                                                                                    orig_1.wrapping_add(j
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint);
                                                                                                                                if common_fuzz_stuff(afl,
                                                                                                                                                     out_buf,
                                                                                                                                                     len
                                                                                                                                                         as
                                                                                                                                                         u32_0)
                                                                                                                                       !=
                                                                                                                                       0
                                                                                                                                   {
                                                                                                                                    current_block
                                                                                                                                        =
                                                                                                                                        12777433616733951266;
                                                                                                                                    break
                                                                                                                                        's_1702
                                                                                                                                        ;
                                                                                                                                }
                                                                                                                                (*afl).stage_cur
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            } else {
                                                                                                                                (*afl).stage_max
                                                                                                                                    -=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            if (orig_1
                                                                                                                                    &
                                                                                                                                    0xffff
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint)
                                                                                                                                   <
                                                                                                                                   j
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                                   &&
                                                                                                                                   could_be_bitflip(r2_0)
                                                                                                                                       ==
                                                                                                                                       0
                                                                                                                               {
                                                                                                                                (*afl).stage_cur_val
                                                                                                                                    =
                                                                                                                                    -j;
                                                                                                                                *(out_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *mut u32_0)
                                                                                                                                    =
                                                                                                                                    orig_1.wrapping_sub(j
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint);
                                                                                                                                if common_fuzz_stuff(afl,
                                                                                                                                                     out_buf,
                                                                                                                                                     len
                                                                                                                                                         as
                                                                                                                                                         u32_0)
                                                                                                                                       !=
                                                                                                                                       0
                                                                                                                                   {
                                                                                                                                    current_block
                                                                                                                                        =
                                                                                                                                        12777433616733951266;
                                                                                                                                    break
                                                                                                                                        's_1702
                                                                                                                                        ;
                                                                                                                                }
                                                                                                                                (*afl).stage_cur
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            } else {
                                                                                                                                (*afl).stage_max
                                                                                                                                    -=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            /* Big endian next. */
                                                                                                                            (*afl).stage_val_type
                                                                                                                                =
                                                                                                                                STAGE_VAL_BE
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    u8_0;
                                                                                                                            if (({
                                                                                                                                     let mut _ret:
                                                                                                                                             u32_0 =
                                                                                                                                         orig_1;
                                                                                                                                     (_ret
                                                                                                                                          <<
                                                                                                                                          24
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                          |
                                                                                                                                          _ret
                                                                                                                                              >>
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                          |
                                                                                                                                          _ret
                                                                                                                                              <<
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff0000
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint)
                                                                                                                                         |
                                                                                                                                         _ret
                                                                                                                                             >>
                                                                                                                                             8
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                             &
                                                                                                                                             0xff00
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 libc::c_uint
                                                                                                                                 })
                                                                                                                                    &
                                                                                                                                    0xffff
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint).wrapping_add(j
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_uint)
                                                                                                                                   >
                                                                                                                                   0xffff
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                                   &&
                                                                                                                                   could_be_bitflip(r3_0)
                                                                                                                                       ==
                                                                                                                                       0
                                                                                                                               {
                                                                                                                                (*afl).stage_cur_val
                                                                                                                                    =
                                                                                                                                    j;
                                                                                                                                *(out_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *mut u32_0)
                                                                                                                                    =
                                                                                                                                    ({
                                                                                                                                         let mut _ret:
                                                                                                                                                 u32_0 =
                                                                                                                                             ({
                                                                                                                                                  let mut _ret_0:
                                                                                                                                                          u32_0 =
                                                                                                                                                      orig_1;
                                                                                                                                                  (_ret_0
                                                                                                                                                       <<
                                                                                                                                                       24
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           >>
                                                                                                                                                           24
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           &
                                                                                                                                                           0xff0000
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_uint)
                                                                                                                                                      |
                                                                                                                                                      _ret_0
                                                                                                                                                          >>
                                                                                                                                                          8
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          &
                                                                                                                                                          0xff00
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint
                                                                                                                                              }).wrapping_add(j
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_uint);
                                                                                                                                         (_ret
                                                                                                                                              <<
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  >>
                                                                                                                                                  24
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  <<
                                                                                                                                                  8
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                  &
                                                                                                                                                  0xff0000
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint)
                                                                                                                                             |
                                                                                                                                             _ret
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                 &
                                                                                                                                                 0xff00
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                     as
                                                                                                                                                     libc::c_uint
                                                                                                                                     });
                                                                                                                                if common_fuzz_stuff(afl,
                                                                                                                                                     out_buf,
                                                                                                                                                     len
                                                                                                                                                         as
                                                                                                                                                         u32_0)
                                                                                                                                       !=
                                                                                                                                       0
                                                                                                                                   {
                                                                                                                                    current_block
                                                                                                                                        =
                                                                                                                                        12777433616733951266;
                                                                                                                                    break
                                                                                                                                        's_1702
                                                                                                                                        ;
                                                                                                                                }
                                                                                                                                (*afl).stage_cur
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            } else {
                                                                                                                                (*afl).stage_max
                                                                                                                                    -=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            if (({
                                                                                                                                     let mut _ret:
                                                                                                                                             u32_0 =
                                                                                                                                         orig_1;
                                                                                                                                     (_ret
                                                                                                                                          <<
                                                                                                                                          24
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                          |
                                                                                                                                          _ret
                                                                                                                                              >>
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                          |
                                                                                                                                          _ret
                                                                                                                                              <<
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff0000
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint)
                                                                                                                                         |
                                                                                                                                         _ret
                                                                                                                                             >>
                                                                                                                                             8
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                             &
                                                                                                                                             0xff00
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 libc::c_uint
                                                                                                                                 })
                                                                                                                                    &
                                                                                                                                    0xffff
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint)
                                                                                                                                   <
                                                                                                                                   j
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                                   &&
                                                                                                                                   could_be_bitflip(r4_0)
                                                                                                                                       ==
                                                                                                                                       0
                                                                                                                               {
                                                                                                                                (*afl).stage_cur_val
                                                                                                                                    =
                                                                                                                                    -j;
                                                                                                                                *(out_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *mut u32_0)
                                                                                                                                    =
                                                                                                                                    ({
                                                                                                                                         let mut _ret:
                                                                                                                                                 u32_0 =
                                                                                                                                             ({
                                                                                                                                                  let mut _ret_0:
                                                                                                                                                          u32_0 =
                                                                                                                                                      orig_1;
                                                                                                                                                  (_ret_0
                                                                                                                                                       <<
                                                                                                                                                       24
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           >>
                                                                                                                                                           24
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret_0
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           &
                                                                                                                                                           0xff0000
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_uint)
                                                                                                                                                      |
                                                                                                                                                      _ret_0
                                                                                                                                                          >>
                                                                                                                                                          8
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          &
                                                                                                                                                          0xff00
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint
                                                                                                                                              }).wrapping_sub(j
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_uint);
                                                                                                                                         (_ret
                                                                                                                                              <<
                                                                                                                                              24
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  >>
                                                                                                                                                  24
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                              |
                                                                                                                                              _ret
                                                                                                                                                  <<
                                                                                                                                                  8
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                  &
                                                                                                                                                  0xff0000
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint)
                                                                                                                                             |
                                                                                                                                             _ret
                                                                                                                                                 >>
                                                                                                                                                 8
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                 &
                                                                                                                                                 0xff00
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                     as
                                                                                                                                                     libc::c_uint
                                                                                                                                     });
                                                                                                                                if common_fuzz_stuff(afl,
                                                                                                                                                     out_buf,
                                                                                                                                                     len
                                                                                                                                                         as
                                                                                                                                                         u32_0)
                                                                                                                                       !=
                                                                                                                                       0
                                                                                                                                   {
                                                                                                                                    current_block
                                                                                                                                        =
                                                                                                                                        12777433616733951266;
                                                                                                                                    break
                                                                                                                                        's_1702
                                                                                                                                        ;
                                                                                                                                }
                                                                                                                                (*afl).stage_cur
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            } else {
                                                                                                                                (*afl).stage_max
                                                                                                                                    -=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            *(out_buf.offset(i
                                                                                                                                                 as
                                                                                                                                                 isize)
                                                                                                                                  as
                                                                                                                                  *mut u32_0)
                                                                                                                                =
                                                                                                                                orig_1;
                                                                                                                            j
                                                                                                                                +=
                                                                                                                                1
                                                                                                                        }
                                                                                                                    }
                                                                                                                    i
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                            match current_block
                                                                                                                {
                                                                                                                12777433616733951266
                                                                                                                =>
                                                                                                                {
                                                                                                                }
                                                                                                                _
                                                                                                                =>
                                                                                                                {
                                                                                                                    new_hit_cnt
                                                                                                                        =
                                                                                                                        ((*afl).queued_paths
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                    (*afl).stage_finds[STAGE_ARITH32
                                                                                                                                           as
                                                                                                                                           libc::c_int
                                                                                                                                           as
                                                                                                                                           usize]
                                                                                                                        =
                                                                                                                        ((*afl).stage_finds[STAGE_ARITH32
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                                as
                                                                                                                                                usize]
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                            as
                                                                                                                            u64_0
                                                                                                                            as
                                                                                                                            u64_0;
                                                                                                                    (*afl).stage_cycles[STAGE_ARITH32
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            usize]
                                                                                                                        =
                                                                                                                        ((*afl).stage_cycles[STAGE_ARITH32
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 usize]
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_ulonglong)
                                                                                                                            as
                                                                                                                            u64_0
                                                                                                                            as
                                                                                                                            u64_0;
                                                                                                                    current_block
                                                                                                                        =
                                                                                                                        12182190900736103889;
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                                match current_block
                                                                                    {
                                                                                    12777433616733951266
                                                                                    =>
                                                                                    {
                                                                                    }
                                                                                    _
                                                                                    =>
                                                                                    {
                                                                                        /* *********************
   * INTERESTING VALUES *
   **********************/
                                                                                        (*afl).stage_name
                                                                                            =
                                                                                            b"interest 8/8\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_short
                                                                                            =
                                                                                            b"int8\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_cur
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        (*afl).stage_max
                                                                                            =
                                                                                            (len
                                                                                                 as
                                                                                                 libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s8; 9]>()
                                                                                                                                 as
                                                                                                                                 libc::c_ulong)
                                                                                                as
                                                                                                s32;
                                                                                        (*afl).stage_val_type
                                                                                            =
                                                                                            STAGE_VAL_LE
                                                                                                as
                                                                                                libc::c_int
                                                                                                as
                                                                                                u8_0;
                                                                                        orig_hit_cnt
                                                                                            =
                                                                                            new_hit_cnt;
                                                                                        /* Setting 8-bit integers. */
                                                                                        i
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        's_1923:
                                                                                            loop 
                                                                                                 {
                                                                                                if !(i
                                                                                                         <
                                                                                                         len)
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        5979155369168080926;
                                                                                                    break
                                                                                                        ;
                                                                                                }
                                                                                                let mut orig_2:
                                                                                                        u8_0 =
                                                                                                    *out_buf.offset(i
                                                                                                                        as
                                                                                                                        isize);
                                                                                                /* Let's consult the effector map... */
                                                                                                if *eff_map.offset((i
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                                   {
                                                                                                    (*afl).stage_max
                                                                                                        =
                                                                                                        ((*afl).stage_max
                                                                                                             as
                                                                                                             libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s8; 9]>()
                                                                                                                                             as
                                                                                                                                             libc::c_ulong)
                                                                                                            as
                                                                                                            s32
                                                                                                            as
                                                                                                            s32
                                                                                                } else {
                                                                                                    (*afl).stage_cur_byte
                                                                                                        =
                                                                                                        i;
                                                                                                    j
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    while (j
                                                                                                               as
                                                                                                               libc::c_ulong)
                                                                                                              <
                                                                                                              ::std::mem::size_of::<[s8; 9]>()
                                                                                                                  as
                                                                                                                  libc::c_ulong
                                                                                                          {
                                                                                                        /* Skip if the value could be a product of bitflips or arithmetics. */
                                                                                                        if could_be_bitflip((orig_2
                                                                                                                                 as
                                                                                                                                 libc::c_int
                                                                                                                                 ^
                                                                                                                                 interesting_8[j
                                                                                                                                                   as
                                                                                                                                                   usize]
                                                                                                                                     as
                                                                                                                                     u8_0
                                                                                                                                     as
                                                                                                                                     libc::c_int)
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               !=
                                                                                                               0
                                                                                                               ||
                                                                                                               could_be_arith(orig_2
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              interesting_8[j
                                                                                                                                                as
                                                                                                                                                usize]
                                                                                                                                  as
                                                                                                                                  u8_0
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              1
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                                  as
                                                                                                                                  u8_0)
                                                                                                                   as
                                                                                                                   libc::c_int
                                                                                                                   !=
                                                                                                                   0
                                                                                                           {
                                                                                                            (*afl).stage_max
                                                                                                                -=
                                                                                                                1
                                                                                                        } else {
                                                                                                            (*afl).stage_cur_val
                                                                                                                =
                                                                                                                interesting_8[j
                                                                                                                                  as
                                                                                                                                  usize]
                                                                                                                    as
                                                                                                                    s32;
                                                                                                            *out_buf.offset(i
                                                                                                                                as
                                                                                                                                isize)
                                                                                                                =
                                                                                                                interesting_8[j
                                                                                                                                  as
                                                                                                                                  usize]
                                                                                                                    as
                                                                                                                    u8_0;
                                                                                                            if common_fuzz_stuff(afl,
                                                                                                                                 out_buf,
                                                                                                                                 len
                                                                                                                                     as
                                                                                                                                     u32_0)
                                                                                                                   !=
                                                                                                                   0
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    12777433616733951266;
                                                                                                                break
                                                                                                                    's_1923
                                                                                                                    ;
                                                                                                            }
                                                                                                            *out_buf.offset(i
                                                                                                                                as
                                                                                                                                isize)
                                                                                                                =
                                                                                                                orig_2;
                                                                                                            (*afl).stage_cur
                                                                                                                +=
                                                                                                                1
                                                                                                        }
                                                                                                        j
                                                                                                            +=
                                                                                                            1
                                                                                                    }
                                                                                                }
                                                                                                i
                                                                                                    +=
                                                                                                    1
                                                                                            }
                                                                                        match current_block
                                                                                            {
                                                                                            12777433616733951266
                                                                                            =>
                                                                                            {
                                                                                            }
                                                                                            _
                                                                                            =>
                                                                                            {
                                                                                                new_hit_cnt
                                                                                                    =
                                                                                                    ((*afl).queued_paths
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                (*afl).stage_finds[STAGE_INTEREST8
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                                       as
                                                                                                                       usize]
                                                                                                    =
                                                                                                    ((*afl).stage_finds[STAGE_INTEREST8
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                (*afl).stage_cycles[STAGE_INTEREST8
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        usize]
                                                                                                    =
                                                                                                    ((*afl).stage_cycles[STAGE_INTEREST8
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             as
                                                                                                                             usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                             as
                                                                                                                                             libc::c_ulonglong)
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                /* Setting 16-bit integers, both endians. */
                                                                                                if (*afl).no_arith
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                       !=
                                                                                                       0
                                                                                                       ||
                                                                                                       len
                                                                                                           <
                                                                                                           2
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        8280968883510158391;
                                                                                                } else {
                                                                                                    (*afl).stage_name
                                                                                                        =
                                                                                                        b"interest 16/8\x00"
                                                                                                            as
                                                                                                            *const u8
                                                                                                            as
                                                                                                            *const libc::c_char
                                                                                                            as
                                                                                                            *mut u8_0;
                                                                                                    (*afl).stage_short
                                                                                                        =
                                                                                                        b"int16\x00"
                                                                                                            as
                                                                                                            *const u8
                                                                                                            as
                                                                                                            *const libc::c_char
                                                                                                            as
                                                                                                            *mut u8_0;
                                                                                                    (*afl).stage_cur
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    (*afl).stage_max
                                                                                                        =
                                                                                                        ((2
                                                                                                              as
                                                                                                              libc::c_int
                                                                                                              *
                                                                                                              (len
                                                                                                                   -
                                                                                                                   1
                                                                                                                       as
                                                                                                                       libc::c_int))
                                                                                                             as
                                                                                                             libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s16; 19]>()
                                                                                                                                             as
                                                                                                                                             libc::c_ulong
                                                                                                                                             >>
                                                                                                                                             1
                                                                                                                                                 as
                                                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            s32;
                                                                                                    orig_hit_cnt
                                                                                                        =
                                                                                                        new_hit_cnt;
                                                                                                    i
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    's_2044:
                                                                                                        loop 
                                                                                                             {
                                                                                                            if !(i
                                                                                                                     <
                                                                                                                     len
                                                                                                                         -
                                                                                                                         1
                                                                                                                             as
                                                                                                                             libc::c_int)
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    2968497183096422187;
                                                                                                                break
                                                                                                                    ;
                                                                                                            }
                                                                                                            let mut orig_3:
                                                                                                                    u16_0 =
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u16_0);
                                                                                                            /* Let's consult the effector map... */
                                                                                                            if *eff_map.offset((i
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                                   &&
                                                                                                                   *eff_map.offset((i
                                                                                                                                        +
                                                                                                                                        1
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        >>
                                                                                                                                        3
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                       as
                                                                                                                                       isize)
                                                                                                                       ==
                                                                                                                       0
                                                                                                               {
                                                                                                                (*afl).stage_max
                                                                                                                    =
                                                                                                                    ((*afl).stage_max
                                                                                                                         as
                                                                                                                         libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s16; 19]>()
                                                                                                                                                         as
                                                                                                                                                         libc::c_ulong)
                                                                                                                        as
                                                                                                                        s32
                                                                                                                        as
                                                                                                                        s32
                                                                                                            } else {
                                                                                                                (*afl).stage_cur_byte
                                                                                                                    =
                                                                                                                    i;
                                                                                                                j
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                while (j
                                                                                                                           as
                                                                                                                           libc::c_ulong)
                                                                                                                          <
                                                                                                                          (::std::mem::size_of::<[s16; 19]>()
                                                                                                                               as
                                                                                                                               libc::c_ulong).wrapping_div(2
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_ulong)
                                                                                                                      {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        interesting_16[j
                                                                                                                                           as
                                                                                                                                           usize]
                                                                                                                            as
                                                                                                                            s32;
                                                                                                                    /* Skip if this could be a product of a bitflip, arithmetics,
         or single-byte interesting value insertion. */
                                                                                                                    if could_be_bitflip((orig_3
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                             ^
                                                                                                                                             interesting_16[j
                                                                                                                                                                as
                                                                                                                                                                usize]
                                                                                                                                                 as
                                                                                                                                                 u16_0
                                                                                                                                                 as
                                                                                                                                                 libc::c_int)
                                                                                                                                            as
                                                                                                                                            u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                           &&
                                                                                                                           could_be_arith(orig_3
                                                                                                                                              as
                                                                                                                                              u32_0,
                                                                                                                                          interesting_16[j
                                                                                                                                                             as
                                                                                                                                                             usize]
                                                                                                                                              as
                                                                                                                                              u16_0
                                                                                                                                              as
                                                                                                                                              u32_0,
                                                                                                                                          2
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                              as
                                                                                                                                              u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_interest(orig_3
                                                                                                                                                 as
                                                                                                                                                 u32_0,
                                                                                                                                             interesting_16[j
                                                                                                                                                                as
                                                                                                                                                                usize]
                                                                                                                                                 as
                                                                                                                                                 u16_0
                                                                                                                                                 as
                                                                                                                                                 u32_0,
                                                                                                                                             2
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0,
                                                                                                                                             0
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                       {
                                                                                                                        (*afl).stage_val_type
                                                                                                                            =
                                                                                                                            STAGE_VAL_LE
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                u8_0;
                                                                                                                        *(out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *mut u16_0)
                                                                                                                            =
                                                                                                                            interesting_16[j
                                                                                                                                               as
                                                                                                                                               usize]
                                                                                                                                as
                                                                                                                                u16_0;
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             out_buf,
                                                                                                                                             len
                                                                                                                                                 as
                                                                                                                                                 u32_0)
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                12777433616733951266;
                                                                                                                            break
                                                                                                                                's_2044
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    if interesting_16[j
                                                                                                                                          as
                                                                                                                                          usize]
                                                                                                                           as
                                                                                                                           u16_0
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           !=
                                                                                                                           ({
                                                                                                                                let mut _ret:
                                                                                                                                        u16_0 =
                                                                                                                                    interesting_16[j
                                                                                                                                                       as
                                                                                                                                                       usize]
                                                                                                                                        as
                                                                                                                                        u16_0;
                                                                                                                                ((_ret
                                                                                                                                      as
                                                                                                                                      libc::c_int)
                                                                                                                                     <<
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     |
                                                                                                                                     _ret
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         >>
                                                                                                                                         8
                                                                                                                                             as
                                                                                                                                             libc::c_int)
                                                                                                                                    as
                                                                                                                                    u16_0
                                                                                                                            })
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                           &&
                                                                                                                           could_be_bitflip((orig_3
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 ^
                                                                                                                                                 ({
                                                                                                                                                      let mut _ret:
                                                                                                                                                              u16_0 =
                                                                                                                                                          interesting_16[j
                                                                                                                                                                             as
                                                                                                                                                                             usize]
                                                                                                                                                              as
                                                                                                                                                              u16_0;
                                                                                                                                                      ((_ret
                                                                                                                                                            as
                                                                                                                                                            libc::c_int)
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           |
                                                                                                                                                           _ret
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               >>
                                                                                                                                                               8
                                                                                                                                                                   as
                                                                                                                                                                   libc::c_int)
                                                                                                                                                          as
                                                                                                                                                          u16_0
                                                                                                                                                  })
                                                                                                                                                     as
                                                                                                                                                     libc::c_int)
                                                                                                                                                as
                                                                                                                                                u32_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_arith(orig_3
                                                                                                                                              as
                                                                                                                                              u32_0,
                                                                                                                                          ({
                                                                                                                                               let mut _ret:
                                                                                                                                                       u16_0 =
                                                                                                                                                   interesting_16[j
                                                                                                                                                                      as
                                                                                                                                                                      usize]
                                                                                                                                                       as
                                                                                                                                                       u16_0;
                                                                                                                                               ((_ret
                                                                                                                                                     as
                                                                                                                                                     libc::c_int)
                                                                                                                                                    <<
                                                                                                                                                    8
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    |
                                                                                                                                                    _ret
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        >>
                                                                                                                                                        8
                                                                                                                                                            as
                                                                                                                                                            libc::c_int)
                                                                                                                                                   as
                                                                                                                                                   u16_0
                                                                                                                                           })
                                                                                                                                              as
                                                                                                                                              u32_0,
                                                                                                                                          2
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                              as
                                                                                                                                              u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_interest(orig_3
                                                                                                                                                 as
                                                                                                                                                 u32_0,
                                                                                                                                             ({
                                                                                                                                                  let mut _ret:
                                                                                                                                                          u16_0 =
                                                                                                                                                      interesting_16[j
                                                                                                                                                                         as
                                                                                                                                                                         usize]
                                                                                                                                                          as
                                                                                                                                                          u16_0;
                                                                                                                                                  ((_ret
                                                                                                                                                        as
                                                                                                                                                        libc::c_int)
                                                                                                                                                       <<
                                                                                                                                                       8
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                           >>
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int)
                                                                                                                                                      as
                                                                                                                                                      u16_0
                                                                                                                                              })
                                                                                                                                                 as
                                                                                                                                                 u32_0,
                                                                                                                                             2
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0,
                                                                                                                                             1
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                       {
                                                                                                                        (*afl).stage_val_type
                                                                                                                            =
                                                                                                                            STAGE_VAL_BE
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                u8_0;
                                                                                                                        *(out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *mut u16_0)
                                                                                                                            =
                                                                                                                            ({
                                                                                                                                 let mut _ret:
                                                                                                                                         u16_0 =
                                                                                                                                     interesting_16[j
                                                                                                                                                        as
                                                                                                                                                        usize]
                                                                                                                                         as
                                                                                                                                         u16_0;
                                                                                                                                 ((_ret
                                                                                                                                       as
                                                                                                                                       libc::c_int)
                                                                                                                                      <<
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      |
                                                                                                                                      _ret
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                          >>
                                                                                                                                          8
                                                                                                                                              as
                                                                                                                                              libc::c_int)
                                                                                                                                     as
                                                                                                                                     u16_0
                                                                                                                             });
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             out_buf,
                                                                                                                                             len
                                                                                                                                                 as
                                                                                                                                                 u32_0)
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                12777433616733951266;
                                                                                                                            break
                                                                                                                                's_2044
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    j
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u16_0)
                                                                                                                    =
                                                                                                                    orig_3
                                                                                                            }
                                                                                                            i
                                                                                                                +=
                                                                                                                1
                                                                                                        }
                                                                                                    match current_block
                                                                                                        {
                                                                                                        12777433616733951266
                                                                                                        =>
                                                                                                        {
                                                                                                        }
                                                                                                        _
                                                                                                        =>
                                                                                                        {
                                                                                                            new_hit_cnt
                                                                                                                =
                                                                                                                ((*afl).queued_paths
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                            (*afl).stage_finds[STAGE_INTEREST16
                                                                                                                                   as
                                                                                                                                   libc::c_int
                                                                                                                                   as
                                                                                                                                   usize]
                                                                                                                =
                                                                                                                ((*afl).stage_finds[STAGE_INTEREST16
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        usize]
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                    as
                                                                                                                    u64_0
                                                                                                                    as
                                                                                                                    u64_0;
                                                                                                            (*afl).stage_cycles[STAGE_INTEREST16
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                =
                                                                                                                ((*afl).stage_cycles[STAGE_INTEREST16
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         usize]
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                         as
                                                                                                                                                         libc::c_ulonglong)
                                                                                                                    as
                                                                                                                    u64_0
                                                                                                                    as
                                                                                                                    u64_0;
                                                                                                            if len
                                                                                                                   <
                                                                                                                   4
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    8280968883510158391;
                                                                                                            } else {
                                                                                                                /* Setting 32-bit integers, both endians. */
                                                                                                                (*afl).stage_name
                                                                                                                    =
                                                                                                                    b"interest 32/8\x00"
                                                                                                                        as
                                                                                                                        *const u8
                                                                                                                        as
                                                                                                                        *const libc::c_char
                                                                                                                        as
                                                                                                                        *mut u8_0;
                                                                                                                (*afl).stage_short
                                                                                                                    =
                                                                                                                    b"int32\x00"
                                                                                                                        as
                                                                                                                        *const u8
                                                                                                                        as
                                                                                                                        *const libc::c_char
                                                                                                                        as
                                                                                                                        *mut u8_0;
                                                                                                                (*afl).stage_cur
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                (*afl).stage_max
                                                                                                                    =
                                                                                                                    ((2
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          *
                                                                                                                          (len
                                                                                                                               -
                                                                                                                               3
                                                                                                                                   as
                                                                                                                                   libc::c_int))
                                                                                                                         as
                                                                                                                         libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s32; 27]>()
                                                                                                                                                         as
                                                                                                                                                         libc::c_ulong
                                                                                                                                                         >>
                                                                                                                                                         2
                                                                                                                                                             as
                                                                                                                                                             libc::c_int)
                                                                                                                        as
                                                                                                                        s32;
                                                                                                                orig_hit_cnt
                                                                                                                    =
                                                                                                                    new_hit_cnt;
                                                                                                                i
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                's_2198:
                                                                                                                    loop 
                                                                                                                         {
                                                                                                                        if !(i
                                                                                                                                 <
                                                                                                                                 len
                                                                                                                                     -
                                                                                                                                     3
                                                                                                                                         as
                                                                                                                                         libc::c_int)
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                15807116048003831968;
                                                                                                                            break
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        let mut orig_4:
                                                                                                                                u32_0 =
                                                                                                                            *(out_buf.offset(i
                                                                                                                                                 as
                                                                                                                                                 isize)
                                                                                                                                  as
                                                                                                                                  *mut u32_0);
                                                                                                                        /* Let's consult the effector map... */
                                                                                                                        if *eff_map.offset((i
                                                                                                                                                >>
                                                                                                                                                3
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                               as
                                                                                                                                               isize)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                               &&
                                                                                                                               *eff_map.offset((i
                                                                                                                                                    +
                                                                                                                                                    1
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    >>
                                                                                                                                                    3
                                                                                                                                                        as
                                                                                                                                                        libc::c_int)
                                                                                                                                                   as
                                                                                                                                                   isize)
                                                                                                                                   ==
                                                                                                                                   0
                                                                                                                               &&
                                                                                                                               *eff_map.offset((i
                                                                                                                                                    +
                                                                                                                                                    2
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    >>
                                                                                                                                                    3
                                                                                                                                                        as
                                                                                                                                                        libc::c_int)
                                                                                                                                                   as
                                                                                                                                                   isize)
                                                                                                                                   ==
                                                                                                                                   0
                                                                                                                               &&
                                                                                                                               *eff_map.offset((i
                                                                                                                                                    +
                                                                                                                                                    3
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    >>
                                                                                                                                                    3
                                                                                                                                                        as
                                                                                                                                                        libc::c_int)
                                                                                                                                                   as
                                                                                                                                                   isize)
                                                                                                                                   ==
                                                                                                                                   0
                                                                                                                           {
                                                                                                                            (*afl).stage_max
                                                                                                                                =
                                                                                                                                ((*afl).stage_max
                                                                                                                                     as
                                                                                                                                     libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s32; 27]>()
                                                                                                                                                                     as
                                                                                                                                                                     libc::c_ulong
                                                                                                                                                                     >>
                                                                                                                                                                     1
                                                                                                                                                                         as
                                                                                                                                                                         libc::c_int)
                                                                                                                                    as
                                                                                                                                    s32
                                                                                                                                    as
                                                                                                                                    s32
                                                                                                                        } else {
                                                                                                                            (*afl).stage_cur_byte
                                                                                                                                =
                                                                                                                                i;
                                                                                                                            j
                                                                                                                                =
                                                                                                                                0
                                                                                                                                    as
                                                                                                                                    libc::c_int;
                                                                                                                            while (j
                                                                                                                                       as
                                                                                                                                       libc::c_ulong)
                                                                                                                                      <
                                                                                                                                      (::std::mem::size_of::<[s32; 27]>()
                                                                                                                                           as
                                                                                                                                           libc::c_ulong).wrapping_div(4
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_int
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_ulong)
                                                                                                                                  {
                                                                                                                                (*afl).stage_cur_val
                                                                                                                                    =
                                                                                                                                    interesting_32[j
                                                                                                                                                       as
                                                                                                                                                       usize];
                                                                                                                                /* Skip if this could be a product of a bitflip, arithmetics,
         or word interesting value insertion. */
                                                                                                                                if could_be_bitflip(orig_4
                                                                                                                                                        ^
                                                                                                                                                        interesting_32[j
                                                                                                                                                                           as
                                                                                                                                                                           usize]
                                                                                                                                                            as
                                                                                                                                                            u32_0)
                                                                                                                                       ==
                                                                                                                                       0
                                                                                                                                       &&
                                                                                                                                       could_be_arith(orig_4,
                                                                                                                                                      interesting_32[j
                                                                                                                                                                         as
                                                                                                                                                                         usize]
                                                                                                                                                          as
                                                                                                                                                          u32_0,
                                                                                                                                                      4
                                                                                                                                                          as
                                                                                                                                                          libc::c_int
                                                                                                                                                          as
                                                                                                                                                          u8_0)
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                       &&
                                                                                                                                       could_be_interest(orig_4,
                                                                                                                                                         interesting_32[j
                                                                                                                                                                            as
                                                                                                                                                                            usize]
                                                                                                                                                             as
                                                                                                                                                             u32_0,
                                                                                                                                                         4
                                                                                                                                                             as
                                                                                                                                                             libc::c_int
                                                                                                                                                             as
                                                                                                                                                             u8_0,
                                                                                                                                                         0
                                                                                                                                                             as
                                                                                                                                                             libc::c_int
                                                                                                                                                             as
                                                                                                                                                             u8_0)
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                   {
                                                                                                                                    (*afl).stage_val_type
                                                                                                                                        =
                                                                                                                                        STAGE_VAL_LE
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            u8_0;
                                                                                                                                    *(out_buf.offset(i
                                                                                                                                                         as
                                                                                                                                                         isize)
                                                                                                                                          as
                                                                                                                                          *mut u32_0)
                                                                                                                                        =
                                                                                                                                        interesting_32[j
                                                                                                                                                           as
                                                                                                                                                           usize]
                                                                                                                                            as
                                                                                                                                            u32_0;
                                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                                         out_buf,
                                                                                                                                                         len
                                                                                                                                                             as
                                                                                                                                                             u32_0)
                                                                                                                                           !=
                                                                                                                                           0
                                                                                                                                       {
                                                                                                                                        current_block
                                                                                                                                            =
                                                                                                                                            12777433616733951266;
                                                                                                                                        break
                                                                                                                                            's_2198
                                                                                                                                            ;
                                                                                                                                    }
                                                                                                                                    (*afl).stage_cur
                                                                                                                                        +=
                                                                                                                                        1
                                                                                                                                } else {
                                                                                                                                    (*afl).stage_max
                                                                                                                                        -=
                                                                                                                                        1
                                                                                                                                }
                                                                                                                                if interesting_32[j
                                                                                                                                                      as
                                                                                                                                                      usize]
                                                                                                                                       as
                                                                                                                                       u32_0
                                                                                                                                       !=
                                                                                                                                       ({
                                                                                                                                            let mut _ret:
                                                                                                                                                    u32_0 =
                                                                                                                                                interesting_32[j
                                                                                                                                                                   as
                                                                                                                                                                   usize]
                                                                                                                                                    as
                                                                                                                                                    u32_0;
                                                                                                                                            (_ret
                                                                                                                                                 <<
                                                                                                                                                 24
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                 |
                                                                                                                                                 _ret
                                                                                                                                                     >>
                                                                                                                                                     24
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                 |
                                                                                                                                                 _ret
                                                                                                                                                     <<
                                                                                                                                                     8
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                     &
                                                                                                                                                     0xff0000
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         as
                                                                                                                                                         libc::c_uint)
                                                                                                                                                |
                                                                                                                                                _ret
                                                                                                                                                    >>
                                                                                                                                                    8
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    &
                                                                                                                                                    0xff00
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        as
                                                                                                                                                        libc::c_uint
                                                                                                                                        })
                                                                                                                                       &&
                                                                                                                                       could_be_bitflip(orig_4
                                                                                                                                                            ^
                                                                                                                                                            ({
                                                                                                                                                                 let mut _ret:
                                                                                                                                                                         u32_0 =
                                                                                                                                                                     interesting_32[j
                                                                                                                                                                                        as
                                                                                                                                                                                        usize]
                                                                                                                                                                         as
                                                                                                                                                                         u32_0;
                                                                                                                                                                 (_ret
                                                                                                                                                                      <<
                                                                                                                                                                      24
                                                                                                                                                                          as
                                                                                                                                                                          libc::c_int
                                                                                                                                                                      |
                                                                                                                                                                      _ret
                                                                                                                                                                          >>
                                                                                                                                                                          24
                                                                                                                                                                              as
                                                                                                                                                                              libc::c_int
                                                                                                                                                                      |
                                                                                                                                                                      _ret
                                                                                                                                                                          <<
                                                                                                                                                                          8
                                                                                                                                                                              as
                                                                                                                                                                              libc::c_int
                                                                                                                                                                          &
                                                                                                                                                                          0xff0000
                                                                                                                                                                              as
                                                                                                                                                                              libc::c_int
                                                                                                                                                                              as
                                                                                                                                                                              libc::c_uint)
                                                                                                                                                                     |
                                                                                                                                                                     _ret
                                                                                                                                                                         >>
                                                                                                                                                                         8
                                                                                                                                                                             as
                                                                                                                                                                             libc::c_int
                                                                                                                                                                         &
                                                                                                                                                                         0xff00
                                                                                                                                                                             as
                                                                                                                                                                             libc::c_int
                                                                                                                                                                             as
                                                                                                                                                                             libc::c_uint
                                                                                                                                                             }))
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                       &&
                                                                                                                                       could_be_arith(orig_4,
                                                                                                                                                      ({
                                                                                                                                                           let mut _ret:
                                                                                                                                                                   u32_0 =
                                                                                                                                                               interesting_32[j
                                                                                                                                                                                  as
                                                                                                                                                                                  usize]
                                                                                                                                                                   as
                                                                                                                                                                   u32_0;
                                                                                                                                                           (_ret
                                                                                                                                                                <<
                                                                                                                                                                24
                                                                                                                                                                    as
                                                                                                                                                                    libc::c_int
                                                                                                                                                                |
                                                                                                                                                                _ret
                                                                                                                                                                    >>
                                                                                                                                                                    24
                                                                                                                                                                        as
                                                                                                                                                                        libc::c_int
                                                                                                                                                                |
                                                                                                                                                                _ret
                                                                                                                                                                    <<
                                                                                                                                                                    8
                                                                                                                                                                        as
                                                                                                                                                                        libc::c_int
                                                                                                                                                                    &
                                                                                                                                                                    0xff0000
                                                                                                                                                                        as
                                                                                                                                                                        libc::c_int
                                                                                                                                                                        as
                                                                                                                                                                        libc::c_uint)
                                                                                                                                                               |
                                                                                                                                                               _ret
                                                                                                                                                                   >>
                                                                                                                                                                   8
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_int
                                                                                                                                                                   &
                                                                                                                                                                   0xff00
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_int
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_uint
                                                                                                                                                       }),
                                                                                                                                                      4
                                                                                                                                                          as
                                                                                                                                                          libc::c_int
                                                                                                                                                          as
                                                                                                                                                          u8_0)
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                       &&
                                                                                                                                       could_be_interest(orig_4,
                                                                                                                                                         ({
                                                                                                                                                              let mut _ret:
                                                                                                                                                                      u32_0 =
                                                                                                                                                                  interesting_32[j
                                                                                                                                                                                     as
                                                                                                                                                                                     usize]
                                                                                                                                                                      as
                                                                                                                                                                      u32_0;
                                                                                                                                                              (_ret
                                                                                                                                                                   <<
                                                                                                                                                                   24
                                                                                                                                                                       as
                                                                                                                                                                       libc::c_int
                                                                                                                                                                   |
                                                                                                                                                                   _ret
                                                                                                                                                                       >>
                                                                                                                                                                       24
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_int
                                                                                                                                                                   |
                                                                                                                                                                   _ret
                                                                                                                                                                       <<
                                                                                                                                                                       8
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_int
                                                                                                                                                                       &
                                                                                                                                                                       0xff0000
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_int
                                                                                                                                                                           as
                                                                                                                                                                           libc::c_uint)
                                                                                                                                                                  |
                                                                                                                                                                  _ret
                                                                                                                                                                      >>
                                                                                                                                                                      8
                                                                                                                                                                          as
                                                                                                                                                                          libc::c_int
                                                                                                                                                                      &
                                                                                                                                                                      0xff00
                                                                                                                                                                          as
                                                                                                                                                                          libc::c_int
                                                                                                                                                                          as
                                                                                                                                                                          libc::c_uint
                                                                                                                                                          }),
                                                                                                                                                         4
                                                                                                                                                             as
                                                                                                                                                             libc::c_int
                                                                                                                                                             as
                                                                                                                                                             u8_0,
                                                                                                                                                         1
                                                                                                                                                             as
                                                                                                                                                             libc::c_int
                                                                                                                                                             as
                                                                                                                                                             u8_0)
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                   {
                                                                                                                                    (*afl).stage_val_type
                                                                                                                                        =
                                                                                                                                        STAGE_VAL_BE
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            u8_0;
                                                                                                                                    *(out_buf.offset(i
                                                                                                                                                         as
                                                                                                                                                         isize)
                                                                                                                                          as
                                                                                                                                          *mut u32_0)
                                                                                                                                        =
                                                                                                                                        ({
                                                                                                                                             let mut _ret:
                                                                                                                                                     u32_0 =
                                                                                                                                                 interesting_32[j
                                                                                                                                                                    as
                                                                                                                                                                    usize]
                                                                                                                                                     as
                                                                                                                                                     u32_0;
                                                                                                                                             (_ret
                                                                                                                                                  <<
                                                                                                                                                  24
                                                                                                                                                      as
                                                                                                                                                      libc::c_int
                                                                                                                                                  |
                                                                                                                                                  _ret
                                                                                                                                                      >>
                                                                                                                                                      24
                                                                                                                                                          as
                                                                                                                                                          libc::c_int
                                                                                                                                                  |
                                                                                                                                                  _ret
                                                                                                                                                      <<
                                                                                                                                                      8
                                                                                                                                                          as
                                                                                                                                                          libc::c_int
                                                                                                                                                      &
                                                                                                                                                      0xff0000
                                                                                                                                                          as
                                                                                                                                                          libc::c_int
                                                                                                                                                          as
                                                                                                                                                          libc::c_uint)
                                                                                                                                                 |
                                                                                                                                                 _ret
                                                                                                                                                     >>
                                                                                                                                                     8
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                     &
                                                                                                                                                     0xff00
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         as
                                                                                                                                                         libc::c_uint
                                                                                                                                         });
                                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                                         out_buf,
                                                                                                                                                         len
                                                                                                                                                             as
                                                                                                                                                             u32_0)
                                                                                                                                           !=
                                                                                                                                           0
                                                                                                                                       {
                                                                                                                                        current_block
                                                                                                                                            =
                                                                                                                                            12777433616733951266;
                                                                                                                                        break
                                                                                                                                            's_2198
                                                                                                                                            ;
                                                                                                                                    }
                                                                                                                                    (*afl).stage_cur
                                                                                                                                        +=
                                                                                                                                        1
                                                                                                                                } else {
                                                                                                                                    (*afl).stage_max
                                                                                                                                        -=
                                                                                                                                        1
                                                                                                                                }
                                                                                                                                j
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            *(out_buf.offset(i
                                                                                                                                                 as
                                                                                                                                                 isize)
                                                                                                                                  as
                                                                                                                                  *mut u32_0)
                                                                                                                                =
                                                                                                                                orig_4
                                                                                                                        }
                                                                                                                        i
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    }
                                                                                                                match current_block
                                                                                                                    {
                                                                                                                    12777433616733951266
                                                                                                                    =>
                                                                                                                    {
                                                                                                                    }
                                                                                                                    _
                                                                                                                    =>
                                                                                                                    {
                                                                                                                        new_hit_cnt
                                                                                                                            =
                                                                                                                            ((*afl).queued_paths
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                        (*afl).stage_finds[STAGE_INTEREST32
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               as
                                                                                                                                               usize]
                                                                                                                            =
                                                                                                                            ((*afl).stage_finds[STAGE_INTEREST32
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                    as
                                                                                                                                                    usize]
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                                as
                                                                                                                                u64_0
                                                                                                                                as
                                                                                                                                u64_0;
                                                                                                                        (*afl).stage_cycles[STAGE_INTEREST32
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                                as
                                                                                                                                                usize]
                                                                                                                            =
                                                                                                                            ((*afl).stage_cycles[STAGE_INTEREST32
                                                                                                                                                     as
                                                                                                                                                     libc::c_int
                                                                                                                                                     as
                                                                                                                                                     usize]
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                                     as
                                                                                                                                                                     libc::c_ulonglong)
                                                                                                                                as
                                                                                                                                u64_0
                                                                                                                                as
                                                                                                                                u64_0;
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            8280968883510158391;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                match current_block
                                                                                                    {
                                                                                                    12777433616733951266
                                                                                                    =>
                                                                                                    {
                                                                                                    }
                                                                                                    _
                                                                                                    =>

                                                                                                    /* *******************
   * DICTIONARY STUFF *
   ********************/
                                                                                                    {
                                                                                                        if (*afl).extras_cnt
                                                                                                               ==
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                3495754285402390224;
                                                                                                        } else {
                                                                                                            /* Overwrite with user-supplied extras. */
                                                                                                            (*afl).stage_name
                                                                                                                =
                                                                                                                b"user extras (over)\x00"
                                                                                                                    as
                                                                                                                    *const u8
                                                                                                                    as
                                                                                                                    *const libc::c_char
                                                                                                                    as
                                                                                                                    *mut u8_0;
                                                                                                            (*afl).stage_short
                                                                                                                =
                                                                                                                b"ext_UO\x00"
                                                                                                                    as
                                                                                                                    *const u8
                                                                                                                    as
                                                                                                                    *const libc::c_char
                                                                                                                    as
                                                                                                                    *mut u8_0;
                                                                                                            (*afl).stage_cur
                                                                                                                =
                                                                                                                0
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            (*afl).stage_max
                                                                                                                =
                                                                                                                (*afl).extras_cnt.wrapping_mul(len
                                                                                                                                                   as
                                                                                                                                                   libc::c_uint)
                                                                                                                    as
                                                                                                                    s32;
                                                                                                            (*afl).stage_val_type
                                                                                                                =
                                                                                                                STAGE_VAL_NONE
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    u8_0;
                                                                                                            orig_hit_cnt
                                                                                                                =
                                                                                                                new_hit_cnt;
                                                                                                            i
                                                                                                                =
                                                                                                                0
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            's_2358:
                                                                                                                loop 
                                                                                                                     {
                                                                                                                    if !(i
                                                                                                                             <
                                                                                                                             len)
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            5271113972066554886;
                                                                                                                        break
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    let mut last_len:
                                                                                                                            u32_0 =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            u32_0;
                                                                                                                    (*afl).stage_cur_byte
                                                                                                                        =
                                                                                                                        i;
                                                                                                                    /* Extras are sorted by size, from smallest to largest. This means
       that we don't have to worry about restoring the buffer in
       between writes at a particular offset determined by the outer
       loop. */
                                                                                                                    j
                                                                                                                        =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int;
                                                                                                                    while (j
                                                                                                                               as
                                                                                                                               libc::c_uint)
                                                                                                                              <
                                                                                                                              (*afl).extras_cnt
                                                                                                                          {
                                                                                                                        /* Skip extras probabilistically if afl->extras_cnt > MAX_DET_EXTRAS. Also
         skip them if there's no room to insert the payload, if the token
         is redundant, or if its entire span has no bytes set in the effector
         map. */
                                                                                                                        if (*afl).extras_cnt
                                                                                                                               >
                                                                                                                               200
                                                                                                                                   as
                                                                                                                                   libc::c_int
                                                                                                                                   as
                                                                                                                                   libc::c_uint
                                                                                                                               &&
                                                                                                                               rand_below(afl,
                                                                                                                                          (*afl).extras_cnt)
                                                                                                                                   >=
                                                                                                                                   200
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                               ||
                                                                                                                               (*(*afl).extras.offset(j
                                                                                                                                                          as
                                                                                                                                                          isize)).len
                                                                                                                                   >
                                                                                                                                   (len
                                                                                                                                        -
                                                                                                                                        i)
                                                                                                                                       as
                                                                                                                                       libc::c_uint
                                                                                                                               ||
                                                                                                                               memcmp((*(*afl).extras.offset(j
                                                                                                                                                                 as
                                                                                                                                                                 isize)).data
                                                                                                                                          as
                                                                                                                                          *const libc::c_void,
                                                                                                                                      out_buf.offset(i
                                                                                                                                                         as
                                                                                                                                                         isize)
                                                                                                                                          as
                                                                                                                                          *const libc::c_void,
                                                                                                                                      (*(*afl).extras.offset(j
                                                                                                                                                                 as
                                                                                                                                                                 isize)).len
                                                                                                                                          as
                                                                                                                                          libc::c_ulong)
                                                                                                                                   ==
                                                                                                                                   0
                                                                                                                               ||
                                                                                                                               memchr(eff_map.offset((i
                                                                                                                                                          >>
                                                                                                                                                          3
                                                                                                                                                              as
                                                                                                                                                              libc::c_int)
                                                                                                                                                         as
                                                                                                                                                         isize)
                                                                                                                                          as
                                                                                                                                          *const libc::c_void,
                                                                                                                                      1
                                                                                                                                          as
                                                                                                                                          libc::c_int,
                                                                                                                                      ((i
                                                                                                                                            as
                                                                                                                                            libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                                  as
                                                                                                                                                                                                  isize)).len).wrapping_sub(1
                                                                                                                                                                                                                                as
                                                                                                                                                                                                                                libc::c_int
                                                                                                                                                                                                                                as
                                                                                                                                                                                                                                libc::c_uint)
                                                                                                                                           >>
                                                                                                                                           3
                                                                                                                                               as
                                                                                                                                               libc::c_int).wrapping_sub((i
                                                                                                                                                                              >>
                                                                                                                                                                              3
                                                                                                                                                                                  as
                                                                                                                                                                                  libc::c_int)
                                                                                                                                                                             as
                                                                                                                                                                             libc::c_uint).wrapping_add(1
                                                                                                                                                                                                            as
                                                                                                                                                                                                            libc::c_int
                                                                                                                                                                                                            as
                                                                                                                                                                                                            libc::c_uint)
                                                                                                                                          as
                                                                                                                                          libc::c_ulong).is_null()
                                                                                                                           {
                                                                                                                            (*afl).stage_max
                                                                                                                                -=
                                                                                                                                1
                                                                                                                        } else {
                                                                                                                            last_len
                                                                                                                                =
                                                                                                                                (*(*afl).extras.offset(j
                                                                                                                                                           as
                                                                                                                                                           isize)).len;
                                                                                                                            memcpy(out_buf.offset(i
                                                                                                                                                      as
                                                                                                                                                      isize)
                                                                                                                                       as
                                                                                                                                       *mut libc::c_void,
                                                                                                                                   (*(*afl).extras.offset(j
                                                                                                                                                              as
                                                                                                                                                              isize)).data
                                                                                                                                       as
                                                                                                                                       *const libc::c_void,
                                                                                                                                   last_len
                                                                                                                                       as
                                                                                                                                       libc::c_ulong);
                                                                                                                            if common_fuzz_stuff(afl,
                                                                                                                                                 out_buf,
                                                                                                                                                 len
                                                                                                                                                     as
                                                                                                                                                     u32_0)
                                                                                                                                   !=
                                                                                                                                   0
                                                                                                                               {
                                                                                                                                current_block
                                                                                                                                    =
                                                                                                                                    12777433616733951266;
                                                                                                                                break
                                                                                                                                    's_2358
                                                                                                                                    ;
                                                                                                                            }
                                                                                                                            (*afl).stage_cur
                                                                                                                                +=
                                                                                                                                1
                                                                                                                        }
                                                                                                                        j
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    /* Restore all the clobbered memory. */
                                                                                                                    memcpy(out_buf.offset(i
                                                                                                                                              as
                                                                                                                                              isize)
                                                                                                                               as
                                                                                                                               *mut libc::c_void,
                                                                                                                           in_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                               as
                                                                                                                               *const libc::c_void,
                                                                                                                           last_len
                                                                                                                               as
                                                                                                                               libc::c_ulong);
                                                                                                                    i
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                            match current_block
                                                                                                                {
                                                                                                                12777433616733951266
                                                                                                                =>
                                                                                                                {
                                                                                                                }
                                                                                                                _
                                                                                                                =>
                                                                                                                {
                                                                                                                    new_hit_cnt
                                                                                                                        =
                                                                                                                        ((*afl).queued_paths
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                    (*afl).stage_finds[STAGE_EXTRAS_UO
                                                                                                                                           as
                                                                                                                                           libc::c_int
                                                                                                                                           as
                                                                                                                                           usize]
                                                                                                                        =
                                                                                                                        ((*afl).stage_finds[STAGE_EXTRAS_UO
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                                as
                                                                                                                                                usize]
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                            as
                                                                                                                            u64_0
                                                                                                                            as
                                                                                                                            u64_0;
                                                                                                                    (*afl).stage_cycles[STAGE_EXTRAS_UO
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            usize]
                                                                                                                        =
                                                                                                                        ((*afl).stage_cycles[STAGE_EXTRAS_UO
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 usize]
                                                                                                                             as
                                                                                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_ulonglong)
                                                                                                                            as
                                                                                                                            u64_0
                                                                                                                            as
                                                                                                                            u64_0;
                                                                                                                    /* Insertion of user-supplied extras. */
                                                                                                                    (*afl).stage_name
                                                                                                                        =
                                                                                                                        b"user extras (insert)\x00"
                                                                                                                            as
                                                                                                                            *const u8
                                                                                                                            as
                                                                                                                            *const libc::c_char
                                                                                                                            as
                                                                                                                            *mut u8_0;
                                                                                                                    (*afl).stage_short
                                                                                                                        =
                                                                                                                        b"ext_UI\x00"
                                                                                                                            as
                                                                                                                            *const u8
                                                                                                                            as
                                                                                                                            *const libc::c_char
                                                                                                                            as
                                                                                                                            *mut u8_0;
                                                                                                                    (*afl).stage_cur
                                                                                                                        =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int;
                                                                                                                    (*afl).stage_max
                                                                                                                        =
                                                                                                                        (*afl).extras_cnt.wrapping_mul((len
                                                                                                                                                            +
                                                                                                                                                            1
                                                                                                                                                                as
                                                                                                                                                                libc::c_int)
                                                                                                                                                           as
                                                                                                                                                           libc::c_uint)
                                                                                                                            as
                                                                                                                            s32;
                                                                                                                    orig_hit_cnt
                                                                                                                        =
                                                                                                                        new_hit_cnt;
                                                                                                                    ex_tmp
                                                                                                                        =
                                                                                                                        ck_maybe_grow(&mut (*afl).ex_buf
                                                                                                                                          as
                                                                                                                                          *mut *mut u8_0
                                                                                                                                          as
                                                                                                                                          *mut *mut libc::c_void,
                                                                                                                                      &mut (*afl).ex_size,
                                                                                                                                      (len
                                                                                                                                           +
                                                                                                                                           128
                                                                                                                                               as
                                                                                                                                               libc::c_int)
                                                                                                                                          as
                                                                                                                                          size_t)
                                                                                                                            as
                                                                                                                            *mut u8_0;
                                                                                                                    i
                                                                                                                        =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int;
                                                                                                                    's_2464:
                                                                                                                        loop 
                                                                                                                             {
                                                                                                                            if !(i
                                                                                                                                     <=
                                                                                                                                     len)
                                                                                                                               {
                                                                                                                                current_block
                                                                                                                                    =
                                                                                                                                    13195606029524724799;
                                                                                                                                break
                                                                                                                                    ;
                                                                                                                            }
                                                                                                                            (*afl).stage_cur_byte
                                                                                                                                =
                                                                                                                                i;
                                                                                                                            j
                                                                                                                                =
                                                                                                                                0
                                                                                                                                    as
                                                                                                                                    libc::c_int;
                                                                                                                            while (j
                                                                                                                                       as
                                                                                                                                       libc::c_uint)
                                                                                                                                      <
                                                                                                                                      (*afl).extras_cnt
                                                                                                                                  {
                                                                                                                                if (len
                                                                                                                                        as
                                                                                                                                        libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                              as
                                                                                                                                                                                              isize)).len)
                                                                                                                                       >
                                                                                                                                       (1
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            *
                                                                                                                                            1024
                                                                                                                                                as
                                                                                                                                                libc::c_int
                                                                                                                                            *
                                                                                                                                            1024
                                                                                                                                                as
                                                                                                                                                libc::c_int)
                                                                                                                                           as
                                                                                                                                           libc::c_uint
                                                                                                                                   {
                                                                                                                                    (*afl).stage_max
                                                                                                                                        -=
                                                                                                                                        1
                                                                                                                                } else {
                                                                                                                                    /* Insert token */
                                                                                                                                    memcpy(ex_tmp.offset(i
                                                                                                                                                             as
                                                                                                                                                             isize)
                                                                                                                                               as
                                                                                                                                               *mut libc::c_void,
                                                                                                                                           (*(*afl).extras.offset(j
                                                                                                                                                                      as
                                                                                                                                                                      isize)).data
                                                                                                                                               as
                                                                                                                                               *const libc::c_void,
                                                                                                                                           (*(*afl).extras.offset(j
                                                                                                                                                                      as
                                                                                                                                                                      isize)).len
                                                                                                                                               as
                                                                                                                                               libc::c_ulong);
                                                                                                                                    /* Copy tail */
                                                                                                                                    memcpy(ex_tmp.offset(i
                                                                                                                                                             as
                                                                                                                                                             isize).offset((*(*afl).extras.offset(j
                                                                                                                                                                                                      as
                                                                                                                                                                                                      isize)).len
                                                                                                                                                                               as
                                                                                                                                                                               isize)
                                                                                                                                               as
                                                                                                                                               *mut libc::c_void,
                                                                                                                                           out_buf.offset(i
                                                                                                                                                              as
                                                                                                                                                              isize)
                                                                                                                                               as
                                                                                                                                               *const libc::c_void,
                                                                                                                                           (len
                                                                                                                                                -
                                                                                                                                                i)
                                                                                                                                               as
                                                                                                                                               libc::c_ulong);
                                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                                         ex_tmp,
                                                                                                                                                         (len
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                                                    as
                                                                                                                                                                                                                    isize)).len))
                                                                                                                                           !=
                                                                                                                                           0
                                                                                                                                       {
                                                                                                                                        current_block
                                                                                                                                            =
                                                                                                                                            12777433616733951266;
                                                                                                                                        break
                                                                                                                                            's_2464
                                                                                                                                            ;
                                                                                                                                    }
                                                                                                                                    (*afl).stage_cur
                                                                                                                                        +=
                                                                                                                                        1
                                                                                                                                }
                                                                                                                                j
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            /* Copy head */
                                                                                                                            *ex_tmp.offset(i
                                                                                                                                               as
                                                                                                                                               isize)
                                                                                                                                =
                                                                                                                                *out_buf.offset(i
                                                                                                                                                    as
                                                                                                                                                    isize);
                                                                                                                            i
                                                                                                                                +=
                                                                                                                                1
                                                                                                                        }
                                                                                                                    match current_block
                                                                                                                        {
                                                                                                                        12777433616733951266
                                                                                                                        =>
                                                                                                                        {
                                                                                                                        }
                                                                                                                        _
                                                                                                                        =>
                                                                                                                        {
                                                                                                                            new_hit_cnt
                                                                                                                                =
                                                                                                                                ((*afl).queued_paths
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                            (*afl).stage_finds[STAGE_EXTRAS_UI
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   usize]
                                                                                                                                =
                                                                                                                                ((*afl).stage_finds[STAGE_EXTRAS_UI
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        as
                                                                                                                                                        usize]
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                                    as
                                                                                                                                    u64_0
                                                                                                                                    as
                                                                                                                                    u64_0;
                                                                                                                            (*afl).stage_cycles[STAGE_EXTRAS_UI
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                    as
                                                                                                                                                    usize]
                                                                                                                                =
                                                                                                                                ((*afl).stage_cycles[STAGE_EXTRAS_UI
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         as
                                                                                                                                                         usize]
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                                         as
                                                                                                                                                                         libc::c_ulonglong)
                                                                                                                                    as
                                                                                                                                    u64_0
                                                                                                                                    as
                                                                                                                                    u64_0;
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                3495754285402390224;
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        match current_block
                                                                                                            {
                                                                                                            12777433616733951266
                                                                                                            =>
                                                                                                            {
                                                                                                            }
                                                                                                            _
                                                                                                            =>
                                                                                                            {
                                                                                                                if (*afl).a_extras_cnt
                                                                                                                       ==
                                                                                                                       0
                                                                                                                   {
                                                                                                                    current_block
                                                                                                                        =
                                                                                                                        7848700440043382301;
                                                                                                                } else {
                                                                                                                    (*afl).stage_name
                                                                                                                        =
                                                                                                                        b"auto extras (over)\x00"
                                                                                                                            as
                                                                                                                            *const u8
                                                                                                                            as
                                                                                                                            *const libc::c_char
                                                                                                                            as
                                                                                                                            *mut u8_0;
                                                                                                                    (*afl).stage_short
                                                                                                                        =
                                                                                                                        b"ext_AO\x00"
                                                                                                                            as
                                                                                                                            *const u8
                                                                                                                            as
                                                                                                                            *const libc::c_char
                                                                                                                            as
                                                                                                                            *mut u8_0;
                                                                                                                    (*afl).stage_cur
                                                                                                                        =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int;
                                                                                                                    (*afl).stage_max
                                                                                                                        =
                                                                                                                        ({
                                                                                                                             let mut _a:
                                                                                                                                     u32_0 =
                                                                                                                                 (*afl).a_extras_cnt;
                                                                                                                             let mut _b:
                                                                                                                                     libc::c_int =
                                                                                                                                 128
                                                                                                                                     as
                                                                                                                                     libc::c_int;
                                                                                                                             (if _a
                                                                                                                                     <
                                                                                                                                     _b
                                                                                                                                         as
                                                                                                                                         libc::c_uint
                                                                                                                                 {
                                                                                                                                  _a
                                                                                                                              } else {
                                                                                                                                  _b
                                                                                                                                      as
                                                                                                                                      libc::c_uint
                                                                                                                              })
                                                                                                                         }).wrapping_mul(len
                                                                                                                                             as
                                                                                                                                             libc::c_uint)
                                                                                                                            as
                                                                                                                            s32;
                                                                                                                    (*afl).stage_val_type
                                                                                                                        =
                                                                                                                        STAGE_VAL_NONE
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            u8_0;
                                                                                                                    orig_hit_cnt
                                                                                                                        =
                                                                                                                        new_hit_cnt;
                                                                                                                    i
                                                                                                                        =
                                                                                                                        0
                                                                                                                            as
                                                                                                                            libc::c_int;
                                                                                                                    's_2578:
                                                                                                                        loop 
                                                                                                                             {
                                                                                                                            if !(i
                                                                                                                                     <
                                                                                                                                     len)
                                                                                                                               {
                                                                                                                                current_block
                                                                                                                                    =
                                                                                                                                    12649378720012910899;
                                                                                                                                break
                                                                                                                                    ;
                                                                                                                            }
                                                                                                                            let mut last_len_0:
                                                                                                                                    u32_0 =
                                                                                                                                0
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    u32_0;
                                                                                                                            (*afl).stage_cur_byte
                                                                                                                                =
                                                                                                                                i;
                                                                                                                            j
                                                                                                                                =
                                                                                                                                0
                                                                                                                                    as
                                                                                                                                    libc::c_int;
                                                                                                                            while (j
                                                                                                                                       as
                                                                                                                                       libc::c_uint)
                                                                                                                                      <
                                                                                                                                      ({
                                                                                                                                           let mut _a:
                                                                                                                                                   u32_0 =
                                                                                                                                               (*afl).a_extras_cnt;
                                                                                                                                           let mut _b:
                                                                                                                                                   libc::c_int =
                                                                                                                                               128
                                                                                                                                                   as
                                                                                                                                                   libc::c_int;
                                                                                                                                           (if _a
                                                                                                                                                   <
                                                                                                                                                   _b
                                                                                                                                                       as
                                                                                                                                                       libc::c_uint
                                                                                                                                               {
                                                                                                                                                _a
                                                                                                                                            } else {
                                                                                                                                                _b
                                                                                                                                                    as
                                                                                                                                                    libc::c_uint
                                                                                                                                            })
                                                                                                                                       })
                                                                                                                                  {
                                                                                                                                /* See the comment in the earlier code; extras are sorted by size. */
                                                                                                                                if (*(*afl).a_extras.offset(j
                                                                                                                                                                as
                                                                                                                                                                isize)).len
                                                                                                                                       >
                                                                                                                                       (len
                                                                                                                                            -
                                                                                                                                            i)
                                                                                                                                           as
                                                                                                                                           libc::c_uint
                                                                                                                                       ||
                                                                                                                                       memcmp((*(*afl).a_extras.offset(j
                                                                                                                                                                           as
                                                                                                                                                                           isize)).data
                                                                                                                                                  as
                                                                                                                                                  *const libc::c_void,
                                                                                                                                              out_buf.offset(i
                                                                                                                                                                 as
                                                                                                                                                                 isize)
                                                                                                                                                  as
                                                                                                                                                  *const libc::c_void,
                                                                                                                                              (*(*afl).a_extras.offset(j
                                                                                                                                                                           as
                                                                                                                                                                           isize)).len
                                                                                                                                                  as
                                                                                                                                                  libc::c_ulong)
                                                                                                                                           ==
                                                                                                                                           0
                                                                                                                                       ||
                                                                                                                                       memchr(eff_map.offset((i
                                                                                                                                                                  >>
                                                                                                                                                                  3
                                                                                                                                                                      as
                                                                                                                                                                      libc::c_int)
                                                                                                                                                                 as
                                                                                                                                                                 isize)
                                                                                                                                                  as
                                                                                                                                                  *const libc::c_void,
                                                                                                                                              1
                                                                                                                                                  as
                                                                                                                                                  libc::c_int,
                                                                                                                                              ((i
                                                                                                                                                    as
                                                                                                                                                    libc::c_uint).wrapping_add((*(*afl).a_extras.offset(j
                                                                                                                                                                                                            as
                                                                                                                                                                                                            isize)).len).wrapping_sub(1
                                                                                                                                                                                                                                          as
                                                                                                                                                                                                                                          libc::c_int
                                                                                                                                                                                                                                          as
                                                                                                                                                                                                                                          libc::c_uint)
                                                                                                                                                   >>
                                                                                                                                                   3
                                                                                                                                                       as
                                                                                                                                                       libc::c_int).wrapping_sub((i
                                                                                                                                                                                      >>
                                                                                                                                                                                      3
                                                                                                                                                                                          as
                                                                                                                                                                                          libc::c_int)
                                                                                                                                                                                     as
                                                                                                                                                                                     libc::c_uint).wrapping_add(1
                                                                                                                                                                                                                    as
                                                                                                                                                                                                                    libc::c_int
                                                                                                                                                                                                                    as
                                                                                                                                                                                                                    libc::c_uint)
                                                                                                                                                  as
                                                                                                                                                  libc::c_ulong).is_null()
                                                                                                                                   {
                                                                                                                                    (*afl).stage_max
                                                                                                                                        -=
                                                                                                                                        1
                                                                                                                                } else {
                                                                                                                                    last_len_0
                                                                                                                                        =
                                                                                                                                        (*(*afl).a_extras.offset(j
                                                                                                                                                                     as
                                                                                                                                                                     isize)).len;
                                                                                                                                    memcpy(out_buf.offset(i
                                                                                                                                                              as
                                                                                                                                                              isize)
                                                                                                                                               as
                                                                                                                                               *mut libc::c_void,
                                                                                                                                           (*(*afl).a_extras.offset(j
                                                                                                                                                                        as
                                                                                                                                                                        isize)).data
                                                                                                                                               as
                                                                                                                                               *const libc::c_void,
                                                                                                                                           last_len_0
                                                                                                                                               as
                                                                                                                                               libc::c_ulong);
                                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                                         out_buf,
                                                                                                                                                         len
                                                                                                                                                             as
                                                                                                                                                             u32_0)
                                                                                                                                           !=
                                                                                                                                           0
                                                                                                                                       {
                                                                                                                                        current_block
                                                                                                                                            =
                                                                                                                                            12777433616733951266;
                                                                                                                                        break
                                                                                                                                            's_2578
                                                                                                                                            ;
                                                                                                                                    }
                                                                                                                                    (*afl).stage_cur
                                                                                                                                        +=
                                                                                                                                        1
                                                                                                                                }
                                                                                                                                j
                                                                                                                                    +=
                                                                                                                                    1
                                                                                                                            }
                                                                                                                            /* Restore all the clobbered memory. */
                                                                                                                            memcpy(out_buf.offset(i
                                                                                                                                                      as
                                                                                                                                                      isize)
                                                                                                                                       as
                                                                                                                                       *mut libc::c_void,
                                                                                                                                   in_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                       as
                                                                                                                                       *const libc::c_void,
                                                                                                                                   last_len_0
                                                                                                                                       as
                                                                                                                                       libc::c_ulong);
                                                                                                                            i
                                                                                                                                +=
                                                                                                                                1
                                                                                                                        }
                                                                                                                    match current_block
                                                                                                                        {
                                                                                                                        12777433616733951266
                                                                                                                        =>
                                                                                                                        {
                                                                                                                        }
                                                                                                                        _
                                                                                                                        =>
                                                                                                                        {
                                                                                                                            new_hit_cnt
                                                                                                                                =
                                                                                                                                ((*afl).queued_paths
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                            (*afl).stage_finds[STAGE_EXTRAS_AO
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   usize]
                                                                                                                                =
                                                                                                                                ((*afl).stage_finds[STAGE_EXTRAS_AO
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        as
                                                                                                                                                        usize]
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                                    as
                                                                                                                                    u64_0
                                                                                                                                    as
                                                                                                                                    u64_0;
                                                                                                                            (*afl).stage_cycles[STAGE_EXTRAS_AO
                                                                                                                                                    as
                                                                                                                                                    libc::c_int
                                                                                                                                                    as
                                                                                                                                                    usize]
                                                                                                                                =
                                                                                                                                ((*afl).stage_cycles[STAGE_EXTRAS_AO
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         as
                                                                                                                                                         usize]
                                                                                                                                     as
                                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                                         as
                                                                                                                                                                         libc::c_ulonglong)
                                                                                                                                    as
                                                                                                                                    u64_0
                                                                                                                                    as
                                                                                                                                    u64_0;
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                7848700440043382301;
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                                match current_block
                                                                                                                    {
                                                                                                                    12777433616733951266
                                                                                                                    =>
                                                                                                                    {
                                                                                                                    }
                                                                                                                    _
                                                                                                                    =>
                                                                                                                    {
                                                                                                                        /* If we made this to here without jumping to havoc_stage or abandon_entry,
     we're properly done with deterministic steps and can mark it as such
     in the .state/ directory. */
                                                                                                                        if (*(*afl).queue_cur).passed_det
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           {
                                                                                                                            mark_as_det_done(afl,
                                                                                                                                             (*afl).queue_cur);
                                                                                                                        }
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            2255134846115646098;
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    match current_block {
                                        12777433616733951266 => { }
                                        _ => {
                                            'c_7726:
                                                loop 
                                                     /* ******************
   * CUSTOM MUTATORS *
   *******************/
                                                     {
                                                    if !(*afl).mutator.is_null()
                                                       {
                                                        if !(*(*afl).mutator).afl_custom_fuzz.is_none()
                                                           {
                                                            (*afl).stage_name
                                                                =
                                                                b"custom mutator\x00"
                                                                    as
                                                                    *const u8
                                                                    as
                                                                    *const libc::c_char
                                                                    as
                                                                    *mut u8_0;
                                                            (*afl).stage_short
                                                                =
                                                                b"custom\x00"
                                                                    as
                                                                    *const u8
                                                                    as
                                                                    *const libc::c_char
                                                                    as
                                                                    *mut u8_0;
                                                            (*afl).stage_max =
                                                                (256 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                                            as
                                                                                                                                                            libc::c_int
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint)
                                                                    as s32;
                                                            (*afl).stage_val_type
                                                                =
                                                                STAGE_VAL_NONE
                                                                    as
                                                                    libc::c_int
                                                                    as u8_0;
                                                            if (*afl).stage_max
                                                                   <
                                                                   16 as
                                                                       libc::c_int
                                                               {
                                                                (*afl).stage_max
                                                                    =
                                                                    16 as
                                                                        libc::c_int
                                                            }
                                                            max_seed_size =
                                                                (1 as
                                                                     libc::c_int
                                                                     *
                                                                     1024 as
                                                                         libc::c_int
                                                                     *
                                                                     1024 as
                                                                         libc::c_int)
                                                                    as u32_0;
                                                            orig_hit_cnt =
                                                                ((*afl).queued_paths
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                            (*afl).stage_cur =
                                                                0 as
                                                                    libc::c_int;
                                                            while (*afl).stage_cur
                                                                      <
                                                                      (*afl).stage_max
                                                                  {
                                                                let mut target:
                                                                        *mut queue_entry =
                                                                    0 as
                                                                        *mut queue_entry;
                                                                let mut tid:
                                                                        u32_0 =
                                                                    0;
                                                                let mut new_buf:
                                                                        *mut u8_0 =
                                                                    0 as
                                                                        *mut u8_0;
                                                                loop  {
                                                                    loop 
                                                                         /* Pick a random other queue entry for passing to external API */
                                                                         {
                                                                        tid =
                                                                            rand_below(afl,
                                                                                       (*afl).queued_paths);
                                                                        if !(tid
                                                                                 ==
                                                                                 (*afl).current_entry
                                                                                 &&
                                                                                 (*afl).queued_paths
                                                                                     >
                                                                                     1
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         libc::c_uint)
                                                                           {
                                                                            break
                                                                                ;
                                                                        }
                                                                    }
                                                                    target =
                                                                        (*afl).queue;
                                                                    while tid
                                                                              >=
                                                                              100
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint
                                                                          {
                                                                        target
                                                                            =
                                                                            (*target).next_100;
                                                                        tid =
                                                                            (tid
                                                                                 as
                                                                                 libc::c_uint).wrapping_sub(100
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                libc::c_uint)
                                                                                as
                                                                                u32_0
                                                                                as
                                                                                u32_0
                                                                    }
                                                                    loop  {
                                                                        let fresh25 =
                                                                            tid;
                                                                        tid =
                                                                            tid.wrapping_sub(1);
                                                                        if !(fresh25
                                                                                 !=
                                                                                 0)
                                                                           {
                                                                            break
                                                                                ;
                                                                        }
                                                                        target
                                                                            =
                                                                            (*target).next
                                                                    }
                                                                    /* Make sure that the target has a reasonable length. */
                                                                    while !target.is_null()
                                                                              &&
                                                                              ((*target).len
                                                                                   <
                                                                                   2
                                                                                       as
                                                                                       libc::c_int
                                                                                       as
                                                                                       libc::c_uint
                                                                                   ||
                                                                                   target
                                                                                       ==
                                                                                       (*afl).queue_cur)
                                                                              &&
                                                                              (*afl).queued_paths
                                                                                  >
                                                                                  1
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      libc::c_uint
                                                                          {
                                                                        target
                                                                            =
                                                                            (*target).next;
                                                                        (*afl).splicing_with
                                                                            +=
                                                                            1
                                                                    }
                                                                    if !target.is_null()
                                                                       {
                                                                        break
                                                                            ;
                                                                    }
                                                                }
                                                                /* Read the additional testcase into a new buffer. */
                                                                fd =
                                                                    open((*target).fname
                                                                             as
                                                                             *const libc::c_char,
                                                                         0 as
                                                                             libc::c_int);
                                                                if fd <
                                                                       0 as
                                                                           libc::c_int
                                                                   {
                                                                    fflush(stdout);
                                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to open \'%s\'\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           (*target).fname);
                                                                    printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"func_unknown\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"src/afl-fuzz-one.c\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           1609
                                                                               as
                                                                               libc::c_int);
                                                                    printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           strerror(*__errno_location()));
                                                                    exit(1 as
                                                                             libc::c_int);
                                                                }
                                                                new_buf =
                                                                    ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                                                      as
                                                                                      *mut *mut u8_0
                                                                                      as
                                                                                      *mut *mut libc::c_void,
                                                                                  &mut (*afl).out_scratch_size,
                                                                                  (*target).len
                                                                                      as
                                                                                      size_t)
                                                                        as
                                                                        *mut u8_0;
                                                                let mut _len:
                                                                        u32_0 =
                                                                    (*target).len;
                                                                let mut _res:
                                                                        s32 =
                                                                    read(fd,
                                                                         new_buf
                                                                             as
                                                                             *mut libc::c_void,
                                                                         _len
                                                                             as
                                                                             size_t)
                                                                        as
                                                                        s32;
                                                                if _res as
                                                                       libc::c_uint
                                                                       != _len
                                                                   {
                                                                    if _res <
                                                                           0
                                                                               as
                                                                               libc::c_int
                                                                       {
                                                                        fflush(stdout);
                                                                        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mShort read from %s\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               (*target).fname);
                                                                        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               b"func_unknown\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               b"src/afl-fuzz-one.c\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               1612
                                                                                   as
                                                                                   libc::c_int);
                                                                        printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               strerror(*__errno_location()));
                                                                        exit(1
                                                                                 as
                                                                                 libc::c_int);
                                                                    } else {
                                                                        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mShort read from %s\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               (*target).fname);
                                                                        printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               b"func_unknown\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               b"src/afl-fuzz-one.c\x00"
                                                                                   as
                                                                                   *const u8
                                                                                   as
                                                                                   *const libc::c_char,
                                                                               1612
                                                                                   as
                                                                                   libc::c_int);
                                                                        exit(1
                                                                                 as
                                                                                 libc::c_int);
                                                                    }
                                                                }
                                                                close(fd);
                                                                let mut mutated_buf:
                                                                        *mut u8_0 =
                                                                    0 as
                                                                        *mut u8_0;
                                                                let mut mutated_size:
                                                                        size_t =
                                                                    (*(*afl).mutator).afl_custom_fuzz.expect("non-null function pointer")((*(*afl).mutator).data,
                                                                                                                                          out_buf,
                                                                                                                                          len
                                                                                                                                              as
                                                                                                                                              size_t,
                                                                                                                                          &mut mutated_buf,
                                                                                                                                          new_buf,
                                                                                                                                          (*target).len
                                                                                                                                              as
                                                                                                                                              size_t,
                                                                                                                                          max_seed_size
                                                                                                                                              as
                                                                                                                                              size_t);
                                                                if mutated_buf.is_null()
                                                                   {
                                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mError in custom_fuzz. Size returned: %zd\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           mutated_size);
                                                                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"func_unknown\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"src/afl-fuzz-one.c\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           1622
                                                                               as
                                                                               libc::c_int);
                                                                    exit(1 as
                                                                             libc::c_int);
                                                                }
                                                                if mutated_size
                                                                       >
                                                                       0 as
                                                                           libc::c_int
                                                                           as
                                                                           libc::c_ulong
                                                                   {
                                                                    if common_fuzz_stuff(afl,
                                                                                         mutated_buf,
                                                                                         mutated_size
                                                                                             as
                                                                                             u32_0)
                                                                           !=
                                                                           0 {
                                                                        current_block
                                                                            =
                                                                            12777433616733951266;
                                                                        break
                                                                            'c_7726
                                                                            ;
                                                                    }
                                                                    /* If we're finding new stuff, let's run for a bit longer, limits
         permitting. */
                                                                    if (*afl).queued_paths
                                                                           as
                                                                           libc::c_ulonglong
                                                                           !=
                                                                           havoc_queued
                                                                       {
                                                                        if perf_score
                                                                               <=
                                                                               ((*afl).havoc_max_mult
                                                                                    as
                                                                                    libc::c_int
                                                                                    *
                                                                                    100
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   libc::c_uint
                                                                           {
                                                                            (*afl).stage_max
                                                                                *=
                                                                                2
                                                                                    as
                                                                                    libc::c_int;
                                                                            perf_score
                                                                                =
                                                                                (perf_score
                                                                                     as
                                                                                     libc::c_uint).wrapping_mul(2
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    libc::c_uint)
                                                                                    as
                                                                                    u32_0
                                                                                    as
                                                                                    u32_0
                                                                        }
                                                                        havoc_queued
                                                                            =
                                                                            (*afl).queued_paths
                                                                                as
                                                                                u64_0
                                                                    }
                                                                }
                                                                /* `(afl->)out_buf` may have been changed by the call to custom_fuzz */
    /* TODO: Only do this when `mutated_buf` == `out_buf`? Branch vs Memcpy. */
                                                                memcpy(out_buf
                                                                           as
                                                                           *mut libc::c_void,
                                                                       in_buf
                                                                           as
                                                                           *const libc::c_void,
                                                                       len as
                                                                           libc::c_ulong);
                                                                (*afl).stage_cur
                                                                    += 1
                                                            }
                                                            new_hit_cnt =
                                                                ((*afl).queued_paths
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                            (*afl).stage_finds[STAGE_CUSTOM_MUTATOR
                                                                                   as
                                                                                   libc::c_int
                                                                                   as
                                                                                   usize]
                                                                =
                                                                ((*afl).stage_finds[STAGE_CUSTOM_MUTATOR
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        usize]
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                    as u64_0
                                                                    as u64_0;
                                                            (*afl).stage_cycles[STAGE_CUSTOM_MUTATOR
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                                                =
                                                                ((*afl).stage_cycles[STAGE_CUSTOM_MUTATOR
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         usize]
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                         as
                                                                                                         libc::c_ulonglong)
                                                                    as u64_0
                                                                    as u64_0;
                                                            if (*afl).custom_only
                                                                   != 0 {
                                                                /* Skip other stages */
                                                                ret_val =
                                                                    0 as
                                                                        libc::c_int
                                                                        as
                                                                        u8_0;
                                                                current_block
                                                                    =
                                                                    12777433616733951266;
                                                                break ;
                                                            }
                                                        }
                                                    }
                                                    /* ***************
   * RANDOM HAVOC *
   ****************/
                                                    (*afl).stage_cur_byte =
                                                        -(1 as libc::c_int);
                                                    /* The havoc stage mutation code is also invoked when splicing files; if the
     splice_cycle variable is set, generate different descriptions and such. */
                                                    if splice_cycle == 0 {
                                                        (*afl).stage_name =
                                                            b"havoc\x00" as
                                                                *const u8 as
                                                                *const libc::c_char
                                                                as
                                                                *mut u8_0; // like one of the default mutations in havoc
                                                        (*afl).stage_short =
                                                            b"havoc\x00" as
                                                                *const u8 as
                                                                *const libc::c_char
                                                                as *mut u8_0;
                                                        (*afl).stage_max =
                                                            ((if doing_det as
                                                                     libc::c_int
                                                                     != 0 {
                                                                  1024 as
                                                                      libc::c_int
                                                              } else {
                                                                  256 as
                                                                      libc::c_int
                                                              }) as
                                                                 libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        as
                                                                                                                                                        libc::c_uint)
                                                                as s32
                                                    } else {
                                                        perf_score =
                                                            orig_perf;
                                                        snprintf((*afl).stage_name_buf.as_mut_ptr()
                                                                     as
                                                                     *mut libc::c_char,
                                                                 64 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_ulong,
                                                                 b"splice %u\x00"
                                                                     as
                                                                     *const u8
                                                                     as
                                                                     *const libc::c_char,
                                                                 splice_cycle);
                                                        (*afl).stage_name =
                                                            (*afl).stage_name_buf.as_mut_ptr();
                                                        (*afl).stage_short =
                                                            b"splice\x00" as
                                                                *const u8 as
                                                                *const libc::c_char
                                                                as *mut u8_0;
                                                        (*afl).stage_max =
                                                            (32 as libc::c_int
                                                                 as
                                                                 libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                        as
                                                                                                                                                        libc::c_uint)
                                                                as s32
                                                    }
                                                    if (*afl).stage_max <
                                                           16 as libc::c_int {
                                                        (*afl).stage_max =
                                                            16 as libc::c_int
                                                    }
                                                    temp_len = len;
                                                    orig_hit_cnt =
                                                        ((*afl).queued_paths
                                                             as
                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                    havoc_queued =
                                                        (*afl).queued_paths as
                                                            u64_0;
                                                    stacked_custom =
                                                        (!(*afl).mutator.is_null()
                                                             &&
                                                             (*(*afl).mutator).afl_custom_havoc_mutation.is_some())
                                                            as libc::c_int as
                                                            u8_0;
                                                    stacked_custom_prob =
                                                        6 as libc::c_int as
                                                            u8_0;
                                                    if stacked_custom as
                                                           libc::c_int != 0 &&
                                                           (*(*afl).mutator).afl_custom_havoc_mutation_probability.is_some()
                                                       {
                                                        stacked_custom_prob =
                                                            (*(*afl).mutator).afl_custom_havoc_mutation_probability.expect("non-null function pointer")((*(*afl).mutator).data);
                                                        if stacked_custom_prob
                                                               as libc::c_int
                                                               >
                                                               100 as
                                                                   libc::c_int
                                                           {
                                                            printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mThe probability returned by afl_custom_havoc_mutation_propability has to be in the range 0-100.\x00"
                                                                       as
                                                                       *const u8
                                                                       as
                                                                       *const libc::c_char);
                                                            printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                                       as
                                                                       *const u8
                                                                       as
                                                                       *const libc::c_char,
                                                                   b"func_unknown\x00"
                                                                       as
                                                                       *const u8
                                                                       as
                                                                       *const libc::c_char,
                                                                   b"src/afl-fuzz-one.c\x00"
                                                                       as
                                                                       *const u8
                                                                       as
                                                                       *const libc::c_char,
                                                                   1716 as
                                                                       libc::c_int);
                                                            exit(1 as
                                                                     libc::c_int);
                                                        }
                                                    }
                                                    /* We essentially just do several thousand runs (depending on perf_score)
     where we take the input file and make random stacked tweaks. */
                                                    (*afl).stage_cur =
                                                        0 as libc::c_int;
                                                    while (*afl).stage_cur <
                                                              (*afl).stage_max
                                                          {
                                                        let mut use_stacking:
                                                                u32_0 =
                                                            ((1 as
                                                                  libc::c_int)
                                                                 <<
                                                                 (1 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                            7
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                u32_0)))
                                                                as u32_0;
                                                        (*afl).stage_cur_val =
                                                            use_stacking as
                                                                s32;
                                                        i = 0 as libc::c_int;
                                                        while (i as
                                                                   libc::c_uint)
                                                                  <
                                                                  use_stacking
                                                              {
                                                            if stacked_custom
                                                                   as
                                                                   libc::c_int
                                                                   != 0 &&
                                                                   rand_below(afl,
                                                                              100
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  u32_0)
                                                                       <
                                                                       stacked_custom_prob
                                                                           as
                                                                           libc::c_uint
                                                               {
                                                                let mut custom_havoc_buf:
                                                                        *mut u8_0 =
                                                                    0 as
                                                                        *mut u8_0;
                                                                let mut new_len:
                                                                        size_t =
                                                                    (*(*afl).mutator).afl_custom_havoc_mutation.expect("non-null function pointer")((*(*afl).mutator).data,
                                                                                                                                                    out_buf,
                                                                                                                                                    temp_len
                                                                                                                                                        as
                                                                                                                                                        size_t,
                                                                                                                                                    &mut custom_havoc_buf,
                                                                                                                                                    (1
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         *
                                                                                                                                                         1024
                                                                                                                                                             as
                                                                                                                                                             libc::c_int
                                                                                                                                                         *
                                                                                                                                                         1024
                                                                                                                                                             as
                                                                                                                                                             libc::c_int)
                                                                                                                                                        as
                                                                                                                                                        size_t);
                                                                if custom_havoc_buf.is_null()
                                                                   {
                                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mError in custom_havoc (return %zd)\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           new_len);
                                                                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"func_unknown\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"src/afl-fuzz-one.c\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           1737
                                                                               as
                                                                               libc::c_int);
                                                                    exit(1 as
                                                                             libc::c_int);
                                                                }
                                                                if new_len >
                                                                       0 as
                                                                           libc::c_int
                                                                           as
                                                                           libc::c_ulong
                                                                       &&
                                                                       !custom_havoc_buf.is_null()
                                                                   {
                                                                    temp_len =
                                                                        new_len
                                                                            as
                                                                            s32;
                                                                    if out_buf
                                                                           !=
                                                                           custom_havoc_buf
                                                                       {
                                                                        ck_maybe_grow(&mut (*afl).out_buf
                                                                                          as
                                                                                          *mut *mut u8_0
                                                                                          as
                                                                                          *mut *mut libc::c_void,
                                                                                      &mut (*afl).out_size,
                                                                                      temp_len
                                                                                          as
                                                                                          size_t);
                                                                        memcpy(out_buf
                                                                                   as
                                                                                   *mut libc::c_void,
                                                                               custom_havoc_buf
                                                                                   as
                                                                                   *const libc::c_void,
                                                                               temp_len
                                                                                   as
                                                                                   libc::c_ulong);
                                                                    }
                                                                }
                                                            }
                                                            let mut current_block_621:
                                                                    u64;
                                                            match rand_below(afl,
                                                                             (15
                                                                                  as
                                                                                  libc::c_int
                                                                                  +
                                                                                  (if (*afl).extras_cnt.wrapping_add((*afl).a_extras_cnt)
                                                                                          !=
                                                                                          0
                                                                                      {
                                                                                       2
                                                                                           as
                                                                                           libc::c_int
                                                                                   } else {
                                                                                       0
                                                                                           as
                                                                                           libc::c_int
                                                                                   }))
                                                                                 as
                                                                                 u32_0)
                                                                {
                                                                0 => {
                                                                    /* Flip a single bit somewhere. Spooky! */
                                                                    let mut _arf_13:
                                                                            *mut u8_0 =
                                                                        out_buf;
                                                                    let mut _bf_13:
                                                                            u32_0 =
                                                                        rand_below(afl,
                                                                                   (temp_len
                                                                                        <<
                                                                                        3
                                                                                            as
                                                                                            libc::c_int)
                                                                                       as
                                                                                       u32_0);
                                                                    let ref mut fresh26 =
                                                                        *_arf_13.offset((_bf_13
                                                                                             >>
                                                                                             3
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            isize);
                                                                    *fresh26 =
                                                                        (*fresh26
                                                                             as
                                                                             libc::c_int
                                                                             ^
                                                                             128
                                                                                 as
                                                                                 libc::c_int
                                                                                 >>
                                                                                 (_bf_13
                                                                                      &
                                                                                      7
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          libc::c_uint))
                                                                            as
                                                                            u8_0
                                                                }
                                                                1 => {
                                                                    /* Set byte to interesting value. */
                                                                    *out_buf.offset(rand_below(afl,
                                                                                               temp_len
                                                                                                   as
                                                                                                   u32_0)
                                                                                        as
                                                                                        isize)
                                                                        =
                                                                        interesting_8[rand_below(afl,
                                                                                                 ::std::mem::size_of::<[s8; 9]>()
                                                                                                     as
                                                                                                     libc::c_ulong
                                                                                                     as
                                                                                                     u32_0)
                                                                                          as
                                                                                          usize]
                                                                            as
                                                                            u8_0
                                                                }
                                                                2 => {
                                                                    /* Set word to interesting value, randomly choosing endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             2
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            *(out_buf.offset(rand_below(afl,
                                                                                                        (temp_len
                                                                                                             -
                                                                                                             1
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u32_0)
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0)
                                                                                =
                                                                                interesting_16[rand_below(afl,
                                                                                                          (::std::mem::size_of::<[s16; 19]>()
                                                                                                               as
                                                                                                               libc::c_ulong
                                                                                                               >>
                                                                                                               1
                                                                                                                   as
                                                                                                                   libc::c_int)
                                                                                                              as
                                                                                                              u32_0)
                                                                                                   as
                                                                                                   usize]
                                                                                    as
                                                                                    u16_0
                                                                        } else {
                                                                            *(out_buf.offset(rand_below(afl,
                                                                                                        (temp_len
                                                                                                             -
                                                                                                             1
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u32_0)
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u16_0 =
                                                                                         interesting_16[rand_below(afl,
                                                                                                                   (::std::mem::size_of::<[s16; 19]>()
                                                                                                                        as
                                                                                                                        libc::c_ulong
                                                                                                                        >>
                                                                                                                        1
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       u32_0)
                                                                                                            as
                                                                                                            usize]
                                                                                             as
                                                                                             u16_0;
                                                                                     ((_ret
                                                                                           as
                                                                                           libc::c_int)
                                                                                          <<
                                                                                          8
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              as
                                                                                              libc::c_int
                                                                                              >>
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                         as
                                                                                         u16_0
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                3 => {
                                                                    /* Set dword to interesting value, randomly choosing endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             4
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            *(out_buf.offset(rand_below(afl,
                                                                                                        (temp_len
                                                                                                             -
                                                                                                             3
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u32_0)
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u32_0)
                                                                                =
                                                                                interesting_32[rand_below(afl,
                                                                                                          (::std::mem::size_of::<[s32; 27]>()
                                                                                                               as
                                                                                                               libc::c_ulong
                                                                                                               >>
                                                                                                               2
                                                                                                                   as
                                                                                                                   libc::c_int)
                                                                                                              as
                                                                                                              u32_0)
                                                                                                   as
                                                                                                   usize]
                                                                                    as
                                                                                    u32_0
                                                                        } else {
                                                                            *(out_buf.offset(rand_below(afl,
                                                                                                        (temp_len
                                                                                                             -
                                                                                                             3
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u32_0)
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u32_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u32_0 =
                                                                                         interesting_32[rand_below(afl,
                                                                                                                   (::std::mem::size_of::<[s32; 27]>()
                                                                                                                        as
                                                                                                                        libc::c_ulong
                                                                                                                        >>
                                                                                                                        2
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       u32_0)
                                                                                                            as
                                                                                                            usize]
                                                                                             as
                                                                                             u32_0;
                                                                                     (_ret
                                                                                          <<
                                                                                          24
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              >>
                                                                                              24
                                                                                                  as
                                                                                                  libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              <<
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int
                                                                                              &
                                                                                              0xff0000
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  as
                                                                                                  libc::c_uint)
                                                                                         |
                                                                                         _ret
                                                                                             >>
                                                                                             8
                                                                                                 as
                                                                                                 libc::c_int
                                                                                             &
                                                                                             0xff00
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                4 => {
                                                                    /* Randomly subtract from byte. */
                                                                    let ref mut fresh27 =
                                                                        *out_buf.offset(rand_below(afl,
                                                                                                   temp_len
                                                                                                       as
                                                                                                       u32_0)
                                                                                            as
                                                                                            isize);
                                                                    *fresh27 =
                                                                        (*fresh27
                                                                             as
                                                                             libc::c_uint).wrapping_sub((1
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             as
                                                                                                             libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                   35
                                                                                                                                                       as
                                                                                                                                                       libc::c_int
                                                                                                                                                       as
                                                                                                                                                       u32_0)))
                                                                            as
                                                                            u8_0
                                                                            as
                                                                            u8_0
                                                                }
                                                                5 => {
                                                                    /* Randomly add to byte. */
                                                                    let ref mut fresh28 =
                                                                        *out_buf.offset(rand_below(afl,
                                                                                                   temp_len
                                                                                                       as
                                                                                                       u32_0)
                                                                                            as
                                                                                            isize);
                                                                    *fresh28 =
                                                                        (*fresh28
                                                                             as
                                                                             libc::c_uint).wrapping_add((1
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             as
                                                                                                             libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                   35
                                                                                                                                                       as
                                                                                                                                                       libc::c_int
                                                                                                                                                       as
                                                                                                                                                       u32_0)))
                                                                            as
                                                                            u8_0
                                                                            as
                                                                            u8_0
                                                                }
                                                                6 => {
                                                                    /* Randomly subtract from word, random endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             2
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            let mut pos:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let ref mut fresh29 =
                                                                                *(out_buf.offset(pos
                                                                                                     as
                                                                                                     isize)
                                                                                      as
                                                                                      *mut u16_0);
                                                                            *fresh29
                                                                                =
                                                                                (*fresh29
                                                                                     as
                                                                                     libc::c_uint).wrapping_sub((1
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                           35
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               u32_0)))
                                                                                    as
                                                                                    u16_0
                                                                                    as
                                                                                    u16_0
                                                                        } else {
                                                                            let mut pos_0:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let mut num:
                                                                                    u16_0 =
                                                                                (1
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                           35
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               u32_0))
                                                                                    as
                                                                                    u16_0;
                                                                            *(out_buf.offset(pos_0
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u16_0 =
                                                                                         (({
                                                                                               let mut _ret_0:
                                                                                                       u16_0 =
                                                                                                   *(out_buf.offset(pos_0
                                                                                                                        as
                                                                                                                        isize)
                                                                                                         as
                                                                                                         *mut u16_0);
                                                                                               ((_ret_0
                                                                                                     as
                                                                                                     libc::c_int)
                                                                                                    <<
                                                                                                    8
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                    |
                                                                                                    _ret_0
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        >>
                                                                                                        8
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                   as
                                                                                                   u16_0
                                                                                           })
                                                                                              as
                                                                                              libc::c_int
                                                                                              -
                                                                                              num
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                             as
                                                                                             u16_0;
                                                                                     ((_ret
                                                                                           as
                                                                                           libc::c_int)
                                                                                          <<
                                                                                          8
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              as
                                                                                              libc::c_int
                                                                                              >>
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                         as
                                                                                         u16_0
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                7 => {
                                                                    /* Randomly add to word, random endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             2
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            let mut pos_1:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let ref mut fresh30 =
                                                                                *(out_buf.offset(pos_1
                                                                                                     as
                                                                                                     isize)
                                                                                      as
                                                                                      *mut u16_0);
                                                                            *fresh30
                                                                                =
                                                                                (*fresh30
                                                                                     as
                                                                                     libc::c_uint).wrapping_add((1
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                           35
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               u32_0)))
                                                                                    as
                                                                                    u16_0
                                                                                    as
                                                                                    u16_0
                                                                        } else {
                                                                            let mut pos_2:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let mut num_0:
                                                                                    u16_0 =
                                                                                (1
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                           35
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               u32_0))
                                                                                    as
                                                                                    u16_0;
                                                                            *(out_buf.offset(pos_2
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u16_0 =
                                                                                         (({
                                                                                               let mut _ret_0:
                                                                                                       u16_0 =
                                                                                                   *(out_buf.offset(pos_2
                                                                                                                        as
                                                                                                                        isize)
                                                                                                         as
                                                                                                         *mut u16_0);
                                                                                               ((_ret_0
                                                                                                     as
                                                                                                     libc::c_int)
                                                                                                    <<
                                                                                                    8
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                    |
                                                                                                    _ret_0
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        >>
                                                                                                        8
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                   as
                                                                                                   u16_0
                                                                                           })
                                                                                              as
                                                                                              libc::c_int
                                                                                              +
                                                                                              num_0
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                             as
                                                                                             u16_0;
                                                                                     ((_ret
                                                                                           as
                                                                                           libc::c_int)
                                                                                          <<
                                                                                          8
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              as
                                                                                              libc::c_int
                                                                                              >>
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int)
                                                                                         as
                                                                                         u16_0
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                8 => {
                                                                    /* Randomly subtract from dword, random endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             4
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            let mut pos_3:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let ref mut fresh31 =
                                                                                *(out_buf.offset(pos_3
                                                                                                     as
                                                                                                     isize)
                                                                                      as
                                                                                      *mut u32_0);
                                                                            *fresh31
                                                                                =
                                                                                (*fresh31
                                                                                     as
                                                                                     libc::c_uint).wrapping_sub((1
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                           35
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               u32_0)))
                                                                                    as
                                                                                    u32_0
                                                                                    as
                                                                                    u32_0
                                                                        } else {
                                                                            let mut pos_4:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let mut num_1:
                                                                                    u32_0 =
                                                                                (1
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                           35
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               u32_0));
                                                                            *(out_buf.offset(pos_4
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u32_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u32_0 =
                                                                                         ({
                                                                                              let mut _ret_0:
                                                                                                      u32_0 =
                                                                                                  *(out_buf.offset(pos_4
                                                                                                                       as
                                                                                                                       isize)
                                                                                                        as
                                                                                                        *mut u32_0);
                                                                                              (_ret_0
                                                                                                   <<
                                                                                                   24
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                   |
                                                                                                   _ret_0
                                                                                                       >>
                                                                                                       24
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                   |
                                                                                                   _ret_0
                                                                                                       <<
                                                                                                       8
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                       &
                                                                                                       0xff0000
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           libc::c_uint)
                                                                                                  |
                                                                                                  _ret_0
                                                                                                      >>
                                                                                                      8
                                                                                                          as
                                                                                                          libc::c_int
                                                                                                      &
                                                                                                      0xff00
                                                                                                          as
                                                                                                          libc::c_int
                                                                                                          as
                                                                                                          libc::c_uint
                                                                                          }).wrapping_sub(num_1);
                                                                                     (_ret
                                                                                          <<
                                                                                          24
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              >>
                                                                                              24
                                                                                                  as
                                                                                                  libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              <<
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int
                                                                                              &
                                                                                              0xff0000
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  as
                                                                                                  libc::c_uint)
                                                                                         |
                                                                                         _ret
                                                                                             >>
                                                                                             8
                                                                                                 as
                                                                                                 libc::c_int
                                                                                             &
                                                                                             0xff00
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                9 => {
                                                                    /* Randomly add to dword, random endian. */
                                                                    if !(temp_len
                                                                             <
                                                                             4
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        if rand_below(afl,
                                                                                      2
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            let mut pos_5:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let ref mut fresh32 =
                                                                                *(out_buf.offset(pos_5
                                                                                                     as
                                                                                                     isize)
                                                                                      as
                                                                                      *mut u32_0);
                                                                            *fresh32
                                                                                =
                                                                                (*fresh32
                                                                                     as
                                                                                     libc::c_uint).wrapping_add((1
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     as
                                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                                           35
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               u32_0)))
                                                                                    as
                                                                                    u32_0
                                                                                    as
                                                                                    u32_0
                                                                        } else {
                                                                            let mut pos_6:
                                                                                    u32_0 =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                -
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               u32_0);
                                                                            let mut num_2:
                                                                                    u32_0 =
                                                                                (1
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                           35
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               u32_0));
                                                                            *(out_buf.offset(pos_6
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u32_0)
                                                                                =
                                                                                ({
                                                                                     let mut _ret:
                                                                                             u32_0 =
                                                                                         ({
                                                                                              let mut _ret_0:
                                                                                                      u32_0 =
                                                                                                  *(out_buf.offset(pos_6
                                                                                                                       as
                                                                                                                       isize)
                                                                                                        as
                                                                                                        *mut u32_0);
                                                                                              (_ret_0
                                                                                                   <<
                                                                                                   24
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                   |
                                                                                                   _ret_0
                                                                                                       >>
                                                                                                       24
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                   |
                                                                                                   _ret_0
                                                                                                       <<
                                                                                                       8
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                       &
                                                                                                       0xff0000
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           libc::c_uint)
                                                                                                  |
                                                                                                  _ret_0
                                                                                                      >>
                                                                                                      8
                                                                                                          as
                                                                                                          libc::c_int
                                                                                                      &
                                                                                                      0xff00
                                                                                                          as
                                                                                                          libc::c_int
                                                                                                          as
                                                                                                          libc::c_uint
                                                                                          }).wrapping_add(num_2);
                                                                                     (_ret
                                                                                          <<
                                                                                          24
                                                                                              as
                                                                                              libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              >>
                                                                                              24
                                                                                                  as
                                                                                                  libc::c_int
                                                                                          |
                                                                                          _ret
                                                                                              <<
                                                                                              8
                                                                                                  as
                                                                                                  libc::c_int
                                                                                              &
                                                                                              0xff0000
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  as
                                                                                                  libc::c_uint)
                                                                                         |
                                                                                         _ret
                                                                                             >>
                                                                                             8
                                                                                                 as
                                                                                                 libc::c_int
                                                                                             &
                                                                                             0xff00
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_uint
                                                                                 })
                                                                        }
                                                                    }
                                                                }
                                                                10 => {
                                                                    /* Just set a random byte to a random value. Because,
             why not. We use XOR with 1-255 to eliminate the
             possibility of a no-op. */
                                                                    let ref mut fresh33 =
                                                                        *out_buf.offset(rand_below(afl,
                                                                                                   temp_len
                                                                                                       as
                                                                                                       u32_0)
                                                                                            as
                                                                                            isize);
                                                                    *fresh33 =
                                                                        (*fresh33
                                                                             as
                                                                             libc::c_uint
                                                                             ^
                                                                             (1
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                        255
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            u32_0)))
                                                                            as
                                                                            u8_0
                                                                }
                                                                11 => {
                                                                    /* Delete bytes. We're making this a bit more likely
             than insertion (the next option) in hopes of keeping
             files reasonably small. */
                                                                    let mut del_from:
                                                                            u32_0 =
                                                                        0;
                                                                    let mut del_len:
                                                                            u32_0 =
                                                                        0;
                                                                    if !(temp_len
                                                                             <
                                                                             2
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        /* Don't delete too much. */
                                                                        del_len
                                                                            =
                                                                            choose_block_len(afl,
                                                                                             (temp_len
                                                                                                  -
                                                                                                  1
                                                                                                      as
                                                                                                      libc::c_int)
                                                                                                 as
                                                                                                 u32_0);
                                                                        del_from
                                                                            =
                                                                            rand_below(afl,
                                                                                       (temp_len
                                                                                            as
                                                                                            libc::c_uint).wrapping_sub(del_len).wrapping_add(1
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 libc::c_uint));
                                                                        memmove(out_buf.offset(del_from
                                                                                                   as
                                                                                                   isize)
                                                                                    as
                                                                                    *mut libc::c_void,
                                                                                out_buf.offset(del_from
                                                                                                   as
                                                                                                   isize).offset(del_len
                                                                                                                     as
                                                                                                                     isize)
                                                                                    as
                                                                                    *const libc::c_void,
                                                                                (temp_len
                                                                                     as
                                                                                     libc::c_uint).wrapping_sub(del_from).wrapping_sub(del_len)
                                                                                    as
                                                                                    libc::c_ulong);
                                                                        temp_len
                                                                            =
                                                                            (temp_len
                                                                                 as
                                                                                 libc::c_uint).wrapping_sub(del_len)
                                                                                as
                                                                                s32
                                                                                as
                                                                                s32
                                                                    }
                                                                }
                                                                13 => {
                                                                    if (temp_len
                                                                            +
                                                                            32768
                                                                                as
                                                                                libc::c_int)
                                                                           <
                                                                           1
                                                                               as
                                                                               libc::c_int
                                                                               *
                                                                               1024
                                                                                   as
                                                                                   libc::c_int
                                                                               *
                                                                               1024
                                                                                   as
                                                                                   libc::c_int
                                                                       {
                                                                        /* Clone bytes (75%) or insert a block of constant bytes (25%). */
                                                                        let mut actually_clone:
                                                                                u8_0 =
                                                                            rand_below(afl,
                                                                                       4
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           u32_0)
                                                                                as
                                                                                u8_0;
                                                                        let mut clone_from:
                                                                                u32_0 =
                                                                            0;
                                                                        let mut clone_to:
                                                                                u32_0 =
                                                                            0;
                                                                        let mut clone_len:
                                                                                u32_0 =
                                                                            0;
                                                                        let mut new_buf_0:
                                                                                *mut u8_0 =
                                                                            0
                                                                                as
                                                                                *mut u8_0;
                                                                        if actually_clone
                                                                               !=
                                                                               0
                                                                           {
                                                                            clone_len
                                                                                =
                                                                                choose_block_len(afl,
                                                                                                 temp_len
                                                                                                     as
                                                                                                     u32_0);
                                                                            clone_from
                                                                                =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                as
                                                                                                libc::c_uint).wrapping_sub(clone_len).wrapping_add(1
                                                                                                                                                       as
                                                                                                                                                       libc::c_int
                                                                                                                                                       as
                                                                                                                                                       libc::c_uint))
                                                                        } else {
                                                                            clone_len
                                                                                =
                                                                                choose_block_len(afl,
                                                                                                 32768
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     u32_0);
                                                                            clone_from
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    u32_0
                                                                        }
                                                                        clone_to
                                                                            =
                                                                            rand_below(afl,
                                                                                       temp_len
                                                                                           as
                                                                                           u32_0);
                                                                        new_buf_0
                                                                            =
                                                                            ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                                                              as
                                                                                              *mut *mut u8_0
                                                                                              as
                                                                                              *mut *mut libc::c_void,
                                                                                          &mut (*afl).out_scratch_size,
                                                                                          (temp_len
                                                                                               as
                                                                                               libc::c_uint).wrapping_add(clone_len)
                                                                                              as
                                                                                              size_t)
                                                                                as
                                                                                *mut u8_0;
                                                                        /* Head */
                                                                        memcpy(new_buf_0
                                                                                   as
                                                                                   *mut libc::c_void,
                                                                               out_buf
                                                                                   as
                                                                                   *const libc::c_void,
                                                                               clone_to
                                                                                   as
                                                                                   libc::c_ulong);
                                                                        /* Inserted part */
                                                                        if actually_clone
                                                                               !=
                                                                               0
                                                                           {
                                                                            memcpy(new_buf_0.offset(clone_to
                                                                                                        as
                                                                                                        isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   out_buf.offset(clone_from
                                                                                                      as
                                                                                                      isize)
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   clone_len
                                                                                       as
                                                                                       libc::c_ulong);
                                                                        } else {
                                                                            memset(new_buf_0.offset(clone_to
                                                                                                        as
                                                                                                        isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   if rand_below(afl,
                                                                                                 2
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     u32_0)
                                                                                          !=
                                                                                          0
                                                                                      {
                                                                                       rand_below(afl,
                                                                                                  256
                                                                                                      as
                                                                                                      libc::c_int
                                                                                                      as
                                                                                                      u32_0)
                                                                                   } else {
                                                                                       *out_buf.offset(rand_below(afl,
                                                                                                                  temp_len
                                                                                                                      as
                                                                                                                      u32_0)
                                                                                                           as
                                                                                                           isize)
                                                                                           as
                                                                                           libc::c_uint
                                                                                   }
                                                                                       as
                                                                                       libc::c_int,
                                                                                   clone_len
                                                                                       as
                                                                                       libc::c_ulong);
                                                                        }
                                                                        /* Tail */
                                                                        memcpy(new_buf_0.offset(clone_to
                                                                                                    as
                                                                                                    isize).offset(clone_len
                                                                                                                      as
                                                                                                                      isize)
                                                                                   as
                                                                                   *mut libc::c_void,
                                                                               out_buf.offset(clone_to
                                                                                                  as
                                                                                                  isize)
                                                                                   as
                                                                                   *const libc::c_void,
                                                                               (temp_len
                                                                                    as
                                                                                    libc::c_uint).wrapping_sub(clone_to)
                                                                                   as
                                                                                   libc::c_ulong);
                                                                        swap_bufs(&mut (*afl).out_buf
                                                                                      as
                                                                                      *mut *mut u8_0
                                                                                      as
                                                                                      *mut *mut libc::c_void,
                                                                                  &mut (*afl).out_size,
                                                                                  &mut (*afl).out_scratch_buf
                                                                                      as
                                                                                      *mut *mut u8_0
                                                                                      as
                                                                                      *mut *mut libc::c_void,
                                                                                  &mut (*afl).out_scratch_size);
                                                                        out_buf
                                                                            =
                                                                            new_buf_0;
                                                                        new_buf_0
                                                                            =
                                                                            0
                                                                                as
                                                                                *mut u8_0;
                                                                        temp_len
                                                                            =
                                                                            (temp_len
                                                                                 as
                                                                                 libc::c_uint).wrapping_add(clone_len)
                                                                                as
                                                                                s32
                                                                                as
                                                                                s32
                                                                    }
                                                                }
                                                                14 => {
                                                                    /* Overwrite bytes with a randomly selected chunk (75%) or fixed
             bytes (25%). */
                                                                    let mut copy_from:
                                                                            u32_0 =
                                                                        0;
                                                                    let mut copy_to:
                                                                            u32_0 =
                                                                        0;
                                                                    let mut copy_len:
                                                                            u32_0 =
                                                                        0;
                                                                    if !(temp_len
                                                                             <
                                                                             2
                                                                                 as
                                                                                 libc::c_int)
                                                                       {
                                                                        copy_len
                                                                            =
                                                                            choose_block_len(afl,
                                                                                             (temp_len
                                                                                                  -
                                                                                                  1
                                                                                                      as
                                                                                                      libc::c_int)
                                                                                                 as
                                                                                                 u32_0);
                                                                        copy_from
                                                                            =
                                                                            rand_below(afl,
                                                                                       (temp_len
                                                                                            as
                                                                                            libc::c_uint).wrapping_sub(copy_len).wrapping_add(1
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint));
                                                                        copy_to
                                                                            =
                                                                            rand_below(afl,
                                                                                       (temp_len
                                                                                            as
                                                                                            libc::c_uint).wrapping_sub(copy_len).wrapping_add(1
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint));
                                                                        if rand_below(afl,
                                                                                      4
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            if copy_from
                                                                                   !=
                                                                                   copy_to
                                                                               {
                                                                                memmove(out_buf.offset(copy_to
                                                                                                           as
                                                                                                           isize)
                                                                                            as
                                                                                            *mut libc::c_void,
                                                                                        out_buf.offset(copy_from
                                                                                                           as
                                                                                                           isize)
                                                                                            as
                                                                                            *const libc::c_void,
                                                                                        copy_len
                                                                                            as
                                                                                            libc::c_ulong);
                                                                            }
                                                                        } else {
                                                                            memset(out_buf.offset(copy_to
                                                                                                      as
                                                                                                      isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   if rand_below(afl,
                                                                                                 2
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     u32_0)
                                                                                          !=
                                                                                          0
                                                                                      {
                                                                                       rand_below(afl,
                                                                                                  256
                                                                                                      as
                                                                                                      libc::c_int
                                                                                                      as
                                                                                                      u32_0)
                                                                                   } else {
                                                                                       *out_buf.offset(rand_below(afl,
                                                                                                                  temp_len
                                                                                                                      as
                                                                                                                      u32_0)
                                                                                                           as
                                                                                                           isize)
                                                                                           as
                                                                                           libc::c_uint
                                                                                   }
                                                                                       as
                                                                                       libc::c_int,
                                                                                   copy_len
                                                                                       as
                                                                                       libc::c_ulong);
                                                                        }
                                                                    }
                                                                }
                                                                15 => {
                                                                    /* Overwrite bytes with an extra. */
                                                                    if (*afl).extras_cnt
                                                                           ==
                                                                           0
                                                                           ||
                                                                           (*afl).a_extras_cnt
                                                                               !=
                                                                               0
                                                                               &&
                                                                               rand_below(afl,
                                                                                          2
                                                                                              as
                                                                                              libc::c_int
                                                                                              as
                                                                                              u32_0)
                                                                                   !=
                                                                                   0
                                                                       {
                                                                        /* No user-specified extras or odds in our favor. Let's use an
               auto-detected one. */
                                                                        let mut use_extra:
                                                                                u32_0 =
                                                                            rand_below(afl,
                                                                                       (*afl).a_extras_cnt);
                                                                        let mut extra_len:
                                                                                u32_0 =
                                                                            (*(*afl).a_extras.offset(use_extra
                                                                                                         as
                                                                                                         isize)).len;
                                                                        let mut insert_at:
                                                                                u32_0 =
                                                                            0;
                                                                        if !(extra_len
                                                                                 >
                                                                                 temp_len
                                                                                     as
                                                                                     libc::c_uint)
                                                                           {
                                                                            insert_at
                                                                                =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                as
                                                                                                libc::c_uint).wrapping_sub(extra_len).wrapping_add(1
                                                                                                                                                       as
                                                                                                                                                       libc::c_int
                                                                                                                                                       as
                                                                                                                                                       libc::c_uint));
                                                                            memcpy(out_buf.offset(insert_at
                                                                                                      as
                                                                                                      isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   (*(*afl).a_extras.offset(use_extra
                                                                                                                as
                                                                                                                isize)).data
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   extra_len
                                                                                       as
                                                                                       libc::c_ulong);
                                                                        }
                                                                    } else {
                                                                        /* No auto extras or odds in our favor. Use the dictionary. */
                                                                        let mut use_extra_0:
                                                                                u32_0 =
                                                                            rand_below(afl,
                                                                                       (*afl).extras_cnt);
                                                                        let mut extra_len_0:
                                                                                u32_0 =
                                                                            (*(*afl).extras.offset(use_extra_0
                                                                                                       as
                                                                                                       isize)).len;
                                                                        let mut insert_at_0:
                                                                                u32_0 =
                                                                            0;
                                                                        if !(extra_len_0
                                                                                 >
                                                                                 temp_len
                                                                                     as
                                                                                     libc::c_uint)
                                                                           {
                                                                            insert_at_0
                                                                                =
                                                                                rand_below(afl,
                                                                                           (temp_len
                                                                                                as
                                                                                                libc::c_uint).wrapping_sub(extra_len_0).wrapping_add(1
                                                                                                                                                         as
                                                                                                                                                         libc::c_int
                                                                                                                                                         as
                                                                                                                                                         libc::c_uint));
                                                                            memcpy(out_buf.offset(insert_at_0
                                                                                                      as
                                                                                                      isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   (*(*afl).extras.offset(use_extra_0
                                                                                                              as
                                                                                                              isize)).data
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   extra_len_0
                                                                                       as
                                                                                       libc::c_ulong);
                                                                        }
                                                                    }
                                                                }
                                                                16 => {
                                                                    let mut use_extra_1:
                                                                            u32_0 =
                                                                        0;
                                                                    let mut extra_len_1:
                                                                            u32_0 =
                                                                        0;
                                                                    let mut insert_at_1:
                                                                            u32_0 =
                                                                        rand_below(afl,
                                                                                   (temp_len
                                                                                        +
                                                                                        1
                                                                                            as
                                                                                            libc::c_int)
                                                                                       as
                                                                                       u32_0);
                                                                    let mut new_buf_1:
                                                                            *mut u8_0 =
                                                                        0 as
                                                                            *mut u8_0;
                                                                    /* Insert an extra. Do the same dice-rolling stuff as for the
             previous case. */
                                                                    if (*afl).extras_cnt
                                                                           ==
                                                                           0
                                                                           ||
                                                                           (*afl).a_extras_cnt
                                                                               !=
                                                                               0
                                                                               &&
                                                                               rand_below(afl,
                                                                                          2
                                                                                              as
                                                                                              libc::c_int
                                                                                              as
                                                                                              u32_0)
                                                                                   !=
                                                                                   0
                                                                       {
                                                                        use_extra_1
                                                                            =
                                                                            rand_below(afl,
                                                                                       (*afl).a_extras_cnt);
                                                                        extra_len_1
                                                                            =
                                                                            (*(*afl).a_extras.offset(use_extra_1
                                                                                                         as
                                                                                                         isize)).len;
                                                                        if (temp_len
                                                                                as
                                                                                libc::c_uint).wrapping_add(extra_len_1)
                                                                               >=
                                                                               (1
                                                                                    as
                                                                                    libc::c_int
                                                                                    *
                                                                                    1024
                                                                                        as
                                                                                        libc::c_int
                                                                                    *
                                                                                    1024
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   libc::c_uint
                                                                           {
                                                                            current_block_621
                                                                                =
                                                                                2583171760885717337;
                                                                        } else {
                                                                            new_buf_1
                                                                                =
                                                                                ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                                                                  as
                                                                                                  *mut *mut u8_0
                                                                                                  as
                                                                                                  *mut *mut libc::c_void,
                                                                                              &mut (*afl).out_scratch_size,
                                                                                              (temp_len
                                                                                                   as
                                                                                                   libc::c_uint).wrapping_add(extra_len_1)
                                                                                                  as
                                                                                                  size_t)
                                                                                    as
                                                                                    *mut u8_0;
                                                                            /* Head */
                                                                            memcpy(new_buf_1
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   out_buf
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   insert_at_1
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            /* Inserted part */
                                                                            memcpy(new_buf_1.offset(insert_at_1
                                                                                                        as
                                                                                                        isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   (*(*afl).a_extras.offset(use_extra_1
                                                                                                                as
                                                                                                                isize)).data
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   extra_len_1
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            current_block_621
                                                                                =
                                                                                11152088948399229927;
                                                                        }
                                                                    } else {
                                                                        use_extra_1
                                                                            =
                                                                            rand_below(afl,
                                                                                       (*afl).extras_cnt);
                                                                        extra_len_1
                                                                            =
                                                                            (*(*afl).extras.offset(use_extra_1
                                                                                                       as
                                                                                                       isize)).len;
                                                                        if (temp_len
                                                                                as
                                                                                libc::c_uint).wrapping_add(extra_len_1)
                                                                               >=
                                                                               (1
                                                                                    as
                                                                                    libc::c_int
                                                                                    *
                                                                                    1024
                                                                                        as
                                                                                        libc::c_int
                                                                                    *
                                                                                    1024
                                                                                        as
                                                                                        libc::c_int)
                                                                                   as
                                                                                   libc::c_uint
                                                                           {
                                                                            current_block_621
                                                                                =
                                                                                2583171760885717337;
                                                                        } else {
                                                                            new_buf_1
                                                                                =
                                                                                ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                                                                  as
                                                                                                  *mut *mut u8_0
                                                                                                  as
                                                                                                  *mut *mut libc::c_void,
                                                                                              &mut (*afl).out_scratch_size,
                                                                                              (temp_len
                                                                                                   as
                                                                                                   libc::c_uint).wrapping_add(extra_len_1)
                                                                                                  as
                                                                                                  size_t)
                                                                                    as
                                                                                    *mut u8_0;
                                                                            /* Head */
                                                                            memcpy(new_buf_1
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   out_buf
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   insert_at_1
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            /* Inserted part */
                                                                            memcpy(new_buf_1.offset(insert_at_1
                                                                                                        as
                                                                                                        isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   (*(*afl).extras.offset(use_extra_1
                                                                                                              as
                                                                                                              isize)).data
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   extra_len_1
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            current_block_621
                                                                                =
                                                                                11152088948399229927;
                                                                        }
                                                                    }
                                                                    match current_block_621
                                                                        {
                                                                        2583171760885717337
                                                                        => {
                                                                        }
                                                                        _ => {
                                                                            /* Tail */
                                                                            memcpy(new_buf_1.offset(insert_at_1
                                                                                                        as
                                                                                                        isize).offset(extra_len_1
                                                                                                                          as
                                                                                                                          isize)
                                                                                       as
                                                                                       *mut libc::c_void,
                                                                                   out_buf.offset(insert_at_1
                                                                                                      as
                                                                                                      isize)
                                                                                       as
                                                                                       *const libc::c_void,
                                                                                   (temp_len
                                                                                        as
                                                                                        libc::c_uint).wrapping_sub(insert_at_1)
                                                                                       as
                                                                                       libc::c_ulong);
                                                                            swap_bufs(&mut (*afl).out_buf
                                                                                          as
                                                                                          *mut *mut u8_0
                                                                                          as
                                                                                          *mut *mut libc::c_void,
                                                                                      &mut (*afl).out_size,
                                                                                      &mut (*afl).out_scratch_buf
                                                                                          as
                                                                                          *mut *mut u8_0
                                                                                          as
                                                                                          *mut *mut libc::c_void,
                                                                                      &mut (*afl).out_scratch_size);
                                                                            out_buf
                                                                                =
                                                                                new_buf_1;
                                                                            new_buf_1
                                                                                =
                                                                                0
                                                                                    as
                                                                                    *mut u8_0;
                                                                            temp_len
                                                                                =
                                                                                (temp_len
                                                                                     as
                                                                                     libc::c_uint).wrapping_add(extra_len_1)
                                                                                    as
                                                                                    s32
                                                                                    as
                                                                                    s32
                                                                        }
                                                                    }
                                                                }
                                                                _ => { }
                                                            }
                                                            i += 1
                                                        }
                                                        if common_fuzz_stuff(afl,
                                                                             out_buf,
                                                                             temp_len
                                                                                 as
                                                                                 u32_0)
                                                               != 0 {
                                                            current_block =
                                                                12777433616733951266;
                                                            break 'c_7726 ;
                                                        }
                                                        /* out_buf might have been mangled a bit, so let's restore it to its
       original size and shape. */
                                                        out_buf =
                                                            ck_maybe_grow(&mut (*afl).out_buf
                                                                              as
                                                                              *mut *mut u8_0
                                                                              as
                                                                              *mut *mut libc::c_void,
                                                                          &mut (*afl).out_size,
                                                                          len
                                                                              as
                                                                              size_t)
                                                                as *mut u8_0;
                                                        temp_len = len;
                                                        memcpy(out_buf as
                                                                   *mut libc::c_void,
                                                               in_buf as
                                                                   *const libc::c_void,
                                                               len as
                                                                   libc::c_ulong);
                                                        /* If we're finding new stuff, let's run for a bit longer, limits
       permitting. */
                                                        if (*afl).queued_paths
                                                               as
                                                               libc::c_ulonglong
                                                               != havoc_queued
                                                           {
                                                            if perf_score <=
                                                                   ((*afl).havoc_max_mult
                                                                        as
                                                                        libc::c_int
                                                                        *
                                                                        100 as
                                                                            libc::c_int)
                                                                       as
                                                                       libc::c_uint
                                                               {
                                                                (*afl).stage_max
                                                                    *=
                                                                    2 as
                                                                        libc::c_int;
                                                                perf_score =
                                                                    (perf_score
                                                                         as
                                                                         libc::c_uint).wrapping_mul(2
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        as
                                                                                                        libc::c_uint)
                                                                        as
                                                                        u32_0
                                                                        as
                                                                        u32_0
                                                            }
                                                            havoc_queued =
                                                                (*afl).queued_paths
                                                                    as u64_0
                                                        }
                                                        (*afl).stage_cur += 1
                                                    }
                                                    new_hit_cnt =
                                                        ((*afl).queued_paths
                                                             as
                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                    if splice_cycle == 0 {
                                                        (*afl).stage_finds[STAGE_HAVOC
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize]
                                                            =
                                                            ((*afl).stage_finds[STAGE_HAVOC
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                as u64_0 as
                                                                u64_0;
                                                        (*afl).stage_cycles[STAGE_HAVOC
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                                                            =
                                                            ((*afl).stage_cycles[STAGE_HAVOC
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    } else {
                                                        (*afl).stage_finds[STAGE_SPLICE
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               usize]
                                                            =
                                                            ((*afl).stage_finds[STAGE_SPLICE
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                as u64_0 as
                                                                u64_0;
                                                        (*afl).stage_cycles[STAGE_SPLICE
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                                                            =
                                                            ((*afl).stage_cycles[STAGE_SPLICE
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     usize]
                                                                 as
                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                    loop 
                                                         /* ***********
   * SPLICING *
   ************/
                                                         /* This is a last-resort strategy triggered by a full round with no findings.
     It takes the current input file, randomly selects another input, and
     splices them together at some offset, then relies on the havoc
     code to mutate that blob. */
                                                         {
                                                        if (*afl).use_splicing
                                                               as libc::c_int
                                                               != 0 &&
                                                               {
                                                                   let fresh34 =
                                                                       splice_cycle;
                                                                   splice_cycle
                                                                       =
                                                                       splice_cycle.wrapping_add(1);
                                                                   (fresh34) <
                                                                       15 as
                                                                           libc::c_int
                                                                           as
                                                                           libc::c_uint
                                                               } &&
                                                               (*afl).queued_paths
                                                                   >
                                                                   1 as
                                                                       libc::c_int
                                                                       as
                                                                       libc::c_uint
                                                               &&
                                                               (*(*afl).queue_cur).len
                                                                   >
                                                                   1 as
                                                                       libc::c_int
                                                                       as
                                                                       libc::c_uint
                                                           {
                                                            let mut target_0:
                                                                    *mut queue_entry =
                                                                0 as
                                                                    *mut queue_entry;
                                                            let mut tid_0:
                                                                    u32_0 = 0;
                                                            let mut split_at:
                                                                    u32_0 = 0;
                                                            let mut new_buf_2:
                                                                    *mut u8_0 =
                                                                0 as
                                                                    *mut u8_0;
                                                            let mut f_diff:
                                                                    s32 = 0;
                                                            let mut l_diff:
                                                                    s32 = 0;
                                                            /* ???: While integrating Python module, the author decided to jump to
       python stage, but the reason behind this is not clear.*/
    // goto havoc_stage;
                                                            /* First of all, if we've modified in_buf for havoc, let's clean that
       up... */
                                                            if in_buf !=
                                                                   orig_in {
                                                                in_buf =
                                                                    orig_in;
                                                                len =
                                                                    (*(*afl).queue_cur).len
                                                                        as s32
                                                            }
                                                            loop 
                                                                 /* Pick a random queue entry and seek to it. Don't splice with yourself. */
                                                                 {
                                                                tid_0 =
                                                                    rand_below(afl,
                                                                               (*afl).queued_paths);
                                                                if !(tid_0 ==
                                                                         (*afl).current_entry)
                                                                   {
                                                                    break ;
                                                                }
                                                            }
                                                            (*afl).splicing_with
                                                                =
                                                                tid_0 as s32;
                                                            target_0 =
                                                                (*afl).queue;
                                                            while tid_0 >=
                                                                      100 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint
                                                                  {
                                                                target_0 =
                                                                    (*target_0).next_100;
                                                                tid_0 =
                                                                    (tid_0 as
                                                                         libc::c_uint).wrapping_sub(100
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        as
                                                                                                        libc::c_uint)
                                                                        as
                                                                        u32_0
                                                                        as
                                                                        u32_0
                                                            }
                                                            loop  {
                                                                let fresh35 =
                                                                    tid_0;
                                                                tid_0 =
                                                                    tid_0.wrapping_sub(1);
                                                                if !(fresh35
                                                                         != 0)
                                                                   {
                                                                    break ;
                                                                }
                                                                target_0 =
                                                                    (*target_0).next
                                                            }
                                                            /* Make sure that the target has a reasonable length. */
                                                            while !target_0.is_null()
                                                                      &&
                                                                      ((*target_0).len
                                                                           <
                                                                           2
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               libc::c_uint
                                                                           ||
                                                                           target_0
                                                                               ==
                                                                               (*afl).queue_cur)
                                                                  {
                                                                target_0 =
                                                                    (*target_0).next;
                                                                (*afl).splicing_with
                                                                    += 1
                                                            }
                                                            if target_0.is_null()
                                                               {
                                                                continue ;
                                                            }
                                                            /* Read the testcase into a new buffer. */
                                                            fd =
                                                                open((*target_0).fname
                                                                         as
                                                                         *const libc::c_char,
                                                                     0 as
                                                                         libc::c_int);
                                                            if fd <
                                                                   0 as
                                                                       libc::c_int
                                                               {
                                                                fflush(stdout);
                                                                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to open \'%s\'\x00"
                                                                           as
                                                                           *const u8
                                                                           as
                                                                           *const libc::c_char,
                                                                       (*target_0).fname);
                                                                printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                                           as
                                                                           *const u8
                                                                           as
                                                                           *const libc::c_char,
                                                                       b"func_unknown\x00"
                                                                           as
                                                                           *const u8
                                                                           as
                                                                           *const libc::c_char,
                                                                       b"src/afl-fuzz-one.c\x00"
                                                                           as
                                                                           *const u8
                                                                           as
                                                                           *const libc::c_char,
                                                                       2247 as
                                                                           libc::c_int);
                                                                printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                                           as
                                                                           *const u8
                                                                           as
                                                                           *const libc::c_char,
                                                                       strerror(*__errno_location()));
                                                                exit(1 as
                                                                         libc::c_int);
                                                            }
                                                            new_buf_2 =
                                                                ck_maybe_grow(&mut (*afl).in_scratch_buf
                                                                                  as
                                                                                  *mut *mut u8_0
                                                                                  as
                                                                                  *mut *mut libc::c_void,
                                                                              &mut (*afl).in_scratch_size,
                                                                              (*target_0).len
                                                                                  as
                                                                                  size_t)
                                                                    as
                                                                    *mut u8_0;
                                                            let mut _len_0:
                                                                    u32_0 =
                                                                (*target_0).len;
                                                            let mut _res_0:
                                                                    s32 =
                                                                read(fd,
                                                                     new_buf_2
                                                                         as
                                                                         *mut libc::c_void,
                                                                     _len_0 as
                                                                         size_t)
                                                                    as s32;
                                                            if _res_0 as
                                                                   libc::c_uint
                                                                   != _len_0 {
                                                                if _res_0 <
                                                                       0 as
                                                                           libc::c_int
                                                                   {
                                                                    fflush(stdout);
                                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mShort read from %s\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           (*target_0).fname);
                                                                    printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"func_unknown\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"src/afl-fuzz-one.c\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           2251
                                                                               as
                                                                               libc::c_int);
                                                                    printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           strerror(*__errno_location()));
                                                                    exit(1 as
                                                                             libc::c_int);
                                                                } else {
                                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mShort read from %s\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           (*target_0).fname);
                                                                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"func_unknown\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           b"src/afl-fuzz-one.c\x00"
                                                                               as
                                                                               *const u8
                                                                               as
                                                                               *const libc::c_char,
                                                                           2251
                                                                               as
                                                                               libc::c_int);
                                                                    exit(1 as
                                                                             libc::c_int);
                                                                }
                                                            }
                                                            close(fd);
                                                            /* Find a suitable splicing location, somewhere between the first and
       the last differing byte. Bail out if the difference is just a single
       byte or so. */
                                                            locate_diffs(in_buf,
                                                                         new_buf_2,
                                                                         ({
                                                                              let mut _a:
                                                                                      s32 =
                                                                                  len;
                                                                              let mut _b:
                                                                                      u32_0 =
                                                                                  (*target_0).len;
                                                                              if (_a
                                                                                      as
                                                                                      libc::c_uint)
                                                                                     <
                                                                                     _b
                                                                                 {
                                                                                  _a
                                                                                      as
                                                                                      libc::c_uint
                                                                              } else {
                                                                                  _b
                                                                              }
                                                                          }),
                                                                         &mut f_diff,
                                                                         &mut l_diff);
                                                            if f_diff <
                                                                   0 as
                                                                       libc::c_int
                                                                   ||
                                                                   l_diff <
                                                                       2 as
                                                                           libc::c_int
                                                                   ||
                                                                   f_diff ==
                                                                       l_diff
                                                               {
                                                                continue ;
                                                            }
                                                            /* Split somewhere between the first and last differing byte. */
                                                            split_at =
                                                                (f_diff as
                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                           (l_diff
                                                                                                                -
                                                                                                                f_diff)
                                                                                                               as
                                                                                                               u32_0));
                                                            /* Do the thing. */
                                                            len =
                                                                (*target_0).len
                                                                    as s32;
                                                            memcpy(new_buf_2
                                                                       as
                                                                       *mut libc::c_void,
                                                                   in_buf as
                                                                       *const libc::c_void,
                                                                   split_at as
                                                                       libc::c_ulong);
                                                            swap_bufs(&mut (*afl).in_buf
                                                                          as
                                                                          *mut *mut u8_0
                                                                          as
                                                                          *mut *mut libc::c_void,
                                                                      &mut (*afl).in_size,
                                                                      &mut (*afl).in_scratch_buf
                                                                          as
                                                                          *mut *mut u8_0
                                                                          as
                                                                          *mut *mut libc::c_void,
                                                                      &mut (*afl).in_scratch_size);
                                                            in_buf =
                                                                new_buf_2;
                                                            out_buf =
                                                                ck_maybe_grow(&mut (*afl).out_buf
                                                                                  as
                                                                                  *mut *mut u8_0
                                                                                  as
                                                                                  *mut *mut libc::c_void,
                                                                              &mut (*afl).out_size,
                                                                              len
                                                                                  as
                                                                                  size_t)
                                                                    as
                                                                    *mut u8_0;
                                                            memcpy(out_buf as
                                                                       *mut libc::c_void,
                                                                   in_buf as
                                                                       *const libc::c_void,
                                                                   len as
                                                                       libc::c_ulong);
                                                            break ;
                                                        } else {
                                                            /* !IGNORE_FINDS */
                                                            ret_val =
                                                                0 as
                                                                    libc::c_int
                                                                    as u8_0;
                                                            current_block =
                                                                4683855478427662309;
                                                            break 'c_7726 ;
                                                        }
                                                    }
                                                }
                                        }
                                    }
                                }
                            }
                        }
                        match current_block {
                            12777433616733951266 => { }
                            _ => {
                                if !((*afl).use_radamsa == 0 ||
                                         (*afl).radamsa_mutate_ptr.is_none())
                                   {
                                    (*afl).stage_name =
                                        b"radamsa\x00" as *const u8 as
                                            *const libc::c_char as *mut u8_0;
                                    (*afl).stage_short =
                                        b"radamsa\x00" as *const u8 as
                                            *const libc::c_char as *mut u8_0;
                                    (*afl).stage_max =
                                        ((256 as libc::c_int as
                                              libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     libc::c_uint)
                                             <<
                                             (*afl).use_radamsa as
                                                 libc::c_int) as s32;
                                    if (*afl).stage_max < 16 as libc::c_int {
                                        (*afl).stage_max = 16 as libc::c_int
                                    }
                                    orig_hit_cnt =
                                        ((*afl).queued_paths as
                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                    /* Read the additional testcase.
  We'll reuse in_scratch, as it is free at this point.
  */
                                    save_buf =
                                        ck_maybe_grow(&mut (*afl).in_scratch_buf
                                                          as *mut *mut u8_0 as
                                                          *mut *mut libc::c_void,
                                                      &mut (*afl).in_scratch_size,
                                                      len as size_t) as
                                            *mut u8_0; // nope but I dont care
                                    memcpy(save_buf as *mut libc::c_void,
                                           out_buf as *const libc::c_void,
                                           len as libc::c_ulong);
                                    max_len =
                                        (len as
                                             libc::c_uint).wrapping_add(choose_block_len(afl,
                                                                                         32768
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             u32_0));
                                    new_buf_3 =
                                        ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                          as *mut *mut u8_0 as
                                                          *mut *mut libc::c_void,
                                                      &mut (*afl).out_scratch_size,
                                                      max_len as size_t) as
                                            *mut u8_0;
                                    tmp_buf = 0 as *mut u8_0;
                                    (*afl).stage_cur = 0 as libc::c_int;
                                    loop  {
                                        if !((*afl).stage_cur <
                                                 (*afl).stage_max) {
                                            current_block =
                                                15611964311717037170;
                                            break ;
                                        }
                                        let mut new_len_0: u32_0 =
                                            (*afl).radamsa_mutate_ptr.expect("non-null function pointer")(save_buf,
                                                                                                          len
                                                                                                              as
                                                                                                              size_t,
                                                                                                          new_buf_3,
                                                                                                          max_len
                                                                                                              as
                                                                                                              size_t,
                                                                                                          get_rand_seed(afl))
                                                as u32_0;
                                        if new_len_0 != 0 {
                                            temp_len = new_len_0 as s32;
                                            tmp_buf = new_buf_3
                                        } else {
                                            tmp_buf = save_buf;
                                            temp_len = len
                                        }
                                        if common_fuzz_stuff(afl, tmp_buf,
                                                             temp_len as
                                                                 u32_0) != 0 {
                                            current_block =
                                                12777433616733951266;
                                            break ;
                                        }
                                        (*afl).stage_cur += 1
                                    }
                                    match current_block {
                                        12777433616733951266 => { }
                                        _ => {
                                            new_hit_cnt =
                                                ((*afl).queued_paths as
                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                            (*afl).stage_finds[STAGE_RADAMSA
                                                                   as
                                                                   libc::c_int
                                                                   as usize] =
                                                ((*afl).stage_finds[STAGE_RADAMSA
                                                                        as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                    as u64_0 as u64_0;
                                            (*afl).stage_cycles[STAGE_RADAMSA
                                                                    as
                                                                    libc::c_int
                                                                    as usize]
                                                =
                                                ((*afl).stage_cycles[STAGE_RADAMSA
                                                                         as
                                                                         libc::c_int
                                                                         as
                                                                         usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                         as
                                                                                         libc::c_ulonglong)
                                                    as u64_0 as u64_0;
                                            ret_val = 0 as libc::c_int as u8_0
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        _ => { }
    }
    /* we are through with this queue entry - for this iteration */
    (*afl).splicing_with = -(1 as libc::c_int);
    /* Update afl->pending_not_fuzzed count if we made it through the calibration
     cycle and have not seen this entry before. */
    if (*afl).stop_soon == 0 && (*(*afl).queue_cur).cal_failed == 0 &&
           ((*(*afl).queue_cur).was_fuzzed as libc::c_int == 0 as libc::c_int
                ||
                (*(*afl).queue_cur).fuzz_level ==
                    0 as libc::c_int as libc::c_uint) {
        (*afl).pending_not_fuzzed = (*afl).pending_not_fuzzed.wrapping_sub(1);
        (*(*afl).queue_cur).was_fuzzed = 1 as libc::c_int as u8_0;
        if (*(*afl).queue_cur).favored != 0 {
            (*afl).pending_favored = (*afl).pending_favored.wrapping_sub(1)
        }
    }
    (*(*afl).queue_cur).fuzz_level =
        (*(*afl).queue_cur).fuzz_level.wrapping_add(1);
    munmap(orig_in as *mut libc::c_void, (*(*afl).queue_cur).len as size_t);
    return ret_val;
}
/* MOpt mode */
#[no_mangle]
pub unsafe extern "C" fn mopt_common_fuzzing(mut afl: *mut afl_state_t,
                                             mut MOpt_globals: MOpt_globals_t)
 -> u8_0 {
    let mut temp_len_puppet: s32 = 0;
    let mut current_block: u64;
    if MOpt_globals.is_pilot_mode == 0 {
        if 5 as libc::c_int == 1 as libc::c_int {
            (*afl).key_module = 2 as libc::c_int;
            return 0 as libc::c_int as u8_0
        }
    }
    let mut len: s32 = 0;
    let mut fd: s32 = 0;
    let mut temp_len: s32 = 0;
    let mut i: s32 = 0;
    let mut j: s32 = 0;
    let mut in_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut out_buf: *mut u8_0 = 0 as *mut u8_0;
    let mut orig_in: *mut u8_0 = 0 as *mut u8_0;
    let mut ex_tmp: *mut u8_0 = 0 as *mut u8_0;
    let mut eff_map: *mut u8_0 = 0 as *mut u8_0;
    let mut havoc_queued: u64_0 = 0;
    let mut orig_hit_cnt: u64_0 = 0;
    let mut new_hit_cnt: u64_0 = 0;
    let mut cur_ms_lv: u64_0 = 0;
    let mut splice_cycle: u32_0 = 0 as libc::c_int as u32_0;
    let mut perf_score: u32_0 = 100 as libc::c_int as u32_0;
    let mut orig_perf: u32_0 = 0;
    let mut prev_cksum: u32_0 = 0;
    let mut eff_cnt: u32_0 = 1 as libc::c_int as u32_0;
    let mut ret_val: u8_0 = 1 as libc::c_int as u8_0;
    let mut doing_det: u8_0 = 0 as libc::c_int as u8_0;
    let mut a_collect: [u8_0; 32] = [0; 32];
    let mut a_len: u32_0 = 0 as libc::c_int as u32_0;
    if (*afl).pending_favored != 0 {
        /* If we have any favored, non-fuzzed new arrivals in the queue,
       possibly skip to them at the expense of already-fuzzed or non-favored
       cases. */
        if ((*(*afl).queue_cur).was_fuzzed as libc::c_int != 0 ||
                (*(*afl).queue_cur).favored == 0) &&
               rand_below(afl, 100 as libc::c_int as u32_0) <
                   99 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
    } else if (*afl).dumb_mode == 0 && (*(*afl).queue_cur).favored == 0 &&
                  (*afl).queued_paths > 10 as libc::c_int as libc::c_uint {
        /* Otherwise, still possibly skip non-favored cases, albeit less often.
       The odds of skipping stuff are higher for already-fuzzed inputs and
       lower for never-fuzzed entries. */
        if (*afl).queue_cycle > 1 as libc::c_int as libc::c_ulonglong &&
               (*(*afl).queue_cur).was_fuzzed == 0 {
            if rand_below(afl, 100 as libc::c_int as u32_0) <
                   75 as libc::c_int as libc::c_uint {
                return 1 as libc::c_int as u8_0
            }
        } else if rand_below(afl, 100 as libc::c_int as u32_0) <
                      95 as libc::c_int as libc::c_uint {
            return 1 as libc::c_int as u8_0
        }
    }
    /* ^IGNORE_FINDS */
    if (*afl).not_on_tty != 0 {
        printf(b"\x1b[1;94m[*] \x1b[0mFuzzing test case #%u (%u total, %llu uniq crashes found)...\x00"
                   as *const u8 as *const libc::c_char, (*afl).current_entry,
               (*afl).queued_paths, (*afl).unique_crashes);
        printf(b"\x1b[0m\n\x00" as *const u8 as *const libc::c_char);
        fflush(stdout);
    }
    /* Map the test case into memory. */
    fd =
        open((*(*afl).queue_cur).fname as *const libc::c_char,
             0 as libc::c_int);
    if fd < 0 as libc::c_int {
        fflush(stdout);
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to open \'%s\'\x00"
                   as *const u8 as *const libc::c_char,
               (*(*afl).queue_cur).fname);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00" as
                   *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"src/afl-fuzz-one.c\x00" as *const u8 as *const libc::c_char,
               2445 as libc::c_int);
        printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as *const u8
                   as *const libc::c_char, strerror(*__errno_location()));
        exit(1 as libc::c_int);
    }
    len = (*(*afl).queue_cur).len as s32;
    in_buf =
        mmap(0 as *mut libc::c_void, len as size_t,
             0x1 as libc::c_int | 0x2 as libc::c_int, 0x2 as libc::c_int, fd,
             0 as libc::c_int as __off64_t) as *mut u8_0;
    orig_in = in_buf;
    if orig_in == -(1 as libc::c_int) as *mut libc::c_void as *mut u8_0 {
        fflush(stdout);
        printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to mmap \'%s\'\x00"
                   as *const u8 as *const libc::c_char,
               (*(*afl).queue_cur).fname);
        printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00" as
                   *const u8 as *const libc::c_char,
               b"func_unknown\x00" as *const u8 as *const libc::c_char,
               b"src/afl-fuzz-one.c\x00" as *const u8 as *const libc::c_char,
               2452 as libc::c_int);
        printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as *const u8
                   as *const libc::c_char, strerror(*__errno_location()));
        exit(1 as libc::c_int);
    }
    close(fd);
    /* We could mmap() out_buf as MAP_PRIVATE, but we end up clobbering every
     single byte anyway, so it wouldn't give us any performance or memory usage
     benefits. */
    out_buf =
        ck_maybe_grow(&mut (*afl).out_buf as *mut *mut u8_0 as
                          *mut *mut libc::c_void, &mut (*afl).out_size,
                      len as size_t) as *mut u8_0;
    (*afl).subseq_tmouts = 0 as libc::c_int as u32_0;
    (*afl).cur_depth = (*(*afl).queue_cur).depth as u32_0;
    /* ******************************************
   * CALIBRATION (only if failed earlier on) *
   *******************************************/
    if (*(*afl).queue_cur).cal_failed != 0 {
        let mut res: u8_0 = FAULT_TMOUT as libc::c_int as u8_0;
        if ((*(*afl).queue_cur).cal_failed as libc::c_int) < 3 as libc::c_int
           {
            res =
                calibrate_case(afl, (*afl).queue_cur, in_buf,
                               (*afl).queue_cycle.wrapping_sub(1 as
                                                                   libc::c_int
                                                                   as
                                                                   libc::c_ulonglong)
                                   as u32_0, 0 as libc::c_int as u8_0);
            if res as libc::c_int == FAULT_ERROR as libc::c_int {
                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mUnable to execute target application\x00"
                           as *const u8 as *const libc::c_char);
                printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                           as *const u8 as *const libc::c_char,
                       b"func_unknown\x00" as *const u8 as
                           *const libc::c_char,
                       b"src/afl-fuzz-one.c\x00" as *const u8 as
                           *const libc::c_char, 2479 as libc::c_int);
                exit(1 as libc::c_int);
            }
        }
        if (*afl).stop_soon as libc::c_int != 0 ||
               res as libc::c_int != (*afl).crash_mode as libc::c_int {
            (*afl).cur_skipped_paths =
                (*afl).cur_skipped_paths.wrapping_add(1);
            current_block = 7888631765806679901;
        } else { current_block = 168769493162332264; }
    } else { current_block = 168769493162332264; }
    match current_block {
        168769493162332264 =>
        /* ***********
   * TRIMMING *
   ************/
        {
            if (*afl).dumb_mode == 0 && (*(*afl).queue_cur).trim_done == 0 {
                let mut res_0: u8_0 =
                    trim_case(afl, (*afl).queue_cur, in_buf);
                if res_0 as libc::c_int == FAULT_ERROR as libc::c_int {
                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mUnable to execute target application\x00"
                               as *const u8 as *const libc::c_char);
                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                               as *const u8 as *const libc::c_char,
                           b"func_unknown\x00" as *const u8 as
                               *const libc::c_char,
                           b"src/afl-fuzz-one.c\x00" as *const u8 as
                               *const libc::c_char, 2500 as libc::c_int);
                    exit(1 as libc::c_int);
                }
                if (*afl).stop_soon != 0 {
                    (*afl).cur_skipped_paths =
                        (*afl).cur_skipped_paths.wrapping_add(1);
                    current_block = 7888631765806679901;
                } else {
                    /* Don't retry trimming, even if it failed. */
                    (*(*afl).queue_cur).trim_done = 1 as libc::c_int as u8_0;
                    len = (*(*afl).queue_cur).len as s32;
                    current_block = 7858101417678297991;
                }
            } else { current_block = 7858101417678297991; }
            match current_block {
                7888631765806679901 => { }
                _ => {
                    memcpy(out_buf as *mut libc::c_void,
                           in_buf as *const libc::c_void,
                           len as libc::c_ulong);
                    /* ********************
   * PERFORMANCE SCORE *
   *********************/
                    perf_score = calculate_score(afl, (*afl).queue_cur);
                    orig_perf = perf_score;
                    /* Skip right away if -d is given, if we have done deterministic fuzzing on
     this entry ourselves (was_fuzzed), or if it has gone through deterministic
     testing in earlier, resumed runs (passed_det). */
                    if (*afl).skip_deterministic as libc::c_int != 0 ||
                           (*(*afl).queue_cur).was_fuzzed as libc::c_int != 0
                           ||
                           (*(*afl).queue_cur).passed_det as libc::c_int != 0
                       {
                        current_block = 17016901831339117692;
                    } else if (*afl).master_max != 0 &&
                                  (*(*afl).queue_cur).exec_cksum.wrapping_rem((*afl).master_max)
                                      !=
                                      (*afl).master_id.wrapping_sub(1 as
                                                                        libc::c_int
                                                                        as
                                                                        libc::c_uint)
                     {
                        current_block = 17016901831339117692;
                    } else {
                        cur_ms_lv = get_cur_time();
                        if !((*afl).key_puppet == 0 as libc::c_int &&
                                 (cur_ms_lv.wrapping_sub((*afl).last_path_time)
                                      <
                                      (*afl).limit_time_puppet as
                                          libc::c_ulonglong ||
                                      (*afl).last_crash_time !=
                                          0 as libc::c_int as
                                              libc::c_ulonglong &&
                                          cur_ms_lv.wrapping_sub((*afl).last_crash_time)
                                              <
                                              (*afl).limit_time_puppet as
                                                  libc::c_ulonglong ||
                                      (*afl).last_path_time ==
                                          0 as libc::c_int as
                                              libc::c_ulonglong)) {
                            (*afl).key_puppet = 1 as libc::c_int;
                            current_block = 17016901831339117692;
                        } else {
                            doing_det = 1 as libc::c_int as u8_0;
                            /* Skip deterministic fuzzing if exec path checksum puts this out of scope
     for this master instance. */
                            /* ********************************************
   * SIMPLE BITFLIP (+dictionary construction) *
   *********************************************/
                            /* Single walking bit. */
                            (*afl).stage_short =
                                b"flip1\x00" as *const u8 as
                                    *const libc::c_char as
                                    *mut u8_0; /* for afl->stage_cur */
                            (*afl).stage_max = len << 3 as libc::c_int;
                            (*afl).stage_name =
                                b"bitflip 1/1\x00" as *const u8 as
                                    *const libc::c_char as *mut u8_0;
                            (*afl).stage_val_type =
                                STAGE_VAL_NONE as libc::c_int as u8_0;
                            orig_hit_cnt =
                                ((*afl).queued_paths as
                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                            prev_cksum = (*(*afl).queue_cur).exec_cksum;
                            (*afl).stage_cur = 0 as libc::c_int;
                            loop  {
                                if !((*afl).stage_cur < (*afl).stage_max) {
                                    current_block = 14612007084265645573;
                                    break ;
                                }
                                (*afl).stage_cur_byte =
                                    (*afl).stage_cur >> 3 as libc::c_int;
                                let mut _arf: *mut u8_0 = out_buf;
                                let mut _bf: u32_0 =
                                    (*afl).stage_cur as u32_0;
                                let ref mut fresh36 =
                                    *_arf.offset((_bf >> 3 as libc::c_int) as
                                                     isize);
                                *fresh36 =
                                    (*fresh36 as libc::c_int ^
                                         128 as libc::c_int >>
                                             (_bf &
                                                  7 as libc::c_int as
                                                      libc::c_uint)) as u8_0;
                                if common_fuzz_stuff(afl, out_buf,
                                                     len as u32_0) != 0 {
                                    current_block = 7888631765806679901;
                                    break ;
                                }
                                let mut _arf_0: *mut u8_0 = out_buf;
                                let mut _bf_0: u32_0 =
                                    (*afl).stage_cur as u32_0;
                                let ref mut fresh37 =
                                    *_arf_0.offset((_bf_0 >> 3 as libc::c_int)
                                                       as isize);
                                *fresh37 =
                                    (*fresh37 as libc::c_int ^
                                         128 as libc::c_int >>
                                             (_bf_0 &
                                                  7 as libc::c_int as
                                                      libc::c_uint)) as u8_0;
                                /* if (afl->stage_cur & 7) == 7 */
                                /* While flipping the least significant bit in every byte, pull of an extra
       trick to detect possible syntax tokens. In essence, the idea is that if
       you have a binary blob like this:

       xxxxxxxxIHDRxxxxxxxx

       ...and changing the leading and trailing bytes causes variable or no
       changes in program flow, but touching any character in the "IHDR" string
       always produces the same, distinctive path, it's highly likely that
       "IHDR" is an atomically-checked magic value of special significance to
       the fuzzed format.

       We do this here, rather than as a separate stage, because it's a nice
       way to keep the operation approximately "free" (i.e., no extra execs).

       Empirically, performing the check when flipping the least significant bit
       is advantageous, compared to doing it at the time of more disruptive
       changes, where the program flow may be affected in more violent ways.

       The caveat is that we won't generate dictionaries in the -d mode or -S
       mode - but that's probably a fair trade-off.

       This won't work particularly well with paths that exhibit variable
       behavior, but fails gracefully, so we'll carry out the checks anyway.

      */
                                if (*afl).dumb_mode == 0 &&
                                       (*afl).stage_cur & 7 as libc::c_int ==
                                           7 as libc::c_int {
                                    let mut cksum: u32_0 =
                                        hash32((*afl).fsrv.trace_bits as
                                                   *const libc::c_void,
                                               (*afl).fsrv.map_size,
                                               0xa5b35705 as libc::c_uint);
                                    if (*afl).stage_cur ==
                                           (*afl).stage_max - 1 as libc::c_int
                                           && cksum == prev_cksum {
                                        /* If at end of file and we are still collecting a string, grab the
           final character and force output. */
                                        if a_len <
                                               32 as libc::c_int as
                                                   libc::c_uint {
                                            a_collect[a_len as usize] =
                                                *out_buf.offset(((*afl).stage_cur
                                                                     >>
                                                                     3 as
                                                                         libc::c_int)
                                                                    as isize)
                                        }
                                        a_len = a_len.wrapping_add(1);
                                        if a_len >=
                                               3 as libc::c_int as
                                                   libc::c_uint &&
                                               a_len <=
                                                   32 as libc::c_int as
                                                       libc::c_uint {
                                            maybe_add_auto(afl as *mut u8_0 as
                                                               *mut libc::c_void,
                                                           a_collect.as_mut_ptr(),
                                                           a_len);
                                        }
                                    } else if cksum != prev_cksum {
                                        /* Otherwise, if the checksum has changed, see if we have something
           worthwhile queued up, and collect that if the answer is yes. */
                                        if a_len >=
                                               3 as libc::c_int as
                                                   libc::c_uint &&
                                               a_len <=
                                                   32 as libc::c_int as
                                                       libc::c_uint {
                                            maybe_add_auto(afl as *mut u8_0 as
                                                               *mut libc::c_void,
                                                           a_collect.as_mut_ptr(),
                                                           a_len);
                                        }
                                        a_len = 0 as libc::c_int as u32_0;
                                        prev_cksum = cksum
                                    }
                                    /* Continue collecting string, but only if the bit flip actually made
         any difference - we don't want no-op tokens. */
                                    if cksum != (*(*afl).queue_cur).exec_cksum
                                       {
                                        if a_len <
                                               32 as libc::c_int as
                                                   libc::c_uint {
                                            a_collect[a_len as usize] =
                                                *out_buf.offset(((*afl).stage_cur
                                                                     >>
                                                                     3 as
                                                                         libc::c_int)
                                                                    as isize)
                                        }
                                        a_len = a_len.wrapping_add(1)
                                    }
                                }
                                (*afl).stage_cur += 1
                            }
                            match current_block {
                                7888631765806679901 => { }
                                _ => {
                                    new_hit_cnt =
                                        ((*afl).queued_paths as
                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                    (*afl).stage_finds[STAGE_FLIP1 as
                                                           libc::c_int as
                                                           usize] =
                                        ((*afl).stage_finds[STAGE_FLIP1 as
                                                                libc::c_int as
                                                                usize] as
                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                            as u64_0 as u64_0;
                                    (*afl).stage_cycles[STAGE_FLIP1 as
                                                            libc::c_int as
                                                            usize] =
                                        ((*afl).stage_cycles[STAGE_FLIP1 as
                                                                 libc::c_int
                                                                 as usize] as
                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                 as
                                                                                 libc::c_ulonglong)
                                            as u64_0 as u64_0;
                                    /* Two walking bits. */
                                    (*afl).stage_name =
                                        b"bitflip 2/1\x00" as *const u8 as
                                            *const libc::c_char as
                                            *mut u8_0; /* for afl->stage_cur */
                                    (*afl).stage_short =
                                        b"flip2\x00" as *const u8 as
                                            *const libc::c_char as *mut u8_0;
                                    (*afl).stage_max =
                                        (len << 3 as libc::c_int) -
                                            1 as libc::c_int;
                                    orig_hit_cnt = new_hit_cnt;
                                    (*afl).stage_cur = 0 as libc::c_int;
                                    loop  {
                                        if !((*afl).stage_cur <
                                                 (*afl).stage_max) {
                                            current_block =
                                                7034501744547627146;
                                            break ;
                                        }
                                        (*afl).stage_cur_byte =
                                            (*afl).stage_cur >>
                                                3 as libc::c_int;
                                        let mut _arf_1: *mut u8_0 = out_buf;
                                        let mut _bf_1: u32_0 =
                                            (*afl).stage_cur as u32_0;
                                        let ref mut fresh38 =
                                            *_arf_1.offset((_bf_1 >>
                                                                3 as
                                                                    libc::c_int)
                                                               as isize);
                                        *fresh38 =
                                            (*fresh38 as libc::c_int ^
                                                 128 as libc::c_int >>
                                                     (_bf_1 &
                                                          7 as libc::c_int as
                                                              libc::c_uint))
                                                as u8_0;
                                        let mut _arf_2: *mut u8_0 = out_buf;
                                        let mut _bf_2: u32_0 =
                                            ((*afl).stage_cur +
                                                 1 as libc::c_int) as u32_0;
                                        let ref mut fresh39 =
                                            *_arf_2.offset((_bf_2 >>
                                                                3 as
                                                                    libc::c_int)
                                                               as isize);
                                        *fresh39 =
                                            (*fresh39 as libc::c_int ^
                                                 128 as libc::c_int >>
                                                     (_bf_2 &
                                                          7 as libc::c_int as
                                                              libc::c_uint))
                                                as u8_0;
                                        if common_fuzz_stuff(afl, out_buf,
                                                             len as u32_0) !=
                                               0 {
                                            current_block =
                                                7888631765806679901;
                                            break ;
                                        }
                                        let mut _arf_3: *mut u8_0 = out_buf;
                                        let mut _bf_3: u32_0 =
                                            (*afl).stage_cur as u32_0;
                                        let ref mut fresh40 =
                                            *_arf_3.offset((_bf_3 >>
                                                                3 as
                                                                    libc::c_int)
                                                               as isize);
                                        *fresh40 =
                                            (*fresh40 as libc::c_int ^
                                                 128 as libc::c_int >>
                                                     (_bf_3 &
                                                          7 as libc::c_int as
                                                              libc::c_uint))
                                                as u8_0;
                                        let mut _arf_4: *mut u8_0 = out_buf;
                                        let mut _bf_4: u32_0 =
                                            ((*afl).stage_cur +
                                                 1 as libc::c_int) as u32_0;
                                        let ref mut fresh41 =
                                            *_arf_4.offset((_bf_4 >>
                                                                3 as
                                                                    libc::c_int)
                                                               as isize);
                                        *fresh41 =
                                            (*fresh41 as libc::c_int ^
                                                 128 as libc::c_int >>
                                                     (_bf_4 &
                                                          7 as libc::c_int as
                                                              libc::c_uint))
                                                as u8_0;
                                        (*afl).stage_cur += 1
                                    }
                                    match current_block {
                                        7888631765806679901 => { }
                                        _ => {
                                            new_hit_cnt =
                                                ((*afl).queued_paths as
                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                            (*afl).stage_finds[STAGE_FLIP2 as
                                                                   libc::c_int
                                                                   as usize] =
                                                ((*afl).stage_finds[STAGE_FLIP2
                                                                        as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                    as u64_0 as u64_0;
                                            (*afl).stage_cycles[STAGE_FLIP2 as
                                                                    libc::c_int
                                                                    as usize]
                                                =
                                                ((*afl).stage_cycles[STAGE_FLIP2
                                                                         as
                                                                         libc::c_int
                                                                         as
                                                                         usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                         as
                                                                                         libc::c_ulonglong)
                                                    as u64_0 as u64_0;
                                            /* Four walking bits. */
                                            (*afl).stage_name =
                                                b"bitflip 4/1\x00" as
                                                    *const u8 as
                                                    *const libc::c_char as
                                                    *mut u8_0; /* for afl->stage_cur */
                                            (*afl).stage_short =
                                                b"flip4\x00" as *const u8 as
                                                    *const libc::c_char as
                                                    *mut u8_0;
                                            (*afl).stage_max =
                                                (len << 3 as libc::c_int) -
                                                    3 as libc::c_int;
                                            orig_hit_cnt = new_hit_cnt;
                                            (*afl).stage_cur =
                                                0 as libc::c_int;
                                            loop  {
                                                if !((*afl).stage_cur <
                                                         (*afl).stage_max) {
                                                    current_block =
                                                        10194589593280242392;
                                                    break ;
                                                }
                                                (*afl).stage_cur_byte =
                                                    (*afl).stage_cur >>
                                                        3 as libc::c_int;
                                                let mut _arf_5: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_5: u32_0 =
                                                    (*afl).stage_cur as u32_0;
                                                let ref mut fresh42 =
                                                    *_arf_5.offset((_bf_5 >>
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       isize);
                                                *fresh42 =
                                                    (*fresh42 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_5 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_6: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_6: u32_0 =
                                                    ((*afl).stage_cur +
                                                         1 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh43 =
                                                    *_arf_6.offset((_bf_6 >>
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       isize);
                                                *fresh43 =
                                                    (*fresh43 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_6 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_7: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_7: u32_0 =
                                                    ((*afl).stage_cur +
                                                         2 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh44 =
                                                    *_arf_7.offset((_bf_7 >>
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       isize);
                                                *fresh44 =
                                                    (*fresh44 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_7 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_8: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_8: u32_0 =
                                                    ((*afl).stage_cur +
                                                         3 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh45 =
                                                    *_arf_8.offset((_bf_8 >>
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       isize);
                                                *fresh45 =
                                                    (*fresh45 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_8 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                if common_fuzz_stuff(afl,
                                                                     out_buf,
                                                                     len as
                                                                         u32_0)
                                                       != 0 {
                                                    current_block =
                                                        7888631765806679901;
                                                    break ;
                                                }
                                                let mut _arf_9: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_9: u32_0 =
                                                    (*afl).stage_cur as u32_0;
                                                let ref mut fresh46 =
                                                    *_arf_9.offset((_bf_9 >>
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       isize);
                                                *fresh46 =
                                                    (*fresh46 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_9 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_10: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_10: u32_0 =
                                                    ((*afl).stage_cur +
                                                         1 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh47 =
                                                    *_arf_10.offset((_bf_10 >>
                                                                         3 as
                                                                             libc::c_int)
                                                                        as
                                                                        isize);
                                                *fresh47 =
                                                    (*fresh47 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_10 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_11: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_11: u32_0 =
                                                    ((*afl).stage_cur +
                                                         2 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh48 =
                                                    *_arf_11.offset((_bf_11 >>
                                                                         3 as
                                                                             libc::c_int)
                                                                        as
                                                                        isize);
                                                *fresh48 =
                                                    (*fresh48 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_11 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                let mut _arf_12: *mut u8_0 =
                                                    out_buf;
                                                let mut _bf_12: u32_0 =
                                                    ((*afl).stage_cur +
                                                         3 as libc::c_int) as
                                                        u32_0;
                                                let ref mut fresh49 =
                                                    *_arf_12.offset((_bf_12 >>
                                                                         3 as
                                                                             libc::c_int)
                                                                        as
                                                                        isize);
                                                *fresh49 =
                                                    (*fresh49 as libc::c_int ^
                                                         128 as libc::c_int >>
                                                             (_bf_12 &
                                                                  7 as
                                                                      libc::c_int
                                                                      as
                                                                      libc::c_uint))
                                                        as u8_0;
                                                (*afl).stage_cur += 1
                                            }
                                            match current_block {
                                                7888631765806679901 => { }
                                                _ => {
                                                    new_hit_cnt =
                                                        ((*afl).queued_paths
                                                             as
                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                    (*afl).stage_finds[STAGE_FLIP4
                                                                           as
                                                                           libc::c_int
                                                                           as
                                                                           usize]
                                                        =
                                                        ((*afl).stage_finds[STAGE_FLIP4
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                usize]
                                                             as
                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                            as u64_0 as u64_0;
                                                    (*afl).stage_cycles[STAGE_FLIP4
                                                                            as
                                                                            libc::c_int
                                                                            as
                                                                            usize]
                                                        =
                                                        ((*afl).stage_cycles[STAGE_FLIP4
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 usize]
                                                             as
                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                 as
                                                                                                 libc::c_ulonglong)
                                                            as u64_0 as u64_0;
                                                    /* Effector map setup. These macros calculate:

     EFF_APOS      - position of a particular file offset in the map.
     EFF_ALEN      - length of a map with a particular number of bytes.
     EFF_SPAN_ALEN - map span for a sequence of bytes.

   */
                                                    /* Initialize effector map for the next step (see comments below). Always
         flag first and last byte as doing something. */
                                                    eff_map =
                                                        ck_maybe_grow(&mut (*afl).eff_buf
                                                                          as
                                                                          *mut *mut u8_0
                                                                          as
                                                                          *mut *mut libc::c_void,
                                                                      &mut (*afl).eff_size,
                                                                      ((len >>
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           +
                                                                           (len
                                                                                &
                                                                                ((1
                                                                                      as
                                                                                      libc::c_int)
                                                                                     <<
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    -
                                                                                    1
                                                                                        as
                                                                                        libc::c_int
                                                                                !=
                                                                                0)
                                                                               as
                                                                               libc::c_int)
                                                                          as
                                                                          size_t)
                                                            as *mut u8_0;
                                                    *eff_map.offset(0 as
                                                                        libc::c_int
                                                                        as
                                                                        isize)
                                                        =
                                                        1 as libc::c_int as
                                                            u8_0;
                                                    if len - 1 as libc::c_int
                                                           >> 3 as libc::c_int
                                                           != 0 as libc::c_int
                                                       {
                                                        *eff_map.offset((len -
                                                                             1
                                                                                 as
                                                                                 libc::c_int
                                                                             >>
                                                                             3
                                                                                 as
                                                                                 libc::c_int)
                                                                            as
                                                                            isize)
                                                            =
                                                            1 as libc::c_int
                                                                as u8_0;
                                                        eff_cnt =
                                                            eff_cnt.wrapping_add(1)
                                                    }
                                                    /* Walking byte. */
                                                    (*afl).stage_name =
                                                        b"bitflip 8/8\x00" as
                                                            *const u8 as
                                                            *const libc::c_char
                                                            as
                                                            *mut u8_0; /* for afl->stage_cur */
                                                    (*afl).stage_short =
                                                        b"flip8\x00" as
                                                            *const u8 as
                                                            *const libc::c_char
                                                            as *mut u8_0;
                                                    (*afl).stage_max = len;
                                                    orig_hit_cnt =
                                                        new_hit_cnt;
                                                    (*afl).stage_cur =
                                                        0 as libc::c_int;
                                                    loop  {
                                                        if !((*afl).stage_cur
                                                                 <
                                                                 (*afl).stage_max)
                                                           {
                                                            current_block =
                                                                10730478470646396074;
                                                            break ;
                                                        }
                                                        (*afl).stage_cur_byte
                                                            =
                                                            (*afl).stage_cur;
                                                        let ref mut fresh50 =
                                                            *out_buf.offset((*afl).stage_cur
                                                                                as
                                                                                isize);
                                                        *fresh50 =
                                                            (*fresh50 as
                                                                 libc::c_int ^
                                                                 0xff as
                                                                     libc::c_int)
                                                                as u8_0;
                                                        if common_fuzz_stuff(afl,
                                                                             out_buf,
                                                                             len
                                                                                 as
                                                                                 u32_0)
                                                               != 0 {
                                                            current_block =
                                                                7888631765806679901;
                                                            break ;
                                                        }
                                                        /* We also use this stage to pull off a simple trick: we identify
       bytes that seem to have no effect on the current execution path
       even when fully flipped - and we skip them during more expensive
       deterministic stages, such as arithmetics or known ints. */
                                                        if *eff_map.offset(((*afl).stage_cur
                                                                                >>
                                                                                3
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               isize)
                                                               == 0 {
                                                            let mut cksum_0:
                                                                    u32_0 = 0;
                                                            /* If in dumb mode or if the file is very short, just flag everything
         without wasting time on checksums. */
                                                            if (*afl).dumb_mode
                                                                   == 0 &&
                                                                   len >=
                                                                       128 as
                                                                           libc::c_int
                                                               {
                                                                cksum_0 =
                                                                    hash32((*afl).fsrv.trace_bits
                                                                               as
                                                                               *const libc::c_void,
                                                                           (*afl).fsrv.map_size,
                                                                           0xa5b35705
                                                                               as
                                                                               libc::c_uint)
                                                            } else {
                                                                cksum_0 =
                                                                    !(*(*afl).queue_cur).exec_cksum
                                                            }
                                                            if cksum_0 !=
                                                                   (*(*afl).queue_cur).exec_cksum
                                                               {
                                                                *eff_map.offset(((*afl).stage_cur
                                                                                     >>
                                                                                     3
                                                                                         as
                                                                                         libc::c_int)
                                                                                    as
                                                                                    isize)
                                                                    =
                                                                    1 as
                                                                        libc::c_int
                                                                        as
                                                                        u8_0;
                                                                eff_cnt =
                                                                    eff_cnt.wrapping_add(1)
                                                            }
                                                        }
                                                        let ref mut fresh51 =
                                                            *out_buf.offset((*afl).stage_cur
                                                                                as
                                                                                isize);
                                                        *fresh51 =
                                                            (*fresh51 as
                                                                 libc::c_int ^
                                                                 0xff as
                                                                     libc::c_int)
                                                                as u8_0;
                                                        (*afl).stage_cur += 1
                                                    }
                                                    match current_block {
                                                        7888631765806679901 =>
                                                        {
                                                        }
                                                        _ => {
                                                            /* If the effector map is more than EFF_MAX_PERC dense, just flag the
     whole thing as worth fuzzing, since we wouldn't be saving much time
     anyway. */
                                                            if eff_cnt !=
                                                                   ((len >>
                                                                         3 as
                                                                             libc::c_int)
                                                                        +
                                                                        (len &
                                                                             ((1
                                                                                   as
                                                                                   libc::c_int)
                                                                                  <<
                                                                                  3
                                                                                      as
                                                                                      libc::c_int)
                                                                                 -
                                                                                 1
                                                                                     as
                                                                                     libc::c_int
                                                                             !=
                                                                             0)
                                                                            as
                                                                            libc::c_int)
                                                                       as
                                                                       libc::c_uint
                                                                   &&
                                                                   eff_cnt.wrapping_mul(100
                                                                                            as
                                                                                            libc::c_int
                                                                                            as
                                                                                            libc::c_uint).wrapping_div(((len
                                                                                                                             >>
                                                                                                                             3
                                                                                                                                 as
                                                                                                                                 libc::c_int)
                                                                                                                            +
                                                                                                                            (len
                                                                                                                                 &
                                                                                                                                 ((1
                                                                                                                                       as
                                                                                                                                       libc::c_int)
                                                                                                                                      <<
                                                                                                                                      3
                                                                                                                                          as
                                                                                                                                          libc::c_int)
                                                                                                                                     -
                                                                                                                                     1
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                 !=
                                                                                                                                 0)
                                                                                                                                as
                                                                                                                                libc::c_int)
                                                                                                                           as
                                                                                                                           libc::c_uint)
                                                                       >
                                                                       90 as
                                                                           libc::c_int
                                                                           as
                                                                           libc::c_uint
                                                               {
                                                                memset(eff_map
                                                                           as
                                                                           *mut libc::c_void,
                                                                       1 as
                                                                           libc::c_int,
                                                                       ((len
                                                                             >>
                                                                             3
                                                                                 as
                                                                                 libc::c_int)
                                                                            +
                                                                            (len
                                                                                 &
                                                                                 ((1
                                                                                       as
                                                                                       libc::c_int)
                                                                                      <<
                                                                                      3
                                                                                          as
                                                                                          libc::c_int)
                                                                                     -
                                                                                     1
                                                                                         as
                                                                                         libc::c_int
                                                                                 !=
                                                                                 0)
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           libc::c_ulong);
                                                                (*afl).blocks_eff_select
                                                                    =
                                                                    ((*afl).blocks_eff_select
                                                                         as
                                                                         libc::c_ulonglong).wrapping_add(((len
                                                                                                               >>
                                                                                                               3
                                                                                                                   as
                                                                                                                   libc::c_int)
                                                                                                              +
                                                                                                              (len
                                                                                                                   &
                                                                                                                   ((1
                                                                                                                         as
                                                                                                                         libc::c_int)
                                                                                                                        <<
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       -
                                                                                                                       1
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                   !=
                                                                                                                   0)
                                                                                                                  as
                                                                                                                  libc::c_int)
                                                                                                             as
                                                                                                             libc::c_ulonglong)
                                                                        as
                                                                        u64_0
                                                                        as
                                                                        u64_0
                                                            } else {
                                                                (*afl).blocks_eff_select
                                                                    =
                                                                    ((*afl).blocks_eff_select
                                                                         as
                                                                         libc::c_ulonglong).wrapping_add(eff_cnt
                                                                                                             as
                                                                                                             libc::c_ulonglong)
                                                                        as
                                                                        u64_0
                                                                        as
                                                                        u64_0
                                                            }
                                                            (*afl).blocks_eff_total
                                                                =
                                                                ((*afl).blocks_eff_total
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add(((len
                                                                                                           >>
                                                                                                           3
                                                                                                               as
                                                                                                               libc::c_int)
                                                                                                          +
                                                                                                          (len
                                                                                                               &
                                                                                                               ((1
                                                                                                                     as
                                                                                                                     libc::c_int)
                                                                                                                    <<
                                                                                                                    3
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                   -
                                                                                                                   1
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                               !=
                                                                                                               0)
                                                                                                              as
                                                                                                              libc::c_int)
                                                                                                         as
                                                                                                         libc::c_ulonglong)
                                                                    as u64_0
                                                                    as u64_0;
                                                            new_hit_cnt =
                                                                ((*afl).queued_paths
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                            (*afl).stage_finds[STAGE_FLIP8
                                                                                   as
                                                                                   libc::c_int
                                                                                   as
                                                                                   usize]
                                                                =
                                                                ((*afl).stage_finds[STAGE_FLIP8
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        usize]
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                    as u64_0
                                                                    as u64_0;
                                                            (*afl).stage_cycles[STAGE_FLIP8
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    usize]
                                                                =
                                                                ((*afl).stage_cycles[STAGE_FLIP8
                                                                                         as
                                                                                         libc::c_int
                                                                                         as
                                                                                         usize]
                                                                     as
                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                         as
                                                                                                         libc::c_ulonglong)
                                                                    as u64_0
                                                                    as u64_0;
                                                            /* Two walking bytes. */
                                                            if len <
                                                                   2 as
                                                                       libc::c_int
                                                               {
                                                                current_block
                                                                    =
                                                                    10673436027196473312; /* for i = 0; i < len */
                                                            } else {
                                                                (*afl).stage_name
                                                                    =
                                                                    b"bitflip 16/8\x00"
                                                                        as
                                                                        *const u8
                                                                        as
                                                                        *const libc::c_char
                                                                        as
                                                                        *mut u8_0;
                                                                (*afl).stage_short
                                                                    =
                                                                    b"flip16\x00"
                                                                        as
                                                                        *const u8
                                                                        as
                                                                        *const libc::c_char
                                                                        as
                                                                        *mut u8_0;
                                                                (*afl).stage_cur
                                                                    =
                                                                    0 as
                                                                        libc::c_int;
                                                                (*afl).stage_max
                                                                    =
                                                                    len -
                                                                        1 as
                                                                            libc::c_int;
                                                                orig_hit_cnt =
                                                                    new_hit_cnt;
                                                                i =
                                                                    0 as
                                                                        libc::c_int;
                                                                loop  {
                                                                    if !(i <
                                                                             len
                                                                                 -
                                                                                 1
                                                                                     as
                                                                                     libc::c_int)
                                                                       {
                                                                        current_block
                                                                            =
                                                                            9453736210978095594;
                                                                        break
                                                                            ;
                                                                    }
                                                                    /* Let's consult the effector map... */
                                                                    if *eff_map.offset((i
                                                                                            >>
                                                                                            3
                                                                                                as
                                                                                                libc::c_int)
                                                                                           as
                                                                                           isize)
                                                                           ==
                                                                           0
                                                                           &&
                                                                           *eff_map.offset((i
                                                                                                +
                                                                                                1
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                >>
                                                                                                3
                                                                                                    as
                                                                                                    libc::c_int)
                                                                                               as
                                                                                               isize)
                                                                               ==
                                                                               0
                                                                       {
                                                                        (*afl).stage_max
                                                                            -=
                                                                            1
                                                                    } else {
                                                                        (*afl).stage_cur_byte
                                                                            =
                                                                            i;
                                                                        let ref mut fresh52 =
                                                                            *(out_buf.offset(i
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0);
                                                                        *fresh52
                                                                            =
                                                                            (*fresh52
                                                                                 as
                                                                                 libc::c_int
                                                                                 ^
                                                                                 0xffff
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                u16_0;
                                                                        if common_fuzz_stuff(afl,
                                                                                             out_buf,
                                                                                             len
                                                                                                 as
                                                                                                 u32_0)
                                                                               !=
                                                                               0
                                                                           {
                                                                            current_block
                                                                                =
                                                                                7888631765806679901;
                                                                            break
                                                                                ;
                                                                        }
                                                                        (*afl).stage_cur
                                                                            +=
                                                                            1;
                                                                        let ref mut fresh53 =
                                                                            *(out_buf.offset(i
                                                                                                 as
                                                                                                 isize)
                                                                                  as
                                                                                  *mut u16_0);
                                                                        *fresh53
                                                                            =
                                                                            (*fresh53
                                                                                 as
                                                                                 libc::c_int
                                                                                 ^
                                                                                 0xffff
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                u16_0
                                                                    }
                                                                    i += 1
                                                                }
                                                                match current_block
                                                                    {
                                                                    7888631765806679901
                                                                    => {
                                                                    }
                                                                    _ => {
                                                                        new_hit_cnt
                                                                            =
                                                                            ((*afl).queued_paths
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                        (*afl).stage_finds[STAGE_FLIP16
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               usize]
                                                                            =
                                                                            ((*afl).stage_finds[STAGE_FLIP16
                                                                                                    as
                                                                                                    libc::c_int
                                                                                                    as
                                                                                                    usize]
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                as
                                                                                u64_0
                                                                                as
                                                                                u64_0;
                                                                        (*afl).stage_cycles[STAGE_FLIP16
                                                                                                as
                                                                                                libc::c_int
                                                                                                as
                                                                                                usize]
                                                                            =
                                                                            ((*afl).stage_cycles[STAGE_FLIP16
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     usize]
                                                                                 as
                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                     as
                                                                                                                     libc::c_ulonglong)
                                                                                as
                                                                                u64_0
                                                                                as
                                                                                u64_0;
                                                                        if len
                                                                               <
                                                                               4
                                                                                   as
                                                                                   libc::c_int
                                                                           {
                                                                            current_block
                                                                                =
                                                                                10673436027196473312;
                                                                        } else {
                                                                            /* Four walking bytes. */
                                                                            (*afl).stage_name
                                                                                =
                                                                                b"bitflip 32/8\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0; /* for i = 0; i < len - 3 */
                                                                            (*afl).stage_short
                                                                                =
                                                                                b"flip32\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0;
                                                                            (*afl).stage_cur
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int;
                                                                            (*afl).stage_max
                                                                                =
                                                                                len
                                                                                    -
                                                                                    3
                                                                                        as
                                                                                        libc::c_int;
                                                                            orig_hit_cnt
                                                                                =
                                                                                new_hit_cnt;
                                                                            i
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int;
                                                                            loop 
                                                                                 {
                                                                                if !(i
                                                                                         <
                                                                                         len
                                                                                             -
                                                                                             3
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                   {
                                                                                    current_block
                                                                                        =
                                                                                        11591941514213818729;
                                                                                    break
                                                                                        ;
                                                                                }
                                                                                /* Let's consult the effector map... */
                                                                                if *eff_map.offset((i
                                                                                                        >>
                                                                                                        3
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                       as
                                                                                                       isize)
                                                                                       ==
                                                                                       0
                                                                                       &&
                                                                                       *eff_map.offset((i
                                                                                                            +
                                                                                                            1
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                            >>
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           as
                                                                                                           isize)
                                                                                           ==
                                                                                           0
                                                                                       &&
                                                                                       *eff_map.offset((i
                                                                                                            +
                                                                                                            2
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                            >>
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           as
                                                                                                           isize)
                                                                                           ==
                                                                                           0
                                                                                       &&
                                                                                       *eff_map.offset((i
                                                                                                            +
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                            >>
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           as
                                                                                                           isize)
                                                                                           ==
                                                                                           0
                                                                                   {
                                                                                    (*afl).stage_max
                                                                                        -=
                                                                                        1
                                                                                } else {
                                                                                    (*afl).stage_cur_byte
                                                                                        =
                                                                                        i;
                                                                                    let ref mut fresh54 =
                                                                                        *(out_buf.offset(i
                                                                                                             as
                                                                                                             isize)
                                                                                              as
                                                                                              *mut u32_0);
                                                                                    *fresh54
                                                                                        ^=
                                                                                        0xffffffff
                                                                                            as
                                                                                            libc::c_uint;
                                                                                    if common_fuzz_stuff(afl,
                                                                                                         out_buf,
                                                                                                         len
                                                                                                             as
                                                                                                             u32_0)
                                                                                           !=
                                                                                           0
                                                                                       {
                                                                                        current_block
                                                                                            =
                                                                                            7888631765806679901;
                                                                                        break
                                                                                            ;
                                                                                    }
                                                                                    (*afl).stage_cur
                                                                                        +=
                                                                                        1;
                                                                                    let ref mut fresh55 =
                                                                                        *(out_buf.offset(i
                                                                                                             as
                                                                                                             isize)
                                                                                              as
                                                                                              *mut u32_0);
                                                                                    *fresh55
                                                                                        ^=
                                                                                        0xffffffff
                                                                                            as
                                                                                            libc::c_uint
                                                                                }
                                                                                i
                                                                                    +=
                                                                                    1
                                                                            }
                                                                            match current_block
                                                                                {
                                                                                7888631765806679901
                                                                                =>
                                                                                {
                                                                                }
                                                                                _
                                                                                =>
                                                                                {
                                                                                    new_hit_cnt
                                                                                        =
                                                                                        ((*afl).queued_paths
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                    (*afl).stage_finds[STAGE_FLIP32
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           usize]
                                                                                        =
                                                                                        ((*afl).stage_finds[STAGE_FLIP32
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    (*afl).stage_cycles[STAGE_FLIP32
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            usize]
                                                                                        =
                                                                                        ((*afl).stage_cycles[STAGE_FLIP32
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 as
                                                                                                                 usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong)
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    current_block
                                                                                        =
                                                                                        10673436027196473312;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            match current_block
                                                                {
                                                                7888631765806679901
                                                                => {
                                                                }
                                                                _ => {
                                                                    if (*afl).no_arith
                                                                           !=
                                                                           0 {
                                                                        current_block
                                                                            =
                                                                            11478720319546090746;
                                                                    } else {
                                                                        /* *********************
   * ARITHMETIC INC/DEC *
   **********************/
                                                                        /* 8-bit arithmetics. */
                                                                        (*afl).stage_name
                                                                            =
                                                                            b"arith 8/8\x00"
                                                                                as
                                                                                *const u8
                                                                                as
                                                                                *const libc::c_char
                                                                                as
                                                                                *mut u8_0; /* for i = 0; i < len */
                                                                        (*afl).stage_short
                                                                            =
                                                                            b"arith8\x00"
                                                                                as
                                                                                *const u8
                                                                                as
                                                                                *const libc::c_char
                                                                                as
                                                                                *mut u8_0;
                                                                        (*afl).stage_cur
                                                                            =
                                                                            0
                                                                                as
                                                                                libc::c_int;
                                                                        (*afl).stage_max
                                                                            =
                                                                            2
                                                                                as
                                                                                libc::c_int
                                                                                *
                                                                                len
                                                                                *
                                                                                35
                                                                                    as
                                                                                    libc::c_int;
                                                                        (*afl).stage_val_type
                                                                            =
                                                                            STAGE_VAL_LE
                                                                                as
                                                                                libc::c_int
                                                                                as
                                                                                u8_0;
                                                                        orig_hit_cnt
                                                                            =
                                                                            new_hit_cnt;
                                                                        i =
                                                                            0
                                                                                as
                                                                                libc::c_int;
                                                                        's_1317:
                                                                            loop 
                                                                                 {
                                                                                if !(i
                                                                                         <
                                                                                         len)
                                                                                   {
                                                                                    current_block
                                                                                        =
                                                                                        8664009810751047338;
                                                                                    break
                                                                                        ;
                                                                                }
                                                                                let mut orig:
                                                                                        u8_0 =
                                                                                    *out_buf.offset(i
                                                                                                        as
                                                                                                        isize);
                                                                                /* Let's consult the effector map... */
                                                                                if *eff_map.offset((i
                                                                                                        >>
                                                                                                        3
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                       as
                                                                                                       isize)
                                                                                       ==
                                                                                       0
                                                                                   {
                                                                                    (*afl).stage_max
                                                                                        -=
                                                                                        2
                                                                                            as
                                                                                            libc::c_int
                                                                                            *
                                                                                            35
                                                                                                as
                                                                                                libc::c_int
                                                                                } else {
                                                                                    (*afl).stage_cur_byte
                                                                                        =
                                                                                        i;
                                                                                    j
                                                                                        =
                                                                                        1
                                                                                            as
                                                                                            libc::c_int;
                                                                                    while j
                                                                                              <=
                                                                                              35
                                                                                                  as
                                                                                                  libc::c_int
                                                                                          {
                                                                                        let mut r:
                                                                                                u8_0 =
                                                                                            (orig
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 ^
                                                                                                 orig
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     +
                                                                                                     j)
                                                                                                as
                                                                                                u8_0;
                                                                                        /* Do arithmetic operations only if the result couldn't be a product
         of a bitflip. */
                                                                                        if could_be_bitflip(r
                                                                                                                as
                                                                                                                u32_0)
                                                                                               ==
                                                                                               0
                                                                                           {
                                                                                            (*afl).stage_cur_val
                                                                                                =
                                                                                                j;
                                                                                            *out_buf.offset(i
                                                                                                                as
                                                                                                                isize)
                                                                                                =
                                                                                                (orig
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     +
                                                                                                     j)
                                                                                                    as
                                                                                                    u8_0;
                                                                                            if common_fuzz_stuff(afl,
                                                                                                                 out_buf,
                                                                                                                 len
                                                                                                                     as
                                                                                                                     u32_0)
                                                                                                   !=
                                                                                                   0
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    7888631765806679901;
                                                                                                break
                                                                                                    's_1317
                                                                                                    ;
                                                                                            }
                                                                                            (*afl).stage_cur
                                                                                                +=
                                                                                                1
                                                                                        } else {
                                                                                            (*afl).stage_max
                                                                                                -=
                                                                                                1
                                                                                        }
                                                                                        r
                                                                                            =
                                                                                            (orig
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 ^
                                                                                                 orig
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     -
                                                                                                     j)
                                                                                                as
                                                                                                u8_0;
                                                                                        if could_be_bitflip(r
                                                                                                                as
                                                                                                                u32_0)
                                                                                               ==
                                                                                               0
                                                                                           {
                                                                                            (*afl).stage_cur_val
                                                                                                =
                                                                                                -j;
                                                                                            *out_buf.offset(i
                                                                                                                as
                                                                                                                isize)
                                                                                                =
                                                                                                (orig
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     -
                                                                                                     j)
                                                                                                    as
                                                                                                    u8_0;
                                                                                            if common_fuzz_stuff(afl,
                                                                                                                 out_buf,
                                                                                                                 len
                                                                                                                     as
                                                                                                                     u32_0)
                                                                                                   !=
                                                                                                   0
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    7888631765806679901;
                                                                                                break
                                                                                                    's_1317
                                                                                                    ;
                                                                                            }
                                                                                            (*afl).stage_cur
                                                                                                +=
                                                                                                1
                                                                                        } else {
                                                                                            (*afl).stage_max
                                                                                                -=
                                                                                                1
                                                                                        }
                                                                                        *out_buf.offset(i
                                                                                                            as
                                                                                                            isize)
                                                                                            =
                                                                                            orig;
                                                                                        j
                                                                                            +=
                                                                                            1
                                                                                    }
                                                                                }
                                                                                i
                                                                                    +=
                                                                                    1
                                                                            }
                                                                        match current_block
                                                                            {
                                                                            7888631765806679901
                                                                            =>
                                                                            {
                                                                            }
                                                                            _
                                                                            =>
                                                                            {
                                                                                new_hit_cnt
                                                                                    =
                                                                                    ((*afl).queued_paths
                                                                                         as
                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                (*afl).stage_finds[STAGE_ARITH8
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                       as
                                                                                                       usize]
                                                                                    =
                                                                                    ((*afl).stage_finds[STAGE_ARITH8
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            usize]
                                                                                         as
                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                        as
                                                                                        u64_0
                                                                                        as
                                                                                        u64_0;
                                                                                (*afl).stage_cycles[STAGE_ARITH8
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        as
                                                                                                        usize]
                                                                                    =
                                                                                    ((*afl).stage_cycles[STAGE_ARITH8
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             as
                                                                                                             usize]
                                                                                         as
                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                             as
                                                                                                                             libc::c_ulonglong)
                                                                                        as
                                                                                        u64_0
                                                                                        as
                                                                                        u64_0;
                                                                                /* 16-bit arithmetics, both endians. */
                                                                                if len
                                                                                       <
                                                                                       2
                                                                                           as
                                                                                           libc::c_int
                                                                                   {
                                                                                    current_block
                                                                                        =
                                                                                        11478720319546090746; /* for i = 0; i < len - 1 */
                                                                                } else {
                                                                                    (*afl).stage_name
                                                                                        =
                                                                                        b"arith 16/8\x00"
                                                                                            as
                                                                                            *const u8
                                                                                            as
                                                                                            *const libc::c_char
                                                                                            as
                                                                                            *mut u8_0;
                                                                                    (*afl).stage_short
                                                                                        =
                                                                                        b"arith16\x00"
                                                                                            as
                                                                                            *const u8
                                                                                            as
                                                                                            *const libc::c_char
                                                                                            as
                                                                                            *mut u8_0;
                                                                                    (*afl).stage_cur
                                                                                        =
                                                                                        0
                                                                                            as
                                                                                            libc::c_int;
                                                                                    (*afl).stage_max
                                                                                        =
                                                                                        4
                                                                                            as
                                                                                            libc::c_int
                                                                                            *
                                                                                            (len
                                                                                                 -
                                                                                                 1
                                                                                                     as
                                                                                                     libc::c_int)
                                                                                            *
                                                                                            35
                                                                                                as
                                                                                                libc::c_int;
                                                                                    orig_hit_cnt
                                                                                        =
                                                                                        new_hit_cnt;
                                                                                    i
                                                                                        =
                                                                                        0
                                                                                            as
                                                                                            libc::c_int;
                                                                                    's_1474:
                                                                                        loop 
                                                                                             {
                                                                                            if !(i
                                                                                                     <
                                                                                                     len
                                                                                                         -
                                                                                                         1
                                                                                                             as
                                                                                                             libc::c_int)
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    12571138768122374500;
                                                                                                break
                                                                                                    ;
                                                                                            }
                                                                                            let mut orig_0:
                                                                                                    u16_0 =
                                                                                                *(out_buf.offset(i
                                                                                                                     as
                                                                                                                     isize)
                                                                                                      as
                                                                                                      *mut u16_0);
                                                                                            /* Let's consult the effector map... */
                                                                                            if *eff_map.offset((i
                                                                                                                    >>
                                                                                                                    3
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                   as
                                                                                                                   isize)
                                                                                                   ==
                                                                                                   0
                                                                                                   &&
                                                                                                   *eff_map.offset((i
                                                                                                                        +
                                                                                                                        1
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                               {
                                                                                                (*afl).stage_max
                                                                                                    -=
                                                                                                    4
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        *
                                                                                                        35
                                                                                                            as
                                                                                                            libc::c_int
                                                                                            } else {
                                                                                                (*afl).stage_cur_byte
                                                                                                    =
                                                                                                    i;
                                                                                                j
                                                                                                    =
                                                                                                    1
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                while j
                                                                                                          <=
                                                                                                          35
                                                                                                              as
                                                                                                              libc::c_int
                                                                                                      {
                                                                                                    let mut r1:
                                                                                                            u16_0 =
                                                                                                        (orig_0
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             orig_0
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 +
                                                                                                                 j)
                                                                                                            as
                                                                                                            u16_0;
                                                                                                    let mut r2:
                                                                                                            u16_0 =
                                                                                                        (orig_0
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             orig_0
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 -
                                                                                                                 j)
                                                                                                            as
                                                                                                            u16_0;
                                                                                                    let mut r3:
                                                                                                            u16_0 =
                                                                                                        (orig_0
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             ({
                                                                                                                  let mut _ret:
                                                                                                                          u16_0 =
                                                                                                                      (({
                                                                                                                            let mut _ret_0:
                                                                                                                                    u16_0 =
                                                                                                                                orig_0;
                                                                                                                            ((_ret_0
                                                                                                                                  as
                                                                                                                                  libc::c_int)
                                                                                                                                 <<
                                                                                                                                 8
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                 |
                                                                                                                                 _ret_0
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int)
                                                                                                                                as
                                                                                                                                u16_0
                                                                                                                        })
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           +
                                                                                                                           j)
                                                                                                                          as
                                                                                                                          u16_0;
                                                                                                                  ((_ret
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                       <<
                                                                                                                       8
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                       |
                                                                                                                       _ret
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           >>
                                                                                                                           8
                                                                                                                               as
                                                                                                                               libc::c_int)
                                                                                                                      as
                                                                                                                      u16_0
                                                                                                              })
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u16_0;
                                                                                                    let mut r4:
                                                                                                            u16_0 =
                                                                                                        (orig_0
                                                                                                             as
                                                                                                             libc::c_int
                                                                                                             ^
                                                                                                             ({
                                                                                                                  let mut _ret:
                                                                                                                          u16_0 =
                                                                                                                      (({
                                                                                                                            let mut _ret_0:
                                                                                                                                    u16_0 =
                                                                                                                                orig_0;
                                                                                                                            ((_ret_0
                                                                                                                                  as
                                                                                                                                  libc::c_int)
                                                                                                                                 <<
                                                                                                                                 8
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                 |
                                                                                                                                 _ret_0
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int)
                                                                                                                                as
                                                                                                                                u16_0
                                                                                                                        })
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           -
                                                                                                                           j)
                                                                                                                          as
                                                                                                                          u16_0;
                                                                                                                  ((_ret
                                                                                                                        as
                                                                                                                        libc::c_int)
                                                                                                                       <<
                                                                                                                       8
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                       |
                                                                                                                       _ret
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           >>
                                                                                                                           8
                                                                                                                               as
                                                                                                                               libc::c_int)
                                                                                                                      as
                                                                                                                      u16_0
                                                                                                              })
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            u16_0;
                                                                                                    /* Try little endian addition and subtraction first. Do it only
         if the operation would affect more than one byte (hence the
         & 0xff overflow checks) and if it couldn't be a product of
         a bitflip. */
                                                                                                    (*afl).stage_val_type
                                                                                                        =
                                                                                                        STAGE_VAL_LE
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            u8_0;
                                                                                                    if (orig_0
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            &
                                                                                                            0xff
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           +
                                                                                                           j
                                                                                                           >
                                                                                                           0xff
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                           &&
                                                                                                           could_be_bitflip(r1
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               ==
                                                                                                               0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            j;
                                                                                                        *(out_buf.offset(i
                                                                                                                             as
                                                                                                                             isize)
                                                                                                              as
                                                                                                              *mut u16_0)
                                                                                                            =
                                                                                                            (orig_0
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 +
                                                                                                                 j)
                                                                                                                as
                                                                                                                u16_0;
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                7888631765806679901;
                                                                                                            break
                                                                                                                's_1474
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    if (orig_0
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            &
                                                                                                            0xff
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           <
                                                                                                           j
                                                                                                           &&
                                                                                                           could_be_bitflip(r2
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               ==
                                                                                                               0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            -j;
                                                                                                        *(out_buf.offset(i
                                                                                                                             as
                                                                                                                             isize)
                                                                                                              as
                                                                                                              *mut u16_0)
                                                                                                            =
                                                                                                            (orig_0
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 -
                                                                                                                 j)
                                                                                                                as
                                                                                                                u16_0;
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                7888631765806679901;
                                                                                                            break
                                                                                                                's_1474
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    /* Big endian comes next. Same deal. */
                                                                                                    (*afl).stage_val_type
                                                                                                        =
                                                                                                        STAGE_VAL_BE
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            u8_0;
                                                                                                    if (orig_0
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            >>
                                                                                                            8
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           +
                                                                                                           j
                                                                                                           >
                                                                                                           0xff
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                           &&
                                                                                                           could_be_bitflip(r3
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               ==
                                                                                                               0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            j;
                                                                                                        *(out_buf.offset(i
                                                                                                                             as
                                                                                                                             isize)
                                                                                                              as
                                                                                                              *mut u16_0)
                                                                                                            =
                                                                                                            ({
                                                                                                                 let mut _ret:
                                                                                                                         u16_0 =
                                                                                                                     (({
                                                                                                                           let mut _ret_0:
                                                                                                                                   u16_0 =
                                                                                                                               orig_0;
                                                                                                                           ((_ret_0
                                                                                                                                 as
                                                                                                                                 libc::c_int)
                                                                                                                                <<
                                                                                                                                8
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                |
                                                                                                                                _ret_0
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    >>
                                                                                                                                    8
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                               as
                                                                                                                               u16_0
                                                                                                                       })
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          +
                                                                                                                          j)
                                                                                                                         as
                                                                                                                         u16_0;
                                                                                                                 ((_ret
                                                                                                                       as
                                                                                                                       libc::c_int)
                                                                                                                      <<
                                                                                                                      8
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                      |
                                                                                                                      _ret
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          >>
                                                                                                                          8
                                                                                                                              as
                                                                                                                              libc::c_int)
                                                                                                                     as
                                                                                                                     u16_0
                                                                                                             });
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                7888631765806679901;
                                                                                                            break
                                                                                                                's_1474
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    if (orig_0
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            >>
                                                                                                            8
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           <
                                                                                                           j
                                                                                                           &&
                                                                                                           could_be_bitflip(r4
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               ==
                                                                                                               0
                                                                                                       {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            -j;
                                                                                                        *(out_buf.offset(i
                                                                                                                             as
                                                                                                                             isize)
                                                                                                              as
                                                                                                              *mut u16_0)
                                                                                                            =
                                                                                                            ({
                                                                                                                 let mut _ret:
                                                                                                                         u16_0 =
                                                                                                                     (({
                                                                                                                           let mut _ret_0:
                                                                                                                                   u16_0 =
                                                                                                                               orig_0;
                                                                                                                           ((_ret_0
                                                                                                                                 as
                                                                                                                                 libc::c_int)
                                                                                                                                <<
                                                                                                                                8
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                |
                                                                                                                                _ret_0
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    >>
                                                                                                                                    8
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                               as
                                                                                                                               u16_0
                                                                                                                       })
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          -
                                                                                                                          j)
                                                                                                                         as
                                                                                                                         u16_0;
                                                                                                                 ((_ret
                                                                                                                       as
                                                                                                                       libc::c_int)
                                                                                                                      <<
                                                                                                                      8
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                      |
                                                                                                                      _ret
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                          >>
                                                                                                                          8
                                                                                                                              as
                                                                                                                              libc::c_int)
                                                                                                                     as
                                                                                                                     u16_0
                                                                                                             });
                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                             out_buf,
                                                                                                                             len
                                                                                                                                 as
                                                                                                                                 u32_0)
                                                                                                               !=
                                                                                                               0
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                7888631765806679901;
                                                                                                            break
                                                                                                                's_1474
                                                                                                                ;
                                                                                                        }
                                                                                                        (*afl).stage_cur
                                                                                                            +=
                                                                                                            1
                                                                                                    } else {
                                                                                                        (*afl).stage_max
                                                                                                            -=
                                                                                                            1
                                                                                                    }
                                                                                                    *(out_buf.offset(i
                                                                                                                         as
                                                                                                                         isize)
                                                                                                          as
                                                                                                          *mut u16_0)
                                                                                                        =
                                                                                                        orig_0;
                                                                                                    j
                                                                                                        +=
                                                                                                        1
                                                                                                }
                                                                                            }
                                                                                            i
                                                                                                +=
                                                                                                1
                                                                                        }
                                                                                    match current_block
                                                                                        {
                                                                                        7888631765806679901
                                                                                        =>
                                                                                        {
                                                                                        }
                                                                                        _
                                                                                        =>
                                                                                        {
                                                                                            new_hit_cnt
                                                                                                =
                                                                                                ((*afl).queued_paths
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                            (*afl).stage_finds[STAGE_ARITH16
                                                                                                                   as
                                                                                                                   libc::c_int
                                                                                                                   as
                                                                                                                   usize]
                                                                                                =
                                                                                                ((*afl).stage_finds[STAGE_ARITH16
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        usize]
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                    as
                                                                                                    u64_0
                                                                                                    as
                                                                                                    u64_0;
                                                                                            (*afl).stage_cycles[STAGE_ARITH16
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    usize]
                                                                                                =
                                                                                                ((*afl).stage_cycles[STAGE_ARITH16
                                                                                                                         as
                                                                                                                         libc::c_int
                                                                                                                         as
                                                                                                                         usize]
                                                                                                     as
                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                         as
                                                                                                                                         libc::c_ulonglong)
                                                                                                    as
                                                                                                    u64_0
                                                                                                    as
                                                                                                    u64_0;
                                                                                            /* 32-bit arithmetics, both endians. */
                                                                                            if len
                                                                                                   <
                                                                                                   4
                                                                                                       as
                                                                                                       libc::c_int
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    11478720319546090746; /* for i = 0; i < len - 3 */
                                                                                            } else {
                                                                                                (*afl).stage_name
                                                                                                    =
                                                                                                    b"arith 32/8\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0;
                                                                                                (*afl).stage_short
                                                                                                    =
                                                                                                    b"arith32\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0;
                                                                                                (*afl).stage_cur
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                (*afl).stage_max
                                                                                                    =
                                                                                                    4
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        *
                                                                                                        (len
                                                                                                             -
                                                                                                             3
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                        *
                                                                                                        35
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                orig_hit_cnt
                                                                                                    =
                                                                                                    new_hit_cnt;
                                                                                                i
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                's_1695:
                                                                                                    loop 
                                                                                                         {
                                                                                                        if !(i
                                                                                                                 <
                                                                                                                 len
                                                                                                                     -
                                                                                                                     3
                                                                                                                         as
                                                                                                                         libc::c_int)
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                15502218481637409867;
                                                                                                            break
                                                                                                                ;
                                                                                                        }
                                                                                                        let mut orig_1:
                                                                                                                u32_0 =
                                                                                                            *(out_buf.offset(i
                                                                                                                                 as
                                                                                                                                 isize)
                                                                                                                  as
                                                                                                                  *mut u32_0);
                                                                                                        /* Let's consult the effector map... */
                                                                                                        if *eff_map.offset((i
                                                                                                                                >>
                                                                                                                                3
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                               as
                                                                                                                               isize)
                                                                                                               ==
                                                                                                               0
                                                                                                               &&
                                                                                                               *eff_map.offset((i
                                                                                                                                    +
                                                                                                                                    1
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                               &&
                                                                                                               *eff_map.offset((i
                                                                                                                                    +
                                                                                                                                    2
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                               &&
                                                                                                               *eff_map.offset((i
                                                                                                                                    +
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                           {
                                                                                                            (*afl).stage_max
                                                                                                                -=
                                                                                                                4
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    *
                                                                                                                    35
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                        } else {
                                                                                                            (*afl).stage_cur_byte
                                                                                                                =
                                                                                                                i;
                                                                                                            j
                                                                                                                =
                                                                                                                1
                                                                                                                    as
                                                                                                                    libc::c_int;
                                                                                                            while j
                                                                                                                      <=
                                                                                                                      35
                                                                                                                          as
                                                                                                                          libc::c_int
                                                                                                                  {
                                                                                                                let mut r1_0:
                                                                                                                        u32_0 =
                                                                                                                    orig_1
                                                                                                                        ^
                                                                                                                        orig_1.wrapping_add(j
                                                                                                                                                as
                                                                                                                                                libc::c_uint);
                                                                                                                let mut r2_0:
                                                                                                                        u32_0 =
                                                                                                                    orig_1
                                                                                                                        ^
                                                                                                                        orig_1.wrapping_sub(j
                                                                                                                                                as
                                                                                                                                                libc::c_uint);
                                                                                                                let mut r3_0:
                                                                                                                        u32_0 =
                                                                                                                    orig_1
                                                                                                                        ^
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u32_0 =
                                                                                                                                 ({
                                                                                                                                      let mut _ret_0:
                                                                                                                                              u32_0 =
                                                                                                                                          orig_1;
                                                                                                                                      (_ret_0
                                                                                                                                           <<
                                                                                                                                           24
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               >>
                                                                                                                                               24
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               <<
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                               &
                                                                                                                                               0xff0000
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   libc::c_uint)
                                                                                                                                          |
                                                                                                                                          _ret_0
                                                                                                                                              >>
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff00
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint
                                                                                                                                  }).wrapping_add(j
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint);
                                                                                                                             (_ret
                                                                                                                                  <<
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      >>
                                                                                                                                      24
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      <<
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      &
                                                                                                                                      0xff0000
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                          as
                                                                                                                                          libc::c_uint)
                                                                                                                                 |
                                                                                                                                 _ret
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     &
                                                                                                                                     0xff00
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         libc::c_uint
                                                                                                                         });
                                                                                                                let mut r4_0:
                                                                                                                        u32_0 =
                                                                                                                    orig_1
                                                                                                                        ^
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u32_0 =
                                                                                                                                 ({
                                                                                                                                      let mut _ret_0:
                                                                                                                                              u32_0 =
                                                                                                                                          orig_1;
                                                                                                                                      (_ret_0
                                                                                                                                           <<
                                                                                                                                           24
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               >>
                                                                                                                                               24
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               <<
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                               &
                                                                                                                                               0xff0000
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   libc::c_uint)
                                                                                                                                          |
                                                                                                                                          _ret_0
                                                                                                                                              >>
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff00
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint
                                                                                                                                  }).wrapping_sub(j
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint);
                                                                                                                             (_ret
                                                                                                                                  <<
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      >>
                                                                                                                                      24
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      <<
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      &
                                                                                                                                      0xff0000
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                          as
                                                                                                                                          libc::c_uint)
                                                                                                                                 |
                                                                                                                                 _ret
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     &
                                                                                                                                     0xff00
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         libc::c_uint
                                                                                                                         });
                                                                                                                /* Little endian first. Same deal as with 16-bit: we only want to
         try if the operation would have effect on more than two bytes. */
                                                                                                                (*afl).stage_val_type
                                                                                                                    =
                                                                                                                    STAGE_VAL_LE
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        u8_0;
                                                                                                                if (orig_1
                                                                                                                        &
                                                                                                                        0xffff
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint).wrapping_add(j
                                                                                                                                                           as
                                                                                                                                                           libc::c_uint)
                                                                                                                       >
                                                                                                                       0xffff
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r1_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u32_0)
                                                                                                                        =
                                                                                                                        orig_1.wrapping_add(j
                                                                                                                                                as
                                                                                                                                                libc::c_uint);
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            7888631765806679901;
                                                                                                                        break
                                                                                                                            's_1695
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                if (orig_1
                                                                                                                        &
                                                                                                                        0xffff
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint)
                                                                                                                       <
                                                                                                                       j
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r2_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        -j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u32_0)
                                                                                                                        =
                                                                                                                        orig_1.wrapping_sub(j
                                                                                                                                                as
                                                                                                                                                libc::c_uint);
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            7888631765806679901;
                                                                                                                        break
                                                                                                                            's_1695
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                /* Big endian next. */
                                                                                                                (*afl).stage_val_type
                                                                                                                    =
                                                                                                                    STAGE_VAL_BE
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        u8_0;
                                                                                                                if (({
                                                                                                                         let mut _ret:
                                                                                                                                 u32_0 =
                                                                                                                             orig_1;
                                                                                                                         (_ret
                                                                                                                              <<
                                                                                                                              24
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                              |
                                                                                                                              _ret
                                                                                                                                  >>
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                              |
                                                                                                                              _ret
                                                                                                                                  <<
                                                                                                                                  8
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  &
                                                                                                                                  0xff0000
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      as
                                                                                                                                      libc::c_uint)
                                                                                                                             |
                                                                                                                             _ret
                                                                                                                                 >>
                                                                                                                                 8
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                 &
                                                                                                                                 0xff00
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     libc::c_uint
                                                                                                                     })
                                                                                                                        &
                                                                                                                        0xffff
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint).wrapping_add(j
                                                                                                                                                           as
                                                                                                                                                           libc::c_uint)
                                                                                                                       >
                                                                                                                       0xffff
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r3_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u32_0)
                                                                                                                        =
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u32_0 =
                                                                                                                                 ({
                                                                                                                                      let mut _ret_0:
                                                                                                                                              u32_0 =
                                                                                                                                          orig_1;
                                                                                                                                      (_ret_0
                                                                                                                                           <<
                                                                                                                                           24
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               >>
                                                                                                                                               24
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               <<
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                               &
                                                                                                                                               0xff0000
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   libc::c_uint)
                                                                                                                                          |
                                                                                                                                          _ret_0
                                                                                                                                              >>
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff00
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint
                                                                                                                                  }).wrapping_add(j
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint);
                                                                                                                             (_ret
                                                                                                                                  <<
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      >>
                                                                                                                                      24
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      <<
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      &
                                                                                                                                      0xff0000
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                          as
                                                                                                                                          libc::c_uint)
                                                                                                                                 |
                                                                                                                                 _ret
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     &
                                                                                                                                     0xff00
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         libc::c_uint
                                                                                                                         });
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            7888631765806679901;
                                                                                                                        break
                                                                                                                            's_1695
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                if (({
                                                                                                                         let mut _ret:
                                                                                                                                 u32_0 =
                                                                                                                             orig_1;
                                                                                                                         (_ret
                                                                                                                              <<
                                                                                                                              24
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                              |
                                                                                                                              _ret
                                                                                                                                  >>
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                              |
                                                                                                                              _ret
                                                                                                                                  <<
                                                                                                                                  8
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  &
                                                                                                                                  0xff0000
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                      as
                                                                                                                                      libc::c_uint)
                                                                                                                             |
                                                                                                                             _ret
                                                                                                                                 >>
                                                                                                                                 8
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                 &
                                                                                                                                 0xff00
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     libc::c_uint
                                                                                                                     })
                                                                                                                        &
                                                                                                                        0xffff
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            libc::c_uint)
                                                                                                                       <
                                                                                                                       j
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                       &&
                                                                                                                       could_be_bitflip(r4_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                   {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        -j;
                                                                                                                    *(out_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                          as
                                                                                                                          *mut u32_0)
                                                                                                                        =
                                                                                                                        ({
                                                                                                                             let mut _ret:
                                                                                                                                     u32_0 =
                                                                                                                                 ({
                                                                                                                                      let mut _ret_0:
                                                                                                                                              u32_0 =
                                                                                                                                          orig_1;
                                                                                                                                      (_ret_0
                                                                                                                                           <<
                                                                                                                                           24
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               >>
                                                                                                                                               24
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret_0
                                                                                                                                               <<
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                               &
                                                                                                                                               0xff0000
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   libc::c_uint)
                                                                                                                                          |
                                                                                                                                          _ret_0
                                                                                                                                              >>
                                                                                                                                              8
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                              &
                                                                                                                                              0xff00
                                                                                                                                                  as
                                                                                                                                                  libc::c_int
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint
                                                                                                                                  }).wrapping_sub(j
                                                                                                                                                      as
                                                                                                                                                      libc::c_uint);
                                                                                                                             (_ret
                                                                                                                                  <<
                                                                                                                                  24
                                                                                                                                      as
                                                                                                                                      libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      >>
                                                                                                                                      24
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                  |
                                                                                                                                  _ret
                                                                                                                                      <<
                                                                                                                                      8
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      &
                                                                                                                                      0xff0000
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                          as
                                                                                                                                          libc::c_uint)
                                                                                                                                 |
                                                                                                                                 _ret
                                                                                                                                     >>
                                                                                                                                     8
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     &
                                                                                                                                     0xff00
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         libc::c_uint
                                                                                                                         });
                                                                                                                    if common_fuzz_stuff(afl,
                                                                                                                                         out_buf,
                                                                                                                                         len
                                                                                                                                             as
                                                                                                                                             u32_0)
                                                                                                                           !=
                                                                                                                           0
                                                                                                                       {
                                                                                                                        current_block
                                                                                                                            =
                                                                                                                            7888631765806679901;
                                                                                                                        break
                                                                                                                            's_1695
                                                                                                                            ;
                                                                                                                    }
                                                                                                                    (*afl).stage_cur
                                                                                                                        +=
                                                                                                                        1
                                                                                                                } else {
                                                                                                                    (*afl).stage_max
                                                                                                                        -=
                                                                                                                        1
                                                                                                                }
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u32_0)
                                                                                                                    =
                                                                                                                    orig_1;
                                                                                                                j
                                                                                                                    +=
                                                                                                                    1
                                                                                                            }
                                                                                                        }
                                                                                                        i
                                                                                                            +=
                                                                                                            1
                                                                                                    }
                                                                                                match current_block
                                                                                                    {
                                                                                                    7888631765806679901
                                                                                                    =>
                                                                                                    {
                                                                                                    }
                                                                                                    _
                                                                                                    =>
                                                                                                    {
                                                                                                        new_hit_cnt
                                                                                                            =
                                                                                                            ((*afl).queued_paths
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                        (*afl).stage_finds[STAGE_ARITH32
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               usize]
                                                                                                            =
                                                                                                            ((*afl).stage_finds[STAGE_ARITH32
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        (*afl).stage_cycles[STAGE_ARITH32
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                usize]
                                                                                                            =
                                                                                                            ((*afl).stage_cycles[STAGE_ARITH32
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                     as
                                                                                                                                                     libc::c_ulonglong)
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        current_block
                                                                                                            =
                                                                                                            11478720319546090746;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    match current_block
                                                                        {
                                                                        7888631765806679901
                                                                        => {
                                                                        }
                                                                        _ => {
                                                                            /* *********************
   * INTERESTING VALUES *
   **********************/
                                                                            (*afl).stage_name
                                                                                =
                                                                                b"interest 8/8\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0;
                                                                            (*afl).stage_short
                                                                                =
                                                                                b"int8\x00"
                                                                                    as
                                                                                    *const u8
                                                                                    as
                                                                                    *const libc::c_char
                                                                                    as
                                                                                    *mut u8_0;
                                                                            (*afl).stage_cur
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int;
                                                                            (*afl).stage_max
                                                                                =
                                                                                (len
                                                                                     as
                                                                                     libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s8; 9]>()
                                                                                                                     as
                                                                                                                     libc::c_ulong)
                                                                                    as
                                                                                    s32;
                                                                            (*afl).stage_val_type
                                                                                =
                                                                                STAGE_VAL_LE
                                                                                    as
                                                                                    libc::c_int
                                                                                    as
                                                                                    u8_0;
                                                                            orig_hit_cnt
                                                                                =
                                                                                new_hit_cnt;
                                                                            /* Setting 8-bit integers. */
                                                                            i
                                                                                =
                                                                                0
                                                                                    as
                                                                                    libc::c_int; /* for i = 0; i < len */
                                                                            's_1916:
                                                                                loop 
                                                                                     {
                                                                                    if !(i
                                                                                             <
                                                                                             len)
                                                                                       {
                                                                                        current_block
                                                                                            =
                                                                                            18261806092529685649;
                                                                                        break
                                                                                            ;
                                                                                    }
                                                                                    let mut orig_2:
                                                                                            u8_0 =
                                                                                        *out_buf.offset(i
                                                                                                            as
                                                                                                            isize);
                                                                                    /* Let's consult the effector map... */
                                                                                    if *eff_map.offset((i
                                                                                                            >>
                                                                                                            3
                                                                                                                as
                                                                                                                libc::c_int)
                                                                                                           as
                                                                                                           isize)
                                                                                           ==
                                                                                           0
                                                                                       {
                                                                                        (*afl).stage_max
                                                                                            =
                                                                                            ((*afl).stage_max
                                                                                                 as
                                                                                                 libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s8; 9]>()
                                                                                                                                 as
                                                                                                                                 libc::c_ulong)
                                                                                                as
                                                                                                s32
                                                                                                as
                                                                                                s32
                                                                                    } else {
                                                                                        (*afl).stage_cur_byte
                                                                                            =
                                                                                            i;
                                                                                        j
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        while (j
                                                                                                   as
                                                                                                   libc::c_ulong)
                                                                                                  <
                                                                                                  ::std::mem::size_of::<[s8; 9]>()
                                                                                                      as
                                                                                                      libc::c_ulong
                                                                                              {
                                                                                            /* Skip if the value could be a product of bitflips or arithmetics. */
                                                                                            if could_be_bitflip((orig_2
                                                                                                                     as
                                                                                                                     libc::c_int
                                                                                                                     ^
                                                                                                                     interesting_8[j
                                                                                                                                       as
                                                                                                                                       usize]
                                                                                                                         as
                                                                                                                         u8_0
                                                                                                                         as
                                                                                                                         libc::c_int)
                                                                                                                    as
                                                                                                                    u32_0)
                                                                                                   as
                                                                                                   libc::c_int
                                                                                                   !=
                                                                                                   0
                                                                                                   ||
                                                                                                   could_be_arith(orig_2
                                                                                                                      as
                                                                                                                      u32_0,
                                                                                                                  interesting_8[j
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                      as
                                                                                                                      u8_0
                                                                                                                      as
                                                                                                                      u32_0,
                                                                                                                  1
                                                                                                                      as
                                                                                                                      libc::c_int
                                                                                                                      as
                                                                                                                      u8_0)
                                                                                                       as
                                                                                                       libc::c_int
                                                                                                       !=
                                                                                                       0
                                                                                               {
                                                                                                (*afl).stage_max
                                                                                                    -=
                                                                                                    1
                                                                                            } else {
                                                                                                (*afl).stage_cur_val
                                                                                                    =
                                                                                                    interesting_8[j
                                                                                                                      as
                                                                                                                      usize]
                                                                                                        as
                                                                                                        s32;
                                                                                                *out_buf.offset(i
                                                                                                                    as
                                                                                                                    isize)
                                                                                                    =
                                                                                                    interesting_8[j
                                                                                                                      as
                                                                                                                      usize]
                                                                                                        as
                                                                                                        u8_0;
                                                                                                if common_fuzz_stuff(afl,
                                                                                                                     out_buf,
                                                                                                                     len
                                                                                                                         as
                                                                                                                         u32_0)
                                                                                                       !=
                                                                                                       0
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        7888631765806679901;
                                                                                                    break
                                                                                                        's_1916
                                                                                                        ;
                                                                                                }
                                                                                                *out_buf.offset(i
                                                                                                                    as
                                                                                                                    isize)
                                                                                                    =
                                                                                                    orig_2;
                                                                                                (*afl).stage_cur
                                                                                                    +=
                                                                                                    1
                                                                                            }
                                                                                            j
                                                                                                +=
                                                                                                1
                                                                                        }
                                                                                    }
                                                                                    i
                                                                                        +=
                                                                                        1
                                                                                }
                                                                            match current_block
                                                                                {
                                                                                7888631765806679901
                                                                                =>
                                                                                {
                                                                                }
                                                                                _
                                                                                =>
                                                                                {
                                                                                    new_hit_cnt
                                                                                        =
                                                                                        ((*afl).queued_paths
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                    (*afl).stage_finds[STAGE_INTEREST8
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                           as
                                                                                                           usize]
                                                                                        =
                                                                                        ((*afl).stage_finds[STAGE_INTEREST8
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    (*afl).stage_cycles[STAGE_INTEREST8
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            usize]
                                                                                        =
                                                                                        ((*afl).stage_cycles[STAGE_INTEREST8
                                                                                                                 as
                                                                                                                 libc::c_int
                                                                                                                 as
                                                                                                                 usize]
                                                                                             as
                                                                                             libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                 as
                                                                                                                                 libc::c_ulonglong)
                                                                                            as
                                                                                            u64_0
                                                                                            as
                                                                                            u64_0;
                                                                                    /* Setting 16-bit integers, both endians. */
                                                                                    if (*afl).no_arith
                                                                                           as
                                                                                           libc::c_int
                                                                                           !=
                                                                                           0
                                                                                           ||
                                                                                           len
                                                                                               <
                                                                                               2
                                                                                                   as
                                                                                                   libc::c_int
                                                                                       {
                                                                                        current_block
                                                                                            =
                                                                                            16021337801962327356; /* for i = 0; i < len - 1 */
                                                                                    } else {
                                                                                        (*afl).stage_name
                                                                                            =
                                                                                            b"interest 16/8\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_short
                                                                                            =
                                                                                            b"int16\x00"
                                                                                                as
                                                                                                *const u8
                                                                                                as
                                                                                                *const libc::c_char
                                                                                                as
                                                                                                *mut u8_0;
                                                                                        (*afl).stage_cur
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        (*afl).stage_max
                                                                                            =
                                                                                            ((2
                                                                                                  as
                                                                                                  libc::c_int
                                                                                                  *
                                                                                                  (len
                                                                                                       -
                                                                                                       1
                                                                                                           as
                                                                                                           libc::c_int))
                                                                                                 as
                                                                                                 libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s16; 19]>()
                                                                                                                                 as
                                                                                                                                 libc::c_ulong
                                                                                                                                 >>
                                                                                                                                 1
                                                                                                                                     as
                                                                                                                                     libc::c_int)
                                                                                                as
                                                                                                s32;
                                                                                        orig_hit_cnt
                                                                                            =
                                                                                            new_hit_cnt;
                                                                                        i
                                                                                            =
                                                                                            0
                                                                                                as
                                                                                                libc::c_int;
                                                                                        's_2037:
                                                                                            loop 
                                                                                                 {
                                                                                                if !(i
                                                                                                         <
                                                                                                         len
                                                                                                             -
                                                                                                             1
                                                                                                                 as
                                                                                                                 libc::c_int)
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        7111701724112613438;
                                                                                                    break
                                                                                                        ;
                                                                                                }
                                                                                                let mut orig_3:
                                                                                                        u16_0 =
                                                                                                    *(out_buf.offset(i
                                                                                                                         as
                                                                                                                         isize)
                                                                                                          as
                                                                                                          *mut u16_0);
                                                                                                /* Let's consult the effector map... */
                                                                                                if *eff_map.offset((i
                                                                                                                        >>
                                                                                                                        3
                                                                                                                            as
                                                                                                                            libc::c_int)
                                                                                                                       as
                                                                                                                       isize)
                                                                                                       ==
                                                                                                       0
                                                                                                       &&
                                                                                                       *eff_map.offset((i
                                                                                                                            +
                                                                                                                            1
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                            >>
                                                                                                                            3
                                                                                                                                as
                                                                                                                                libc::c_int)
                                                                                                                           as
                                                                                                                           isize)
                                                                                                           ==
                                                                                                           0
                                                                                                   {
                                                                                                    (*afl).stage_max
                                                                                                        =
                                                                                                        ((*afl).stage_max
                                                                                                             as
                                                                                                             libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s16; 19]>()
                                                                                                                                             as
                                                                                                                                             libc::c_ulong)
                                                                                                            as
                                                                                                            s32
                                                                                                            as
                                                                                                            s32
                                                                                                } else {
                                                                                                    (*afl).stage_cur_byte
                                                                                                        =
                                                                                                        i;
                                                                                                    j
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    while (j
                                                                                                               as
                                                                                                               libc::c_ulong)
                                                                                                              <
                                                                                                              (::std::mem::size_of::<[s16; 19]>()
                                                                                                                   as
                                                                                                                   libc::c_ulong).wrapping_div(2
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   as
                                                                                                                                                   libc::c_ulong)
                                                                                                          {
                                                                                                        (*afl).stage_cur_val
                                                                                                            =
                                                                                                            interesting_16[j
                                                                                                                               as
                                                                                                                               usize]
                                                                                                                as
                                                                                                                s32;
                                                                                                        /* Skip if this could be a product of a bitflip, arithmetics,
         or single-byte interesting value insertion. */
                                                                                                        if could_be_bitflip((orig_3
                                                                                                                                 as
                                                                                                                                 libc::c_int
                                                                                                                                 ^
                                                                                                                                 interesting_16[j
                                                                                                                                                    as
                                                                                                                                                    usize]
                                                                                                                                     as
                                                                                                                                     u16_0
                                                                                                                                     as
                                                                                                                                     libc::c_int)
                                                                                                                                as
                                                                                                                                u32_0)
                                                                                                               ==
                                                                                                               0
                                                                                                               &&
                                                                                                               could_be_arith(orig_3
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              interesting_16[j
                                                                                                                                                 as
                                                                                                                                                 usize]
                                                                                                                                  as
                                                                                                                                  u16_0
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              2
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                                  as
                                                                                                                                  u8_0)
                                                                                                                   ==
                                                                                                                   0
                                                                                                               &&
                                                                                                               could_be_interest(orig_3
                                                                                                                                     as
                                                                                                                                     u32_0,
                                                                                                                                 interesting_16[j
                                                                                                                                                    as
                                                                                                                                                    usize]
                                                                                                                                     as
                                                                                                                                     u16_0
                                                                                                                                     as
                                                                                                                                     u32_0,
                                                                                                                                 2
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     u8_0,
                                                                                                                                 0
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     u8_0)
                                                                                                                   ==
                                                                                                                   0
                                                                                                           {
                                                                                                            (*afl).stage_val_type
                                                                                                                =
                                                                                                                STAGE_VAL_LE
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    u8_0;
                                                                                                            *(out_buf.offset(i
                                                                                                                                 as
                                                                                                                                 isize)
                                                                                                                  as
                                                                                                                  *mut u16_0)
                                                                                                                =
                                                                                                                interesting_16[j
                                                                                                                                   as
                                                                                                                                   usize]
                                                                                                                    as
                                                                                                                    u16_0;
                                                                                                            if common_fuzz_stuff(afl,
                                                                                                                                 out_buf,
                                                                                                                                 len
                                                                                                                                     as
                                                                                                                                     u32_0)
                                                                                                                   !=
                                                                                                                   0
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    7888631765806679901;
                                                                                                                break
                                                                                                                    's_2037
                                                                                                                    ;
                                                                                                            }
                                                                                                            (*afl).stage_cur
                                                                                                                +=
                                                                                                                1
                                                                                                        } else {
                                                                                                            (*afl).stage_max
                                                                                                                -=
                                                                                                                1
                                                                                                        }
                                                                                                        if interesting_16[j
                                                                                                                              as
                                                                                                                              usize]
                                                                                                               as
                                                                                                               u16_0
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               !=
                                                                                                               ({
                                                                                                                    let mut _ret:
                                                                                                                            u16_0 =
                                                                                                                        interesting_16[j
                                                                                                                                           as
                                                                                                                                           usize]
                                                                                                                            as
                                                                                                                            u16_0;
                                                                                                                    ((_ret
                                                                                                                          as
                                                                                                                          libc::c_int)
                                                                                                                         <<
                                                                                                                         8
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                         |
                                                                                                                         _ret
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             >>
                                                                                                                             8
                                                                                                                                 as
                                                                                                                                 libc::c_int)
                                                                                                                        as
                                                                                                                        u16_0
                                                                                                                })
                                                                                                                   as
                                                                                                                   libc::c_int
                                                                                                               &&
                                                                                                               could_be_bitflip((orig_3
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     ^
                                                                                                                                     ({
                                                                                                                                          let mut _ret:
                                                                                                                                                  u16_0 =
                                                                                                                                              interesting_16[j
                                                                                                                                                                 as
                                                                                                                                                                 usize]
                                                                                                                                                  as
                                                                                                                                                  u16_0;
                                                                                                                                          ((_ret
                                                                                                                                                as
                                                                                                                                                libc::c_int)
                                                                                                                                               <<
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                               |
                                                                                                                                               _ret
                                                                                                                                                   as
                                                                                                                                                   libc::c_int
                                                                                                                                                   >>
                                                                                                                                                   8
                                                                                                                                                       as
                                                                                                                                                       libc::c_int)
                                                                                                                                              as
                                                                                                                                              u16_0
                                                                                                                                      })
                                                                                                                                         as
                                                                                                                                         libc::c_int)
                                                                                                                                    as
                                                                                                                                    u32_0)
                                                                                                                   ==
                                                                                                                   0
                                                                                                               &&
                                                                                                               could_be_arith(orig_3
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              ({
                                                                                                                                   let mut _ret:
                                                                                                                                           u16_0 =
                                                                                                                                       interesting_16[j
                                                                                                                                                          as
                                                                                                                                                          usize]
                                                                                                                                           as
                                                                                                                                           u16_0;
                                                                                                                                   ((_ret
                                                                                                                                         as
                                                                                                                                         libc::c_int)
                                                                                                                                        <<
                                                                                                                                        8
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        |
                                                                                                                                        _ret
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            >>
                                                                                                                                            8
                                                                                                                                                as
                                                                                                                                                libc::c_int)
                                                                                                                                       as
                                                                                                                                       u16_0
                                                                                                                               })
                                                                                                                                  as
                                                                                                                                  u32_0,
                                                                                                                              2
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                                  as
                                                                                                                                  u8_0)
                                                                                                                   ==
                                                                                                                   0
                                                                                                               &&
                                                                                                               could_be_interest(orig_3
                                                                                                                                     as
                                                                                                                                     u32_0,
                                                                                                                                 ({
                                                                                                                                      let mut _ret:
                                                                                                                                              u16_0 =
                                                                                                                                          interesting_16[j
                                                                                                                                                             as
                                                                                                                                                             usize]
                                                                                                                                              as
                                                                                                                                              u16_0;
                                                                                                                                      ((_ret
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                           <<
                                                                                                                                           8
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                           |
                                                                                                                                           _ret
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               >>
                                                                                                                                               8
                                                                                                                                                   as
                                                                                                                                                   libc::c_int)
                                                                                                                                          as
                                                                                                                                          u16_0
                                                                                                                                  })
                                                                                                                                     as
                                                                                                                                     u32_0,
                                                                                                                                 2
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     u8_0,
                                                                                                                                 1
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     u8_0)
                                                                                                                   ==
                                                                                                                   0
                                                                                                           {
                                                                                                            (*afl).stage_val_type
                                                                                                                =
                                                                                                                STAGE_VAL_BE
                                                                                                                    as
                                                                                                                    libc::c_int
                                                                                                                    as
                                                                                                                    u8_0;
                                                                                                            *(out_buf.offset(i
                                                                                                                                 as
                                                                                                                                 isize)
                                                                                                                  as
                                                                                                                  *mut u16_0)
                                                                                                                =
                                                                                                                ({
                                                                                                                     let mut _ret:
                                                                                                                             u16_0 =
                                                                                                                         interesting_16[j
                                                                                                                                            as
                                                                                                                                            usize]
                                                                                                                             as
                                                                                                                             u16_0;
                                                                                                                     ((_ret
                                                                                                                           as
                                                                                                                           libc::c_int)
                                                                                                                          <<
                                                                                                                          8
                                                                                                                              as
                                                                                                                              libc::c_int
                                                                                                                          |
                                                                                                                          _ret
                                                                                                                              as
                                                                                                                              libc::c_int
                                                                                                                              >>
                                                                                                                              8
                                                                                                                                  as
                                                                                                                                  libc::c_int)
                                                                                                                         as
                                                                                                                         u16_0
                                                                                                                 });
                                                                                                            if common_fuzz_stuff(afl,
                                                                                                                                 out_buf,
                                                                                                                                 len
                                                                                                                                     as
                                                                                                                                     u32_0)
                                                                                                                   !=
                                                                                                                   0
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    7888631765806679901;
                                                                                                                break
                                                                                                                    's_2037
                                                                                                                    ;
                                                                                                            }
                                                                                                            (*afl).stage_cur
                                                                                                                +=
                                                                                                                1
                                                                                                        } else {
                                                                                                            (*afl).stage_max
                                                                                                                -=
                                                                                                                1
                                                                                                        }
                                                                                                        j
                                                                                                            +=
                                                                                                            1
                                                                                                    }
                                                                                                    *(out_buf.offset(i
                                                                                                                         as
                                                                                                                         isize)
                                                                                                          as
                                                                                                          *mut u16_0)
                                                                                                        =
                                                                                                        orig_3
                                                                                                }
                                                                                                i
                                                                                                    +=
                                                                                                    1
                                                                                            }
                                                                                        match current_block
                                                                                            {
                                                                                            7888631765806679901
                                                                                            =>
                                                                                            {
                                                                                            }
                                                                                            _
                                                                                            =>
                                                                                            {
                                                                                                new_hit_cnt
                                                                                                    =
                                                                                                    ((*afl).queued_paths
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                (*afl).stage_finds[STAGE_INTEREST16
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                                       as
                                                                                                                       usize]
                                                                                                    =
                                                                                                    ((*afl).stage_finds[STAGE_INTEREST16
                                                                                                                            as
                                                                                                                            libc::c_int
                                                                                                                            as
                                                                                                                            usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                (*afl).stage_cycles[STAGE_INTEREST16
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        usize]
                                                                                                    =
                                                                                                    ((*afl).stage_cycles[STAGE_INTEREST16
                                                                                                                             as
                                                                                                                             libc::c_int
                                                                                                                             as
                                                                                                                             usize]
                                                                                                         as
                                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                             as
                                                                                                                                             libc::c_ulonglong)
                                                                                                        as
                                                                                                        u64_0
                                                                                                        as
                                                                                                        u64_0;
                                                                                                if len
                                                                                                       <
                                                                                                       4
                                                                                                           as
                                                                                                           libc::c_int
                                                                                                   {
                                                                                                    current_block
                                                                                                        =
                                                                                                        16021337801962327356;
                                                                                                } else {
                                                                                                    /* Setting 32-bit integers, both endians. */
                                                                                                    (*afl).stage_name
                                                                                                        =
                                                                                                        b"interest 32/8\x00"
                                                                                                            as
                                                                                                            *const u8
                                                                                                            as
                                                                                                            *const libc::c_char
                                                                                                            as
                                                                                                            *mut u8_0; /* for i = 0; i < len - 3 */
                                                                                                    (*afl).stage_short
                                                                                                        =
                                                                                                        b"int32\x00"
                                                                                                            as
                                                                                                            *const u8
                                                                                                            as
                                                                                                            *const libc::c_char
                                                                                                            as
                                                                                                            *mut u8_0;
                                                                                                    (*afl).stage_cur
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    (*afl).stage_max
                                                                                                        =
                                                                                                        ((2
                                                                                                              as
                                                                                                              libc::c_int
                                                                                                              *
                                                                                                              (len
                                                                                                                   -
                                                                                                                   3
                                                                                                                       as
                                                                                                                       libc::c_int))
                                                                                                             as
                                                                                                             libc::c_ulong).wrapping_mul(::std::mem::size_of::<[s32; 27]>()
                                                                                                                                             as
                                                                                                                                             libc::c_ulong
                                                                                                                                             >>
                                                                                                                                             2
                                                                                                                                                 as
                                                                                                                                                 libc::c_int)
                                                                                                            as
                                                                                                            s32;
                                                                                                    orig_hit_cnt
                                                                                                        =
                                                                                                        new_hit_cnt;
                                                                                                    i
                                                                                                        =
                                                                                                        0
                                                                                                            as
                                                                                                            libc::c_int;
                                                                                                    's_2191:
                                                                                                        loop 
                                                                                                             {
                                                                                                            if !(i
                                                                                                                     <
                                                                                                                     len
                                                                                                                         -
                                                                                                                         3
                                                                                                                             as
                                                                                                                             libc::c_int)
                                                                                                               {
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    6020034341206185270;
                                                                                                                break
                                                                                                                    ;
                                                                                                            }
                                                                                                            let mut orig_4:
                                                                                                                    u32_0 =
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u32_0);
                                                                                                            /* Let's consult the effector map... */
                                                                                                            if *eff_map.offset((i
                                                                                                                                    >>
                                                                                                                                    3
                                                                                                                                        as
                                                                                                                                        libc::c_int)
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                   ==
                                                                                                                   0
                                                                                                                   &&
                                                                                                                   *eff_map.offset((i
                                                                                                                                        +
                                                                                                                                        1
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        >>
                                                                                                                                        3
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                       as
                                                                                                                                       isize)
                                                                                                                       ==
                                                                                                                       0
                                                                                                                   &&
                                                                                                                   *eff_map.offset((i
                                                                                                                                        +
                                                                                                                                        2
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        >>
                                                                                                                                        3
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                       as
                                                                                                                                       isize)
                                                                                                                       ==
                                                                                                                       0
                                                                                                                   &&
                                                                                                                   *eff_map.offset((i
                                                                                                                                        +
                                                                                                                                        3
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        >>
                                                                                                                                        3
                                                                                                                                            as
                                                                                                                                            libc::c_int)
                                                                                                                                       as
                                                                                                                                       isize)
                                                                                                                       ==
                                                                                                                       0
                                                                                                               {
                                                                                                                (*afl).stage_max
                                                                                                                    =
                                                                                                                    ((*afl).stage_max
                                                                                                                         as
                                                                                                                         libc::c_ulong).wrapping_sub(::std::mem::size_of::<[s32; 27]>()
                                                                                                                                                         as
                                                                                                                                                         libc::c_ulong
                                                                                                                                                         >>
                                                                                                                                                         1
                                                                                                                                                             as
                                                                                                                                                             libc::c_int)
                                                                                                                        as
                                                                                                                        s32
                                                                                                                        as
                                                                                                                        s32
                                                                                                            } else {
                                                                                                                (*afl).stage_cur_byte
                                                                                                                    =
                                                                                                                    i;
                                                                                                                j
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                while (j
                                                                                                                           as
                                                                                                                           libc::c_ulong)
                                                                                                                          <
                                                                                                                          (::std::mem::size_of::<[s32; 27]>()
                                                                                                                               as
                                                                                                                               libc::c_ulong).wrapping_div(4
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_ulong)
                                                                                                                      {
                                                                                                                    (*afl).stage_cur_val
                                                                                                                        =
                                                                                                                        interesting_32[j
                                                                                                                                           as
                                                                                                                                           usize];
                                                                                                                    /* Skip if this could be a product of a bitflip, arithmetics,
         or word interesting value insertion. */
                                                                                                                    if could_be_bitflip(orig_4
                                                                                                                                            ^
                                                                                                                                            interesting_32[j
                                                                                                                                                               as
                                                                                                                                                               usize]
                                                                                                                                                as
                                                                                                                                                u32_0)
                                                                                                                           ==
                                                                                                                           0
                                                                                                                           &&
                                                                                                                           could_be_arith(orig_4,
                                                                                                                                          interesting_32[j
                                                                                                                                                             as
                                                                                                                                                             usize]
                                                                                                                                              as
                                                                                                                                              u32_0,
                                                                                                                                          4
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                              as
                                                                                                                                              u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_interest(orig_4,
                                                                                                                                             interesting_32[j
                                                                                                                                                                as
                                                                                                                                                                usize]
                                                                                                                                                 as
                                                                                                                                                 u32_0,
                                                                                                                                             4
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0,
                                                                                                                                             0
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                       {
                                                                                                                        (*afl).stage_val_type
                                                                                                                            =
                                                                                                                            STAGE_VAL_LE
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                u8_0;
                                                                                                                        *(out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *mut u32_0)
                                                                                                                            =
                                                                                                                            interesting_32[j
                                                                                                                                               as
                                                                                                                                               usize]
                                                                                                                                as
                                                                                                                                u32_0;
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             out_buf,
                                                                                                                                             len
                                                                                                                                                 as
                                                                                                                                                 u32_0)
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                7888631765806679901;
                                                                                                                            break
                                                                                                                                's_2191
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    if interesting_32[j
                                                                                                                                          as
                                                                                                                                          usize]
                                                                                                                           as
                                                                                                                           u32_0
                                                                                                                           !=
                                                                                                                           ({
                                                                                                                                let mut _ret:
                                                                                                                                        u32_0 =
                                                                                                                                    interesting_32[j
                                                                                                                                                       as
                                                                                                                                                       usize]
                                                                                                                                        as
                                                                                                                                        u32_0;
                                                                                                                                (_ret
                                                                                                                                     <<
                                                                                                                                     24
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                     |
                                                                                                                                     _ret
                                                                                                                                         >>
                                                                                                                                         24
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                     |
                                                                                                                                     _ret
                                                                                                                                         <<
                                                                                                                                         8
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                         &
                                                                                                                                         0xff0000
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                             as
                                                                                                                                             libc::c_uint)
                                                                                                                                    |
                                                                                                                                    _ret
                                                                                                                                        >>
                                                                                                                                        8
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                        &
                                                                                                                                        0xff00
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            libc::c_uint
                                                                                                                            })
                                                                                                                           &&
                                                                                                                           could_be_bitflip(orig_4
                                                                                                                                                ^
                                                                                                                                                ({
                                                                                                                                                     let mut _ret:
                                                                                                                                                             u32_0 =
                                                                                                                                                         interesting_32[j
                                                                                                                                                                            as
                                                                                                                                                                            usize]
                                                                                                                                                             as
                                                                                                                                                             u32_0;
                                                                                                                                                     (_ret
                                                                                                                                                          <<
                                                                                                                                                          24
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          |
                                                                                                                                                          _ret
                                                                                                                                                              >>
                                                                                                                                                              24
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_int
                                                                                                                                                          |
                                                                                                                                                          _ret
                                                                                                                                                              <<
                                                                                                                                                              8
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_int
                                                                                                                                                              &
                                                                                                                                                              0xff0000
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_int
                                                                                                                                                                  as
                                                                                                                                                                  libc::c_uint)
                                                                                                                                                         |
                                                                                                                                                         _ret
                                                                                                                                                             >>
                                                                                                                                                             8
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_int
                                                                                                                                                             &
                                                                                                                                                             0xff00
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_int
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_uint
                                                                                                                                                 }))
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_arith(orig_4,
                                                                                                                                          ({
                                                                                                                                               let mut _ret:
                                                                                                                                                       u32_0 =
                                                                                                                                                   interesting_32[j
                                                                                                                                                                      as
                                                                                                                                                                      usize]
                                                                                                                                                       as
                                                                                                                                                       u32_0;
                                                                                                                                               (_ret
                                                                                                                                                    <<
                                                                                                                                                    24
                                                                                                                                                        as
                                                                                                                                                        libc::c_int
                                                                                                                                                    |
                                                                                                                                                    _ret
                                                                                                                                                        >>
                                                                                                                                                        24
                                                                                                                                                            as
                                                                                                                                                            libc::c_int
                                                                                                                                                    |
                                                                                                                                                    _ret
                                                                                                                                                        <<
                                                                                                                                                        8
                                                                                                                                                            as
                                                                                                                                                            libc::c_int
                                                                                                                                                        &
                                                                                                                                                        0xff0000
                                                                                                                                                            as
                                                                                                                                                            libc::c_int
                                                                                                                                                            as
                                                                                                                                                            libc::c_uint)
                                                                                                                                                   |
                                                                                                                                                   _ret
                                                                                                                                                       >>
                                                                                                                                                       8
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       &
                                                                                                                                                       0xff00
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                           as
                                                                                                                                                           libc::c_uint
                                                                                                                                           }),
                                                                                                                                          4
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                              as
                                                                                                                                              u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           &&
                                                                                                                           could_be_interest(orig_4,
                                                                                                                                             ({
                                                                                                                                                  let mut _ret:
                                                                                                                                                          u32_0 =
                                                                                                                                                      interesting_32[j
                                                                                                                                                                         as
                                                                                                                                                                         usize]
                                                                                                                                                          as
                                                                                                                                                          u32_0;
                                                                                                                                                  (_ret
                                                                                                                                                       <<
                                                                                                                                                       24
                                                                                                                                                           as
                                                                                                                                                           libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret
                                                                                                                                                           >>
                                                                                                                                                           24
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                       |
                                                                                                                                                       _ret
                                                                                                                                                           <<
                                                                                                                                                           8
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                           &
                                                                                                                                                           0xff0000
                                                                                                                                                               as
                                                                                                                                                               libc::c_int
                                                                                                                                                               as
                                                                                                                                                               libc::c_uint)
                                                                                                                                                      |
                                                                                                                                                      _ret
                                                                                                                                                          >>
                                                                                                                                                          8
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                          &
                                                                                                                                                          0xff00
                                                                                                                                                              as
                                                                                                                                                              libc::c_int
                                                                                                                                                              as
                                                                                                                                                              libc::c_uint
                                                                                                                                              }),
                                                                                                                                             4
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0,
                                                                                                                                             1
                                                                                                                                                 as
                                                                                                                                                 libc::c_int
                                                                                                                                                 as
                                                                                                                                                 u8_0)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                       {
                                                                                                                        (*afl).stage_val_type
                                                                                                                            =
                                                                                                                            STAGE_VAL_BE
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                u8_0;
                                                                                                                        *(out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *mut u32_0)
                                                                                                                            =
                                                                                                                            ({
                                                                                                                                 let mut _ret:
                                                                                                                                         u32_0 =
                                                                                                                                     interesting_32[j
                                                                                                                                                        as
                                                                                                                                                        usize]
                                                                                                                                         as
                                                                                                                                         u32_0;
                                                                                                                                 (_ret
                                                                                                                                      <<
                                                                                                                                      24
                                                                                                                                          as
                                                                                                                                          libc::c_int
                                                                                                                                      |
                                                                                                                                      _ret
                                                                                                                                          >>
                                                                                                                                          24
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                      |
                                                                                                                                      _ret
                                                                                                                                          <<
                                                                                                                                          8
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                          &
                                                                                                                                          0xff0000
                                                                                                                                              as
                                                                                                                                              libc::c_int
                                                                                                                                              as
                                                                                                                                              libc::c_uint)
                                                                                                                                     |
                                                                                                                                     _ret
                                                                                                                                         >>
                                                                                                                                         8
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                         &
                                                                                                                                         0xff00
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                             as
                                                                                                                                             libc::c_uint
                                                                                                                             });
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             out_buf,
                                                                                                                                             len
                                                                                                                                                 as
                                                                                                                                                 u32_0)
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                7888631765806679901;
                                                                                                                            break
                                                                                                                                's_2191
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    j
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                                *(out_buf.offset(i
                                                                                                                                     as
                                                                                                                                     isize)
                                                                                                                      as
                                                                                                                      *mut u32_0)
                                                                                                                    =
                                                                                                                    orig_4
                                                                                                            }
                                                                                                            i
                                                                                                                +=
                                                                                                                1
                                                                                                        }
                                                                                                    match current_block
                                                                                                        {
                                                                                                        7888631765806679901
                                                                                                        =>
                                                                                                        {
                                                                                                        }
                                                                                                        _
                                                                                                        =>
                                                                                                        {
                                                                                                            new_hit_cnt
                                                                                                                =
                                                                                                                ((*afl).queued_paths
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                            (*afl).stage_finds[STAGE_INTEREST32
                                                                                                                                   as
                                                                                                                                   libc::c_int
                                                                                                                                   as
                                                                                                                                   usize]
                                                                                                                =
                                                                                                                ((*afl).stage_finds[STAGE_INTEREST32
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        usize]
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                    as
                                                                                                                    u64_0
                                                                                                                    as
                                                                                                                    u64_0;
                                                                                                            (*afl).stage_cycles[STAGE_INTEREST32
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                =
                                                                                                                ((*afl).stage_cycles[STAGE_INTEREST32
                                                                                                                                         as
                                                                                                                                         libc::c_int
                                                                                                                                         as
                                                                                                                                         usize]
                                                                                                                     as
                                                                                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                         as
                                                                                                                                                         libc::c_ulonglong)
                                                                                                                    as
                                                                                                                    u64_0
                                                                                                                    as
                                                                                                                    u64_0;
                                                                                                            current_block
                                                                                                                =
                                                                                                                16021337801962327356;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    match current_block
                                                                                        {
                                                                                        7888631765806679901
                                                                                        =>
                                                                                        {
                                                                                        }
                                                                                        _
                                                                                        =>

                                                                                        /* *******************
   * DICTIONARY STUFF *
   ********************/
                                                                                        {
                                                                                            if (*afl).extras_cnt
                                                                                                   ==
                                                                                                   0
                                                                                               {
                                                                                                current_block
                                                                                                    =
                                                                                                    11304045863834688353;
                                                                                            } else {
                                                                                                /* Overwrite with user-supplied extras. */
                                                                                                (*afl).stage_name
                                                                                                    =
                                                                                                    b"user extras (over)\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0; /* for i = 0; i < len */
                                                                                                (*afl).stage_short
                                                                                                    =
                                                                                                    b"ext_UO\x00"
                                                                                                        as
                                                                                                        *const u8
                                                                                                        as
                                                                                                        *const libc::c_char
                                                                                                        as
                                                                                                        *mut u8_0;
                                                                                                (*afl).stage_cur
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                (*afl).stage_max
                                                                                                    =
                                                                                                    (*afl).extras_cnt.wrapping_mul(len
                                                                                                                                       as
                                                                                                                                       libc::c_uint)
                                                                                                        as
                                                                                                        s32;
                                                                                                (*afl).stage_val_type
                                                                                                    =
                                                                                                    STAGE_VAL_NONE
                                                                                                        as
                                                                                                        libc::c_int
                                                                                                        as
                                                                                                        u8_0;
                                                                                                orig_hit_cnt
                                                                                                    =
                                                                                                    new_hit_cnt;
                                                                                                i
                                                                                                    =
                                                                                                    0
                                                                                                        as
                                                                                                        libc::c_int;
                                                                                                's_2351:
                                                                                                    loop 
                                                                                                         {
                                                                                                        if !(i
                                                                                                                 <
                                                                                                                 len)
                                                                                                           {
                                                                                                            current_block
                                                                                                                =
                                                                                                                5134788094664540625;
                                                                                                            break
                                                                                                                ;
                                                                                                        }
                                                                                                        let mut last_len:
                                                                                                                u32_0 =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                u32_0;
                                                                                                        (*afl).stage_cur_byte
                                                                                                            =
                                                                                                            i;
                                                                                                        /* Extras are sorted by size, from smallest to largest. This means
       that we don't have to worry about restoring the buffer in
       between writes at a particular offset determined by the outer
       loop. */
                                                                                                        j
                                                                                                            =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int;
                                                                                                        while (j
                                                                                                                   as
                                                                                                                   libc::c_uint)
                                                                                                                  <
                                                                                                                  (*afl).extras_cnt
                                                                                                              {
                                                                                                            /* Skip extras probabilistically if afl->extras_cnt > MAX_DET_EXTRAS. Also
         skip them if there's no room to insert the payload, if the token
         is redundant, or if its entire span has no bytes set in the effector
         map. */
                                                                                                            if (*afl).extras_cnt
                                                                                                                   >
                                                                                                                   200
                                                                                                                       as
                                                                                                                       libc::c_int
                                                                                                                       as
                                                                                                                       libc::c_uint
                                                                                                                   &&
                                                                                                                   rand_below(afl,
                                                                                                                              (*afl).extras_cnt)
                                                                                                                       >=
                                                                                                                       200
                                                                                                                           as
                                                                                                                           libc::c_int
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                   ||
                                                                                                                   (*(*afl).extras.offset(j
                                                                                                                                              as
                                                                                                                                              isize)).len
                                                                                                                       >
                                                                                                                       (len
                                                                                                                            -
                                                                                                                            i)
                                                                                                                           as
                                                                                                                           libc::c_uint
                                                                                                                   ||
                                                                                                                   memcmp((*(*afl).extras.offset(j
                                                                                                                                                     as
                                                                                                                                                     isize)).data
                                                                                                                              as
                                                                                                                              *const libc::c_void,
                                                                                                                          out_buf.offset(i
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *const libc::c_void,
                                                                                                                          (*(*afl).extras.offset(j
                                                                                                                                                     as
                                                                                                                                                     isize)).len
                                                                                                                              as
                                                                                                                              libc::c_ulong)
                                                                                                                       ==
                                                                                                                       0
                                                                                                                   ||
                                                                                                                   memchr(eff_map.offset((i
                                                                                                                                              >>
                                                                                                                                              3
                                                                                                                                                  as
                                                                                                                                                  libc::c_int)
                                                                                                                                             as
                                                                                                                                             isize)
                                                                                                                              as
                                                                                                                              *const libc::c_void,
                                                                                                                          1
                                                                                                                              as
                                                                                                                              libc::c_int,
                                                                                                                          ((i
                                                                                                                                as
                                                                                                                                libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                      as
                                                                                                                                                                                      isize)).len).wrapping_sub(1
                                                                                                                                                                                                                    as
                                                                                                                                                                                                                    libc::c_int
                                                                                                                                                                                                                    as
                                                                                                                                                                                                                    libc::c_uint)
                                                                                                                               >>
                                                                                                                               3
                                                                                                                                   as
                                                                                                                                   libc::c_int).wrapping_sub((i
                                                                                                                                                                  >>
                                                                                                                                                                  3
                                                                                                                                                                      as
                                                                                                                                                                      libc::c_int)
                                                                                                                                                                 as
                                                                                                                                                                 libc::c_uint).wrapping_add(1
                                                                                                                                                                                                as
                                                                                                                                                                                                libc::c_int
                                                                                                                                                                                                as
                                                                                                                                                                                                libc::c_uint)
                                                                                                                              as
                                                                                                                              libc::c_ulong).is_null()
                                                                                                               {
                                                                                                                (*afl).stage_max
                                                                                                                    -=
                                                                                                                    1
                                                                                                            } else {
                                                                                                                last_len
                                                                                                                    =
                                                                                                                    (*(*afl).extras.offset(j
                                                                                                                                               as
                                                                                                                                               isize)).len;
                                                                                                                memcpy(out_buf.offset(i
                                                                                                                                          as
                                                                                                                                          isize)
                                                                                                                           as
                                                                                                                           *mut libc::c_void,
                                                                                                                       (*(*afl).extras.offset(j
                                                                                                                                                  as
                                                                                                                                                  isize)).data
                                                                                                                           as
                                                                                                                           *const libc::c_void,
                                                                                                                       last_len
                                                                                                                           as
                                                                                                                           libc::c_ulong);
                                                                                                                if common_fuzz_stuff(afl,
                                                                                                                                     out_buf,
                                                                                                                                     len
                                                                                                                                         as
                                                                                                                                         u32_0)
                                                                                                                       !=
                                                                                                                       0
                                                                                                                   {
                                                                                                                    current_block
                                                                                                                        =
                                                                                                                        7888631765806679901;
                                                                                                                    break
                                                                                                                        's_2351
                                                                                                                        ;
                                                                                                                }
                                                                                                                (*afl).stage_cur
                                                                                                                    +=
                                                                                                                    1
                                                                                                            }
                                                                                                            j
                                                                                                                +=
                                                                                                                1
                                                                                                        }
                                                                                                        /* Restore all the clobbered memory. */
                                                                                                        memcpy(out_buf.offset(i
                                                                                                                                  as
                                                                                                                                  isize)
                                                                                                                   as
                                                                                                                   *mut libc::c_void,
                                                                                                               in_buf.offset(i
                                                                                                                                 as
                                                                                                                                 isize)
                                                                                                                   as
                                                                                                                   *const libc::c_void,
                                                                                                               last_len
                                                                                                                   as
                                                                                                                   libc::c_ulong);
                                                                                                        i
                                                                                                            +=
                                                                                                            1
                                                                                                    }
                                                                                                match current_block
                                                                                                    {
                                                                                                    7888631765806679901
                                                                                                    =>
                                                                                                    {
                                                                                                    }
                                                                                                    _
                                                                                                    =>
                                                                                                    {
                                                                                                        new_hit_cnt
                                                                                                            =
                                                                                                            ((*afl).queued_paths
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                        (*afl).stage_finds[STAGE_EXTRAS_UO
                                                                                                                               as
                                                                                                                               libc::c_int
                                                                                                                               as
                                                                                                                               usize]
                                                                                                            =
                                                                                                            ((*afl).stage_finds[STAGE_EXTRAS_UO
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                    as
                                                                                                                                    usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        (*afl).stage_cycles[STAGE_EXTRAS_UO
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                usize]
                                                                                                            =
                                                                                                            ((*afl).stage_cycles[STAGE_EXTRAS_UO
                                                                                                                                     as
                                                                                                                                     libc::c_int
                                                                                                                                     as
                                                                                                                                     usize]
                                                                                                                 as
                                                                                                                 libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                     as
                                                                                                                                                     libc::c_ulonglong)
                                                                                                                as
                                                                                                                u64_0
                                                                                                                as
                                                                                                                u64_0;
                                                                                                        /* Insertion of user-supplied extras. */
                                                                                                        (*afl).stage_name
                                                                                                            =
                                                                                                            b"user extras (insert)\x00"
                                                                                                                as
                                                                                                                *const u8
                                                                                                                as
                                                                                                                *const libc::c_char
                                                                                                                as
                                                                                                                *mut u8_0; /* for i = 0; i <= len */
                                                                                                        (*afl).stage_short
                                                                                                            =
                                                                                                            b"ext_UI\x00"
                                                                                                                as
                                                                                                                *const u8
                                                                                                                as
                                                                                                                *const libc::c_char
                                                                                                                as
                                                                                                                *mut u8_0;
                                                                                                        (*afl).stage_cur
                                                                                                            =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int;
                                                                                                        (*afl).stage_max
                                                                                                            =
                                                                                                            (*afl).extras_cnt.wrapping_mul((len
                                                                                                                                                +
                                                                                                                                                1
                                                                                                                                                    as
                                                                                                                                                    libc::c_int)
                                                                                                                                               as
                                                                                                                                               libc::c_uint)
                                                                                                                as
                                                                                                                s32;
                                                                                                        orig_hit_cnt
                                                                                                            =
                                                                                                            new_hit_cnt;
                                                                                                        ex_tmp
                                                                                                            =
                                                                                                            ck_maybe_grow(&mut (*afl).ex_buf
                                                                                                                              as
                                                                                                                              *mut *mut u8_0
                                                                                                                              as
                                                                                                                              *mut *mut libc::c_void,
                                                                                                                          &mut (*afl).ex_size,
                                                                                                                          (len
                                                                                                                               +
                                                                                                                               128
                                                                                                                                   as
                                                                                                                                   libc::c_int)
                                                                                                                              as
                                                                                                                              size_t)
                                                                                                                as
                                                                                                                *mut u8_0;
                                                                                                        i
                                                                                                            =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int;
                                                                                                        's_2457:
                                                                                                            loop 
                                                                                                                 {
                                                                                                                if !(i
                                                                                                                         <=
                                                                                                                         len)
                                                                                                                   {
                                                                                                                    current_block
                                                                                                                        =
                                                                                                                        17336923773064764666;
                                                                                                                    break
                                                                                                                        ;
                                                                                                                }
                                                                                                                (*afl).stage_cur_byte
                                                                                                                    =
                                                                                                                    i;
                                                                                                                j
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                while (j
                                                                                                                           as
                                                                                                                           libc::c_uint)
                                                                                                                          <
                                                                                                                          (*afl).extras_cnt
                                                                                                                      {
                                                                                                                    if (len
                                                                                                                            as
                                                                                                                            libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                  as
                                                                                                                                                                                  isize)).len)
                                                                                                                           >
                                                                                                                           (1
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                *
                                                                                                                                1024
                                                                                                                                    as
                                                                                                                                    libc::c_int
                                                                                                                                *
                                                                                                                                1024
                                                                                                                                    as
                                                                                                                                    libc::c_int)
                                                                                                                               as
                                                                                                                               libc::c_uint
                                                                                                                       {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        /* Insert token */
                                                                                                                        memcpy(ex_tmp.offset(i
                                                                                                                                                 as
                                                                                                                                                 isize)
                                                                                                                                   as
                                                                                                                                   *mut libc::c_void,
                                                                                                                               (*(*afl).extras.offset(j
                                                                                                                                                          as
                                                                                                                                                          isize)).data
                                                                                                                                   as
                                                                                                                                   *const libc::c_void,
                                                                                                                               (*(*afl).extras.offset(j
                                                                                                                                                          as
                                                                                                                                                          isize)).len
                                                                                                                                   as
                                                                                                                                   libc::c_ulong);
                                                                                                                        /* Copy tail */
                                                                                                                        memcpy(ex_tmp.offset(i
                                                                                                                                                 as
                                                                                                                                                 isize).offset((*(*afl).extras.offset(j
                                                                                                                                                                                          as
                                                                                                                                                                                          isize)).len
                                                                                                                                                                   as
                                                                                                                                                                   isize)
                                                                                                                                   as
                                                                                                                                   *mut libc::c_void,
                                                                                                                               out_buf.offset(i
                                                                                                                                                  as
                                                                                                                                                  isize)
                                                                                                                                   as
                                                                                                                                   *const libc::c_void,
                                                                                                                               (len
                                                                                                                                    -
                                                                                                                                    i)
                                                                                                                                   as
                                                                                                                                   libc::c_ulong);
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             ex_tmp,
                                                                                                                                             (len
                                                                                                                                                  as
                                                                                                                                                  libc::c_uint).wrapping_add((*(*afl).extras.offset(j
                                                                                                                                                                                                        as
                                                                                                                                                                                                        isize)).len))
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                7888631765806679901;
                                                                                                                            break
                                                                                                                                's_2457
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    j
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                                /* Copy head */
                                                                                                                *ex_tmp.offset(i
                                                                                                                                   as
                                                                                                                                   isize)
                                                                                                                    =
                                                                                                                    *out_buf.offset(i
                                                                                                                                        as
                                                                                                                                        isize); /* for i = 0; i < len */
                                                                                                                i
                                                                                                                    +=
                                                                                                                    1
                                                                                                            }
                                                                                                        match current_block
                                                                                                            {
                                                                                                            7888631765806679901
                                                                                                            =>
                                                                                                            {
                                                                                                            }
                                                                                                            _
                                                                                                            =>
                                                                                                            {
                                                                                                                new_hit_cnt
                                                                                                                    =
                                                                                                                    ((*afl).queued_paths
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                (*afl).stage_finds[STAGE_EXTRAS_UI
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       usize]
                                                                                                                    =
                                                                                                                    ((*afl).stage_finds[STAGE_EXTRAS_UI
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            usize]
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                        as
                                                                                                                        u64_0
                                                                                                                        as
                                                                                                                        u64_0;
                                                                                                                (*afl).stage_cycles[STAGE_EXTRAS_UI
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        usize]
                                                                                                                    =
                                                                                                                    ((*afl).stage_cycles[STAGE_EXTRAS_UI
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                             as
                                                                                                                                             usize]
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                             as
                                                                                                                                                             libc::c_ulonglong)
                                                                                                                        as
                                                                                                                        u64_0
                                                                                                                        as
                                                                                                                        u64_0;
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    11304045863834688353;
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            match current_block
                                                                                                {
                                                                                                7888631765806679901
                                                                                                =>
                                                                                                {
                                                                                                }
                                                                                                _
                                                                                                =>
                                                                                                {
                                                                                                    if (*afl).a_extras_cnt
                                                                                                           ==
                                                                                                           0
                                                                                                       {
                                                                                                        current_block
                                                                                                            =
                                                                                                            8015153235928578088;
                                                                                                    } else {
                                                                                                        (*afl).stage_name
                                                                                                            =
                                                                                                            b"auto extras (over)\x00"
                                                                                                                as
                                                                                                                *const u8
                                                                                                                as
                                                                                                                *const libc::c_char
                                                                                                                as
                                                                                                                *mut u8_0;
                                                                                                        (*afl).stage_short
                                                                                                            =
                                                                                                            b"ext_AO\x00"
                                                                                                                as
                                                                                                                *const u8
                                                                                                                as
                                                                                                                *const libc::c_char
                                                                                                                as
                                                                                                                *mut u8_0;
                                                                                                        (*afl).stage_cur
                                                                                                            =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int;
                                                                                                        (*afl).stage_max
                                                                                                            =
                                                                                                            ({
                                                                                                                 let mut _a:
                                                                                                                         u32_0 =
                                                                                                                     (*afl).a_extras_cnt;
                                                                                                                 let mut _b:
                                                                                                                         libc::c_int =
                                                                                                                     128
                                                                                                                         as
                                                                                                                         libc::c_int;
                                                                                                                 (if _a
                                                                                                                         <
                                                                                                                         _b
                                                                                                                             as
                                                                                                                             libc::c_uint
                                                                                                                     {
                                                                                                                      _a
                                                                                                                  } else {
                                                                                                                      _b
                                                                                                                          as
                                                                                                                          libc::c_uint
                                                                                                                  })
                                                                                                             }).wrapping_mul(len
                                                                                                                                 as
                                                                                                                                 libc::c_uint)
                                                                                                                as
                                                                                                                s32;
                                                                                                        (*afl).stage_val_type
                                                                                                            =
                                                                                                            STAGE_VAL_NONE
                                                                                                                as
                                                                                                                libc::c_int
                                                                                                                as
                                                                                                                u8_0;
                                                                                                        orig_hit_cnt
                                                                                                            =
                                                                                                            new_hit_cnt;
                                                                                                        i
                                                                                                            =
                                                                                                            0
                                                                                                                as
                                                                                                                libc::c_int;
                                                                                                        's_2571:
                                                                                                            loop 
                                                                                                                 {
                                                                                                                if !(i
                                                                                                                         <
                                                                                                                         len)
                                                                                                                   {
                                                                                                                    current_block
                                                                                                                        =
                                                                                                                        15736258377632409300;
                                                                                                                    break
                                                                                                                        ;
                                                                                                                }
                                                                                                                let mut last_len_0:
                                                                                                                        u32_0 =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int
                                                                                                                        as
                                                                                                                        u32_0;
                                                                                                                (*afl).stage_cur_byte
                                                                                                                    =
                                                                                                                    i;
                                                                                                                j
                                                                                                                    =
                                                                                                                    0
                                                                                                                        as
                                                                                                                        libc::c_int;
                                                                                                                while (j
                                                                                                                           as
                                                                                                                           libc::c_uint)
                                                                                                                          <
                                                                                                                          ({
                                                                                                                               let mut _a:
                                                                                                                                       u32_0 =
                                                                                                                                   (*afl).a_extras_cnt;
                                                                                                                               let mut _b:
                                                                                                                                       libc::c_int =
                                                                                                                                   128
                                                                                                                                       as
                                                                                                                                       libc::c_int;
                                                                                                                               (if _a
                                                                                                                                       <
                                                                                                                                       _b
                                                                                                                                           as
                                                                                                                                           libc::c_uint
                                                                                                                                   {
                                                                                                                                    _a
                                                                                                                                } else {
                                                                                                                                    _b
                                                                                                                                        as
                                                                                                                                        libc::c_uint
                                                                                                                                })
                                                                                                                           })
                                                                                                                      {
                                                                                                                    /* See the comment in the earlier code; extras are sorted by size. */
                                                                                                                    if (*(*afl).a_extras.offset(j
                                                                                                                                                    as
                                                                                                                                                    isize)).len
                                                                                                                           >
                                                                                                                           (len
                                                                                                                                -
                                                                                                                                i)
                                                                                                                               as
                                                                                                                               libc::c_uint
                                                                                                                           ||
                                                                                                                           memcmp((*(*afl).a_extras.offset(j
                                                                                                                                                               as
                                                                                                                                                               isize)).data
                                                                                                                                      as
                                                                                                                                      *const libc::c_void,
                                                                                                                                  out_buf.offset(i
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *const libc::c_void,
                                                                                                                                  (*(*afl).a_extras.offset(j
                                                                                                                                                               as
                                                                                                                                                               isize)).len
                                                                                                                                      as
                                                                                                                                      libc::c_ulong)
                                                                                                                               ==
                                                                                                                               0
                                                                                                                           ||
                                                                                                                           memchr(eff_map.offset((i
                                                                                                                                                      >>
                                                                                                                                                      3
                                                                                                                                                          as
                                                                                                                                                          libc::c_int)
                                                                                                                                                     as
                                                                                                                                                     isize)
                                                                                                                                      as
                                                                                                                                      *const libc::c_void,
                                                                                                                                  1
                                                                                                                                      as
                                                                                                                                      libc::c_int,
                                                                                                                                  ((i
                                                                                                                                        as
                                                                                                                                        libc::c_uint).wrapping_add((*(*afl).a_extras.offset(j
                                                                                                                                                                                                as
                                                                                                                                                                                                isize)).len).wrapping_sub(1
                                                                                                                                                                                                                              as
                                                                                                                                                                                                                              libc::c_int
                                                                                                                                                                                                                              as
                                                                                                                                                                                                                              libc::c_uint)
                                                                                                                                       >>
                                                                                                                                       3
                                                                                                                                           as
                                                                                                                                           libc::c_int).wrapping_sub((i
                                                                                                                                                                          >>
                                                                                                                                                                          3
                                                                                                                                                                              as
                                                                                                                                                                              libc::c_int)
                                                                                                                                                                         as
                                                                                                                                                                         libc::c_uint).wrapping_add(1
                                                                                                                                                                                                        as
                                                                                                                                                                                                        libc::c_int
                                                                                                                                                                                                        as
                                                                                                                                                                                                        libc::c_uint)
                                                                                                                                      as
                                                                                                                                      libc::c_ulong).is_null()
                                                                                                                       {
                                                                                                                        (*afl).stage_max
                                                                                                                            -=
                                                                                                                            1
                                                                                                                    } else {
                                                                                                                        last_len_0
                                                                                                                            =
                                                                                                                            (*(*afl).a_extras.offset(j
                                                                                                                                                         as
                                                                                                                                                         isize)).len;
                                                                                                                        memcpy(out_buf.offset(i
                                                                                                                                                  as
                                                                                                                                                  isize)
                                                                                                                                   as
                                                                                                                                   *mut libc::c_void,
                                                                                                                               (*(*afl).a_extras.offset(j
                                                                                                                                                            as
                                                                                                                                                            isize)).data
                                                                                                                                   as
                                                                                                                                   *const libc::c_void,
                                                                                                                               last_len_0
                                                                                                                                   as
                                                                                                                                   libc::c_ulong);
                                                                                                                        if common_fuzz_stuff(afl,
                                                                                                                                             out_buf,
                                                                                                                                             len
                                                                                                                                                 as
                                                                                                                                                 u32_0)
                                                                                                                               !=
                                                                                                                               0
                                                                                                                           {
                                                                                                                            current_block
                                                                                                                                =
                                                                                                                                7888631765806679901;
                                                                                                                            break
                                                                                                                                's_2571
                                                                                                                                ;
                                                                                                                        }
                                                                                                                        (*afl).stage_cur
                                                                                                                            +=
                                                                                                                            1
                                                                                                                    }
                                                                                                                    j
                                                                                                                        +=
                                                                                                                        1
                                                                                                                }
                                                                                                                /* Restore all the clobbered memory. */
                                                                                                                memcpy(out_buf.offset(i
                                                                                                                                          as
                                                                                                                                          isize)
                                                                                                                           as
                                                                                                                           *mut libc::c_void,
                                                                                                                       in_buf.offset(i
                                                                                                                                         as
                                                                                                                                         isize)
                                                                                                                           as
                                                                                                                           *const libc::c_void,
                                                                                                                       last_len_0
                                                                                                                           as
                                                                                                                           libc::c_ulong);
                                                                                                                i
                                                                                                                    +=
                                                                                                                    1
                                                                                                            }
                                                                                                        match current_block
                                                                                                            {
                                                                                                            7888631765806679901
                                                                                                            =>
                                                                                                            {
                                                                                                            }
                                                                                                            _
                                                                                                            =>
                                                                                                            {
                                                                                                                new_hit_cnt
                                                                                                                    =
                                                                                                                    ((*afl).queued_paths
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                                                                                                (*afl).stage_finds[STAGE_EXTRAS_AO
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       usize]
                                                                                                                    =
                                                                                                                    ((*afl).stage_finds[STAGE_EXTRAS_AO
                                                                                                                                            as
                                                                                                                                            libc::c_int
                                                                                                                                            as
                                                                                                                                            usize]
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                                                                                        as
                                                                                                                        u64_0
                                                                                                                        as
                                                                                                                        u64_0;
                                                                                                                (*afl).stage_cycles[STAGE_EXTRAS_AO
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        usize]
                                                                                                                    =
                                                                                                                    ((*afl).stage_cycles[STAGE_EXTRAS_AO
                                                                                                                                             as
                                                                                                                                             libc::c_int
                                                                                                                                             as
                                                                                                                                             usize]
                                                                                                                         as
                                                                                                                         libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                                                                                             as
                                                                                                                                                             libc::c_ulonglong)
                                                                                                                        as
                                                                                                                        u64_0
                                                                                                                        as
                                                                                                                        u64_0;
                                                                                                                current_block
                                                                                                                    =
                                                                                                                    8015153235928578088;
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    match current_block
                                                                                                        {
                                                                                                        7888631765806679901
                                                                                                        =>
                                                                                                        {
                                                                                                        }
                                                                                                        _
                                                                                                        =>
                                                                                                        {
                                                                                                            /* If we made this to here without jumping to havoc_stage or abandon_entry,
     we're properly done with deterministic steps and can mark it as such
     in the .state/ directory. */
                                                                                                            if (*(*afl).queue_cur).passed_det
                                                                                                                   ==
                                                                                                                   0
                                                                                                               {
                                                                                                                mark_as_det_done(afl,
                                                                                                                                 (*afl).queue_cur);
                                                                                                            }
                                                                                                            current_block
                                                                                                                =
                                                                                                                17016901831339117692;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    match current_block {
                        7888631765806679901 => { }
                        _ =>
                        /* ***************
   * RANDOM HAVOC *
   ****************/
                        {
                            (*afl).stage_cur_byte = -(1 as libc::c_int);
                            /* The havoc stage mutation code is also invoked when splicing files; if the
     splice_cycle variable is set, generate different descriptions and such. */
                            if splice_cycle == 0 {
                                (*afl).stage_name =
                                    MOpt_globals.havoc_stagename as *mut u8_0;
                                (*afl).stage_short =
                                    MOpt_globals.havoc_stagenameshort as
                                        *mut u8_0;
                                (*afl).stage_max =
                                    ((if doing_det as libc::c_int != 0 {
                                          1024 as libc::c_int
                                      } else { 256 as libc::c_int }) as
                                         libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                libc::c_uint)
                                        as s32
                            } else {
                                perf_score = orig_perf;
                                snprintf((*afl).stage_name_buf.as_mut_ptr() as
                                             *mut libc::c_char,
                                         64 as libc::c_int as libc::c_ulong,
                                         MOpt_globals.splice_stageformat,
                                         splice_cycle);
                                (*afl).stage_name =
                                    (*afl).stage_name_buf.as_mut_ptr();
                                (*afl).stage_short =
                                    MOpt_globals.splice_stagenameshort as
                                        *mut u8_0;
                                (*afl).stage_max =
                                    (32 as libc::c_int as
                                         libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                as
                                                                                                                                libc::c_int
                                                                                                                                as
                                                                                                                                libc::c_uint)
                                        as s32
                            }
                            temp_len_puppet = 0;
                            // for (; afl->swarm_now < swarm_num; ++afl->swarm_now)
                            if (*afl).key_puppet == 1 as libc::c_int {
                                if (*afl).orig_hit_cnt_puppet ==
                                       0 as libc::c_int as libc::c_ulonglong {
                                    (*afl).orig_hit_cnt_puppet =
                                        ((*afl).queued_paths as
                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes); /* block */
                                    (*afl).last_limit_time_start =
                                        get_cur_time(); /* if afl->key_puppet == 1 */
                                    (*afl).SPLICE_CYCLES_puppet =
                                        rand_below(afl,
                                                   (25 as libc::c_int -
                                                        5 as libc::c_int +
                                                        1 as libc::c_int) as
                                                       u32_0).wrapping_add(5
                                                                               as
                                                                               libc::c_int
                                                                               as
                                                                               libc::c_uint)
                                            as s32
                                }
                            }
                            'c_20510:
                                loop  {
                                    (*afl).stage_cur_byte =
                                        -(1 as libc::c_int);
                                    /* if (unlikely(*MOpt_globals.pTime > MOpt_globals.period)) */
                                    /* The havoc stage mutation code is also invoked when splicing files; if
         the splice_cycle variable is set, generate different descriptions and
         such. */
                                    if splice_cycle == 0 {
                                        (*afl).stage_name =
                                            MOpt_globals.havoc_stagename as
                                                *mut u8_0; /* for (afl->stage_cur = 0; afl->stage_cur < afl->stage_max;

           ++afl->stage_cur) { */
                                        (*afl).stage_short =
                                            MOpt_globals.havoc_stagenameshort
                                                as *mut u8_0;
                                        (*afl).stage_max =
                                            ((if doing_det as libc::c_int != 0
                                                 {
                                                  1024 as libc::c_int
                                              } else { 256 as libc::c_int })
                                                 as
                                                 libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint)
                                                as s32
                                    } else {
                                        perf_score = orig_perf;
                                        snprintf((*afl).stage_name_buf.as_mut_ptr()
                                                     as *mut libc::c_char,
                                                 64 as libc::c_int as
                                                     libc::c_ulong,
                                                 MOpt_globals.splice_stageformat,
                                                 splice_cycle);
                                        (*afl).stage_name =
                                            (*afl).stage_name_buf.as_mut_ptr();
                                        (*afl).stage_short =
                                            MOpt_globals.splice_stagenameshort
                                                as *mut u8_0;
                                        (*afl).stage_max =
                                            (32 as libc::c_int as
                                                 libc::c_uint).wrapping_mul(perf_score).wrapping_div((*afl).havoc_div).wrapping_div(100
                                                                                                                                        as
                                                                                                                                        libc::c_int
                                                                                                                                        as
                                                                                                                                        libc::c_uint)
                                                as s32
                                    }
                                    if (*afl).stage_max < 16 as libc::c_int {
                                        (*afl).stage_max = 16 as libc::c_int
                                    }
                                    temp_len = len;
                                    orig_hit_cnt =
                                        ((*afl).queued_paths as
                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                    havoc_queued =
                                        (*afl).queued_paths as u64_0;
                                    (*afl).stage_cur = 0 as libc::c_int;
                                    while (*afl).stage_cur < (*afl).stage_max
                                          {
                                        let mut use_stacking: u32_0 =
                                            ((1 as libc::c_int) <<
                                                 (1 as libc::c_int as
                                                      libc::c_uint).wrapping_add(rand_below(afl,
                                                                                            7
                                                                                                as
                                                                                                libc::c_int
                                                                                                as
                                                                                                u32_0)))
                                                as u32_0;
                                        (*afl).stage_cur_val =
                                            use_stacking as s32;
                                        i = 0 as libc::c_int;
                                        while i < 16 as libc::c_int {
                                            *MOpt_globals.cycles_v3.offset(i
                                                                               as
                                                                               isize)
                                                =
                                                *MOpt_globals.cycles_v2.offset(i
                                                                                   as
                                                                                   isize);
                                            i += 1
                                        }
                                        /* if */
                                        i =
                                            0 as
                                                libc::c_int; /* for i=0; i < use_stacking */
                                        while (i as libc::c_uint) <
                                                  use_stacking {
                                            match select_algorithm(afl) {
                                                0 => {
                                                    /* Flip a single bit somewhere. Spooky! */
                                                    let mut _arf_13:
                                                            *mut u8_0 =
                                                        out_buf;
                                                    let mut _bf_13: u32_0 =
                                                        rand_below(afl,
                                                                   (temp_len
                                                                        <<
                                                                        3 as
                                                                            libc::c_int)
                                                                       as
                                                                       u32_0);
                                                    let ref mut fresh56 =
                                                        *_arf_13.offset((_bf_13
                                                                             >>
                                                                             3
                                                                                 as
                                                                                 libc::c_int)
                                                                            as
                                                                            isize);
                                                    *fresh56 =
                                                        (*fresh56 as
                                                             libc::c_int ^
                                                             128 as
                                                                 libc::c_int
                                                                 >>
                                                                 (_bf_13 &
                                                                      7 as
                                                                          libc::c_int
                                                                          as
                                                                          libc::c_uint))
                                                            as u8_0;
                                                    let ref mut fresh57 =
                                                        *MOpt_globals.cycles_v2.offset(STAGE_FLIP1
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           isize);
                                                    *fresh57 =
                                                        (*fresh57 as
                                                             libc::c_ulonglong).wrapping_add(1
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_ulonglong)
                                                            as u64_0 as u64_0
                                                    /* case 15 */
                                                }
                                                1 => {
                                                    if !(temp_len <
                                                             2 as libc::c_int)
                                                       {
                                                        temp_len_puppet =
                                                            rand_below(afl,
                                                                       ((temp_len
                                                                             <<
                                                                             3
                                                                                 as
                                                                                 libc::c_int)
                                                                            -
                                                                            1
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           u32_0)
                                                                as s32;
                                                        let mut _arf_14:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_14:
                                                                u32_0 =
                                                            temp_len_puppet as
                                                                u32_0;
                                                        let ref mut fresh58 =
                                                            *_arf_14.offset((_bf_14
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh58 =
                                                            (*fresh58 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_14 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let mut _arf_15:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_15:
                                                                u32_0 =
                                                            (temp_len_puppet +
                                                                 1 as
                                                                     libc::c_int)
                                                                as u32_0;
                                                        let ref mut fresh59 =
                                                            *_arf_15.offset((_bf_15
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh59 =
                                                            (*fresh59 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_15 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let ref mut fresh60 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_FLIP2
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh60 =
                                                            (*fresh60 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                2 => {
                                                    if !(temp_len <
                                                             2 as libc::c_int)
                                                       {
                                                        temp_len_puppet =
                                                            rand_below(afl,
                                                                       ((temp_len
                                                                             <<
                                                                             3
                                                                                 as
                                                                                 libc::c_int)
                                                                            -
                                                                            3
                                                                                as
                                                                                libc::c_int)
                                                                           as
                                                                           u32_0)
                                                                as s32;
                                                        let mut _arf_16:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_16:
                                                                u32_0 =
                                                            temp_len_puppet as
                                                                u32_0;
                                                        let ref mut fresh61 =
                                                            *_arf_16.offset((_bf_16
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh61 =
                                                            (*fresh61 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_16 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let mut _arf_17:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_17:
                                                                u32_0 =
                                                            (temp_len_puppet +
                                                                 1 as
                                                                     libc::c_int)
                                                                as u32_0;
                                                        let ref mut fresh62 =
                                                            *_arf_17.offset((_bf_17
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh62 =
                                                            (*fresh62 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_17 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let mut _arf_18:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_18:
                                                                u32_0 =
                                                            (temp_len_puppet +
                                                                 2 as
                                                                     libc::c_int)
                                                                as u32_0;
                                                        let ref mut fresh63 =
                                                            *_arf_18.offset((_bf_18
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh63 =
                                                            (*fresh63 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_18 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let mut _arf_19:
                                                                *mut u8_0 =
                                                            out_buf;
                                                        let mut _bf_19:
                                                                u32_0 =
                                                            (temp_len_puppet +
                                                                 3 as
                                                                     libc::c_int)
                                                                as u32_0;
                                                        let ref mut fresh64 =
                                                            *_arf_19.offset((_bf_19
                                                                                 >>
                                                                                 3
                                                                                     as
                                                                                     libc::c_int)
                                                                                as
                                                                                isize);
                                                        *fresh64 =
                                                            (*fresh64 as
                                                                 libc::c_int ^
                                                                 128 as
                                                                     libc::c_int
                                                                     >>
                                                                     (_bf_19 &
                                                                          7 as
                                                                              libc::c_int
                                                                              as
                                                                              libc::c_uint))
                                                                as u8_0;
                                                        let ref mut fresh65 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_FLIP4
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh65 =
                                                            (*fresh65 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                3 => {
                                                    if !(temp_len <
                                                             4 as libc::c_int)
                                                       {
                                                        let ref mut fresh66 =
                                                            *out_buf.offset(rand_below(afl,
                                                                                       temp_len
                                                                                           as
                                                                                           u32_0)
                                                                                as
                                                                                isize);
                                                        *fresh66 =
                                                            (*fresh66 as
                                                                 libc::c_int ^
                                                                 0xff as
                                                                     libc::c_int)
                                                                as u8_0;
                                                        let ref mut fresh67 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_FLIP8
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh67 =
                                                            (*fresh67 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                4 => {
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        let ref mut fresh68 =
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             1
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u16_0);
                                                        *fresh68 =
                                                            (*fresh68 as
                                                                 libc::c_int ^
                                                                 0xffff as
                                                                     libc::c_int)
                                                                as u16_0;
                                                        let ref mut fresh69 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_FLIP16
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh69 =
                                                            (*fresh69 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                5 => {
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        let ref mut fresh70 =
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             3
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u32_0);
                                                        *fresh70 ^=
                                                            0xffffffff as
                                                                libc::c_uint;
                                                        let ref mut fresh71 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_FLIP32
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh71 =
                                                            (*fresh71 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                6 => {
                                                    let ref mut fresh72 =
                                                        *out_buf.offset(rand_below(afl,
                                                                                   temp_len
                                                                                       as
                                                                                       u32_0)
                                                                            as
                                                                            isize);
                                                    *fresh72 =
                                                        (*fresh72 as
                                                             libc::c_uint).wrapping_sub((1
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                   35
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       u32_0)))
                                                            as u8_0 as u8_0;
                                                    let ref mut fresh73 =
                                                        *out_buf.offset(rand_below(afl,
                                                                                   temp_len
                                                                                       as
                                                                                       u32_0)
                                                                            as
                                                                            isize);
                                                    *fresh73 =
                                                        (*fresh73 as
                                                             libc::c_uint).wrapping_add((1
                                                                                             as
                                                                                             libc::c_int
                                                                                             as
                                                                                             libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                   35
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       u32_0)))
                                                            as u8_0 as u8_0;
                                                    let ref mut fresh74 =
                                                        *MOpt_globals.cycles_v2.offset(STAGE_ARITH8
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           isize);
                                                    *fresh74 =
                                                        (*fresh74 as
                                                             libc::c_ulonglong).wrapping_add(1
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_ulonglong)
                                                            as u64_0 as u64_0
                                                }
                                                7 => {
                                                    /* Randomly subtract from word, random endian. */
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            let mut pos:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                1
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let ref mut fresh75 =
                                                                *(out_buf.offset(pos
                                                                                     as
                                                                                     isize)
                                                                      as
                                                                      *mut u16_0);
                                                            *fresh75 =
                                                                (*fresh75 as
                                                                     libc::c_uint).wrapping_sub((1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                           35
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               as
                                                                                                                                               u32_0)))
                                                                    as u16_0
                                                                    as u16_0
                                                        } else {
                                                            let mut pos_0:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                1
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let mut num:
                                                                    u16_0 =
                                                                (1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                           35
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               as
                                                                                                               u32_0))
                                                                    as u16_0;
                                                            *(out_buf.offset(pos_0
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u16_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u16_0 =
                                                                         (({
                                                                               let mut _ret_0:
                                                                                       u16_0 =
                                                                                   *(out_buf.offset(pos_0
                                                                                                        as
                                                                                                        isize)
                                                                                         as
                                                                                         *mut u16_0);
                                                                               ((_ret_0
                                                                                     as
                                                                                     libc::c_int)
                                                                                    <<
                                                                                    8
                                                                                        as
                                                                                        libc::c_int
                                                                                    |
                                                                                    _ret_0
                                                                                        as
                                                                                        libc::c_int
                                                                                        >>
                                                                                        8
                                                                                            as
                                                                                            libc::c_int)
                                                                                   as
                                                                                   u16_0
                                                                           })
                                                                              as
                                                                              libc::c_int
                                                                              -
                                                                              num
                                                                                  as
                                                                                  libc::c_int)
                                                                             as
                                                                             u16_0;
                                                                     ((_ret as
                                                                           libc::c_int)
                                                                          <<
                                                                          8 as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              as
                                                                              libc::c_int
                                                                              >>
                                                                              8
                                                                                  as
                                                                                  libc::c_int)
                                                                         as
                                                                         u16_0
                                                                 })
                                                        }
                                                        /* Randomly add to word, random endian. */
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            let mut pos_1:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                1
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let ref mut fresh76 =
                                                                *(out_buf.offset(pos_1
                                                                                     as
                                                                                     isize)
                                                                      as
                                                                      *mut u16_0);
                                                            *fresh76 =
                                                                (*fresh76 as
                                                                     libc::c_uint).wrapping_add((1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                           35
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               as
                                                                                                                                               u32_0)))
                                                                    as u16_0
                                                                    as u16_0
                                                        } else {
                                                            let mut pos_2:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                1
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let mut num_0:
                                                                    u16_0 =
                                                                (1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                           35
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               as
                                                                                                               u32_0))
                                                                    as u16_0;
                                                            *(out_buf.offset(pos_2
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u16_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u16_0 =
                                                                         (({
                                                                               let mut _ret_0:
                                                                                       u16_0 =
                                                                                   *(out_buf.offset(pos_2
                                                                                                        as
                                                                                                        isize)
                                                                                         as
                                                                                         *mut u16_0);
                                                                               ((_ret_0
                                                                                     as
                                                                                     libc::c_int)
                                                                                    <<
                                                                                    8
                                                                                        as
                                                                                        libc::c_int
                                                                                    |
                                                                                    _ret_0
                                                                                        as
                                                                                        libc::c_int
                                                                                        >>
                                                                                        8
                                                                                            as
                                                                                            libc::c_int)
                                                                                   as
                                                                                   u16_0
                                                                           })
                                                                              as
                                                                              libc::c_int
                                                                              +
                                                                              num_0
                                                                                  as
                                                                                  libc::c_int)
                                                                             as
                                                                             u16_0;
                                                                     ((_ret as
                                                                           libc::c_int)
                                                                          <<
                                                                          8 as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              as
                                                                              libc::c_int
                                                                              >>
                                                                              8
                                                                                  as
                                                                                  libc::c_int)
                                                                         as
                                                                         u16_0
                                                                 })
                                                        }
                                                        let ref mut fresh77 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_ARITH16
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh77 =
                                                            (*fresh77 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                8 => {
                                                    /* Randomly subtract from dword, random endian. */
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            let mut pos_3:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                3
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let ref mut fresh78 =
                                                                *(out_buf.offset(pos_3
                                                                                     as
                                                                                     isize)
                                                                      as
                                                                      *mut u32_0);
                                                            *fresh78 =
                                                                (*fresh78 as
                                                                     libc::c_uint).wrapping_sub((1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                           35
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               as
                                                                                                                                               u32_0)))
                                                                    as u32_0
                                                                    as u32_0
                                                        } else {
                                                            let mut pos_4:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                3
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let mut num_1:
                                                                    u32_0 =
                                                                (1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                           35
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               as
                                                                                                               u32_0));
                                                            *(out_buf.offset(pos_4
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u32_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u32_0 =
                                                                         ({
                                                                              let mut _ret_0:
                                                                                      u32_0 =
                                                                                  *(out_buf.offset(pos_4
                                                                                                       as
                                                                                                       isize)
                                                                                        as
                                                                                        *mut u32_0);
                                                                              (_ret_0
                                                                                   <<
                                                                                   24
                                                                                       as
                                                                                       libc::c_int
                                                                                   |
                                                                                   _ret_0
                                                                                       >>
                                                                                       24
                                                                                           as
                                                                                           libc::c_int
                                                                                   |
                                                                                   _ret_0
                                                                                       <<
                                                                                       8
                                                                                           as
                                                                                           libc::c_int
                                                                                       &
                                                                                       0xff0000
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           libc::c_uint)
                                                                                  |
                                                                                  _ret_0
                                                                                      >>
                                                                                      8
                                                                                          as
                                                                                          libc::c_int
                                                                                      &
                                                                                      0xff00
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          libc::c_uint
                                                                          }).wrapping_sub(num_1);
                                                                     (_ret <<
                                                                          24
                                                                              as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              >>
                                                                              24
                                                                                  as
                                                                                  libc::c_int
                                                                          |
                                                                          _ret
                                                                              <<
                                                                              8
                                                                                  as
                                                                                  libc::c_int
                                                                              &
                                                                              0xff0000
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint)
                                                                         |
                                                                         _ret
                                                                             >>
                                                                             8
                                                                                 as
                                                                                 libc::c_int
                                                                             &
                                                                             0xff00
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 libc::c_uint
                                                                 })
                                                        }
                                                        /* Randomly add to dword, random endian. */
              // if (temp_len < 4) break;
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            let mut pos_5:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                3
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let ref mut fresh79 =
                                                                *(out_buf.offset(pos_5
                                                                                     as
                                                                                     isize)
                                                                      as
                                                                      *mut u32_0);
                                                            *fresh79 =
                                                                (*fresh79 as
                                                                     libc::c_uint).wrapping_add((1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                                                           35
                                                                                                                                               as
                                                                                                                                               libc::c_int
                                                                                                                                               as
                                                                                                                                               u32_0)))
                                                                    as u32_0
                                                                    as u32_0
                                                        } else {
                                                            let mut pos_6:
                                                                    u32_0 =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                -
                                                                                3
                                                                                    as
                                                                                    libc::c_int)
                                                                               as
                                                                               u32_0);
                                                            let mut num_2:
                                                                    u32_0 =
                                                                (1 as
                                                                     libc::c_int
                                                                     as
                                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                           35
                                                                                                               as
                                                                                                               libc::c_int
                                                                                                               as
                                                                                                               u32_0));
                                                            *(out_buf.offset(pos_6
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u32_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u32_0 =
                                                                         ({
                                                                              let mut _ret_0:
                                                                                      u32_0 =
                                                                                  *(out_buf.offset(pos_6
                                                                                                       as
                                                                                                       isize)
                                                                                        as
                                                                                        *mut u32_0);
                                                                              (_ret_0
                                                                                   <<
                                                                                   24
                                                                                       as
                                                                                       libc::c_int
                                                                                   |
                                                                                   _ret_0
                                                                                       >>
                                                                                       24
                                                                                           as
                                                                                           libc::c_int
                                                                                   |
                                                                                   _ret_0
                                                                                       <<
                                                                                       8
                                                                                           as
                                                                                           libc::c_int
                                                                                       &
                                                                                       0xff0000
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           libc::c_uint)
                                                                                  |
                                                                                  _ret_0
                                                                                      >>
                                                                                      8
                                                                                          as
                                                                                          libc::c_int
                                                                                      &
                                                                                      0xff00
                                                                                          as
                                                                                          libc::c_int
                                                                                          as
                                                                                          libc::c_uint
                                                                          }).wrapping_add(num_2);
                                                                     (_ret <<
                                                                          24
                                                                              as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              >>
                                                                              24
                                                                                  as
                                                                                  libc::c_int
                                                                          |
                                                                          _ret
                                                                              <<
                                                                              8
                                                                                  as
                                                                                  libc::c_int
                                                                              &
                                                                              0xff0000
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint)
                                                                         |
                                                                         _ret
                                                                             >>
                                                                             8
                                                                                 as
                                                                                 libc::c_int
                                                                             &
                                                                             0xff00
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 libc::c_uint
                                                                 })
                                                        }
                                                        let ref mut fresh80 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_ARITH32
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh80 =
                                                            (*fresh80 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                9 => {
                                                    /* Set byte to interesting value. */
                                                    if !(temp_len <
                                                             4 as libc::c_int)
                                                       {
                                                        *out_buf.offset(rand_below(afl,
                                                                                   temp_len
                                                                                       as
                                                                                       u32_0)
                                                                            as
                                                                            isize)
                                                            =
                                                            interesting_8[rand_below(afl,
                                                                                     ::std::mem::size_of::<[s8; 9]>()
                                                                                         as
                                                                                         libc::c_ulong
                                                                                         as
                                                                                         u32_0)
                                                                              as
                                                                              usize]
                                                                as u8_0;
                                                        let ref mut fresh81 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_INTEREST8
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh81 =
                                                            (*fresh81 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                10 => {
                                                    /* Set word to interesting value, randomly choosing endian. */
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             1
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u16_0)
                                                                =
                                                                interesting_16[rand_below(afl,
                                                                                          (::std::mem::size_of::<[s16; 19]>()
                                                                                               as
                                                                                               libc::c_ulong
                                                                                               >>
                                                                                               1
                                                                                                   as
                                                                                                   libc::c_int)
                                                                                              as
                                                                                              u32_0)
                                                                                   as
                                                                                   usize]
                                                                    as u16_0
                                                        } else {
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             1
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u16_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u16_0 =
                                                                         interesting_16[rand_below(afl,
                                                                                                   (::std::mem::size_of::<[s16; 19]>()
                                                                                                        as
                                                                                                        libc::c_ulong
                                                                                                        >>
                                                                                                        1
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                       as
                                                                                                       u32_0)
                                                                                            as
                                                                                            usize]
                                                                             as
                                                                             u16_0;
                                                                     ((_ret as
                                                                           libc::c_int)
                                                                          <<
                                                                          8 as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              as
                                                                              libc::c_int
                                                                              >>
                                                                              8
                                                                                  as
                                                                                  libc::c_int)
                                                                         as
                                                                         u16_0
                                                                 })
                                                        }
                                                        let ref mut fresh82 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_INTEREST16
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh82 =
                                                            (*fresh82 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                11 => {
                                                    /* Set dword to interesting value, randomly choosing endian. */
                                                    if !(temp_len <
                                                             8 as libc::c_int)
                                                       {
                                                        if rand_below(afl,
                                                                      2 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             3
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u32_0)
                                                                =
                                                                interesting_32[rand_below(afl,
                                                                                          (::std::mem::size_of::<[s32; 27]>()
                                                                                               as
                                                                                               libc::c_ulong
                                                                                               >>
                                                                                               2
                                                                                                   as
                                                                                                   libc::c_int)
                                                                                              as
                                                                                              u32_0)
                                                                                   as
                                                                                   usize]
                                                                    as u32_0
                                                        } else {
                                                            *(out_buf.offset(rand_below(afl,
                                                                                        (temp_len
                                                                                             -
                                                                                             3
                                                                                                 as
                                                                                                 libc::c_int)
                                                                                            as
                                                                                            u32_0)
                                                                                 as
                                                                                 isize)
                                                                  as
                                                                  *mut u32_0)
                                                                =
                                                                ({
                                                                     let mut _ret:
                                                                             u32_0 =
                                                                         interesting_32[rand_below(afl,
                                                                                                   (::std::mem::size_of::<[s32; 27]>()
                                                                                                        as
                                                                                                        libc::c_ulong
                                                                                                        >>
                                                                                                        2
                                                                                                            as
                                                                                                            libc::c_int)
                                                                                                       as
                                                                                                       u32_0)
                                                                                            as
                                                                                            usize]
                                                                             as
                                                                             u32_0;
                                                                     (_ret <<
                                                                          24
                                                                              as
                                                                              libc::c_int
                                                                          |
                                                                          _ret
                                                                              >>
                                                                              24
                                                                                  as
                                                                                  libc::c_int
                                                                          |
                                                                          _ret
                                                                              <<
                                                                              8
                                                                                  as
                                                                                  libc::c_int
                                                                              &
                                                                              0xff0000
                                                                                  as
                                                                                  libc::c_int
                                                                                  as
                                                                                  libc::c_uint)
                                                                         |
                                                                         _ret
                                                                             >>
                                                                             8
                                                                                 as
                                                                                 libc::c_int
                                                                             &
                                                                             0xff00
                                                                                 as
                                                                                 libc::c_int
                                                                                 as
                                                                                 libc::c_uint
                                                                 })
                                                        }
                                                        let ref mut fresh83 =
                                                            *MOpt_globals.cycles_v2.offset(STAGE_INTEREST32
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh83 =
                                                            (*fresh83 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                12 => {
                                                    /* Just set a random byte to a random value. Because,
                 why not. We use XOR with 1-255 to eliminate the
                 possibility of a no-op. */
                                                    let ref mut fresh84 =
                                                        *out_buf.offset(rand_below(afl,
                                                                                   temp_len
                                                                                       as
                                                                                       u32_0)
                                                                            as
                                                                            isize);
                                                    *fresh84 =
                                                        (*fresh84 as
                                                             libc::c_uint ^
                                                             (1 as libc::c_int
                                                                  as
                                                                  libc::c_uint).wrapping_add(rand_below(afl,
                                                                                                        255
                                                                                                            as
                                                                                                            libc::c_int
                                                                                                            as
                                                                                                            u32_0)))
                                                            as u8_0;
                                                    let ref mut fresh85 =
                                                        *MOpt_globals.cycles_v2.offset(12
                                                                                           as
                                                                                           libc::c_int
                                                                                           as
                                                                                           isize);
                                                    *fresh85 =
                                                        (*fresh85 as
                                                             libc::c_ulonglong).wrapping_add(1
                                                                                                 as
                                                                                                 libc::c_int
                                                                                                 as
                                                                                                 libc::c_ulonglong)
                                                            as u64_0 as u64_0
                                                }
                                                13 => {
                                                    /* Delete bytes. We're making this a bit more likely
                 than insertion (the next option) in hopes of keeping
                 files reasonably small. */
                                                    let mut del_from: u32_0 =
                                                        0;
                                                    let mut del_len: u32_0 =
                                                        0;
                                                    if !(temp_len <
                                                             2 as libc::c_int)
                                                       {
                                                        /* Don't delete too much. */
                                                        del_len =
                                                            choose_block_len(afl,
                                                                             (temp_len
                                                                                  -
                                                                                  1
                                                                                      as
                                                                                      libc::c_int)
                                                                                 as
                                                                                 u32_0);
                                                        del_from =
                                                            rand_below(afl,
                                                                       (temp_len
                                                                            as
                                                                            libc::c_uint).wrapping_sub(del_len).wrapping_add(1
                                                                                                                                 as
                                                                                                                                 libc::c_int
                                                                                                                                 as
                                                                                                                                 libc::c_uint));
                                                        memmove(out_buf.offset(del_from
                                                                                   as
                                                                                   isize)
                                                                    as
                                                                    *mut libc::c_void,
                                                                out_buf.offset(del_from
                                                                                   as
                                                                                   isize).offset(del_len
                                                                                                     as
                                                                                                     isize)
                                                                    as
                                                                    *const libc::c_void,
                                                                (temp_len as
                                                                     libc::c_uint).wrapping_sub(del_from).wrapping_sub(del_len)
                                                                    as
                                                                    libc::c_ulong);
                                                        temp_len =
                                                            (temp_len as
                                                                 libc::c_uint).wrapping_sub(del_len)
                                                                as s32 as s32;
                                                        let ref mut fresh86 =
                                                            *MOpt_globals.cycles_v2.offset(13
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh86 =
                                                            (*fresh86 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                14 => {
                                                    if (temp_len +
                                                            32768 as
                                                                libc::c_int) <
                                                           1 as libc::c_int *
                                                               1024 as
                                                                   libc::c_int
                                                               *
                                                               1024 as
                                                                   libc::c_int
                                                       {
                                                        /* Clone bytes (75%) or insert a block of constant bytes (25%).
                 */
                                                        let mut actually_clone:
                                                                u8_0 =
                                                            rand_below(afl,
                                                                       4 as
                                                                           libc::c_int
                                                                           as
                                                                           u32_0)
                                                                as u8_0;
                                                        let mut clone_from:
                                                                u32_0 = 0;
                                                        let mut clone_to:
                                                                u32_0 = 0;
                                                        let mut clone_len:
                                                                u32_0 = 0;
                                                        let mut new_buf:
                                                                *mut u8_0 =
                                                            0 as *mut u8_0;
                                                        if actually_clone != 0
                                                           {
                                                            clone_len =
                                                                choose_block_len(afl,
                                                                                 temp_len
                                                                                     as
                                                                                     u32_0);
                                                            clone_from =
                                                                rand_below(afl,
                                                                           (temp_len
                                                                                as
                                                                                libc::c_uint).wrapping_sub(clone_len).wrapping_add(1
                                                                                                                                       as
                                                                                                                                       libc::c_int
                                                                                                                                       as
                                                                                                                                       libc::c_uint))
                                                        } else {
                                                            clone_len =
                                                                choose_block_len(afl,
                                                                                 32768
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     u32_0);
                                                            clone_from =
                                                                0 as
                                                                    libc::c_int
                                                                    as u32_0
                                                        }
                                                        clone_to =
                                                            rand_below(afl,
                                                                       temp_len
                                                                           as
                                                                           u32_0);
                                                        new_buf =
                                                            ck_maybe_grow(&mut (*afl).out_scratch_buf
                                                                              as
                                                                              *mut *mut u8_0
                                                                              as
                                                                              *mut *mut libc::c_void,
                                                                          &mut (*afl).out_scratch_size,
                                                                          (temp_len
                                                                               as
                                                                               libc::c_uint).wrapping_add(clone_len)
                                                                              as
                                                                              size_t)
                                                                as *mut u8_0;
                                                        /* Head */
                                                        memcpy(new_buf as
                                                                   *mut libc::c_void,
                                                               out_buf as
                                                                   *const libc::c_void,
                                                               clone_to as
                                                                   libc::c_ulong);
                                                        /* Inserted part */
                                                        if actually_clone != 0
                                                           {
                                                            memcpy(new_buf.offset(clone_to
                                                                                      as
                                                                                      isize)
                                                                       as
                                                                       *mut libc::c_void,
                                                                   out_buf.offset(clone_from
                                                                                      as
                                                                                      isize)
                                                                       as
                                                                       *const libc::c_void,
                                                                   clone_len
                                                                       as
                                                                       libc::c_ulong);
                                                        } else {
                                                            memset(new_buf.offset(clone_to
                                                                                      as
                                                                                      isize)
                                                                       as
                                                                       *mut libc::c_void,
                                                                   if rand_below(afl,
                                                                                 2
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     u32_0)
                                                                          != 0
                                                                      {
                                                                       rand_below(afl,
                                                                                  256
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      u32_0)
                                                                   } else {
                                                                       *out_buf.offset(rand_below(afl,
                                                                                                  temp_len
                                                                                                      as
                                                                                                      u32_0)
                                                                                           as
                                                                                           isize)
                                                                           as
                                                                           libc::c_uint
                                                                   } as
                                                                       libc::c_int,
                                                                   clone_len
                                                                       as
                                                                       libc::c_ulong);
                                                        }
                                                        /* Tail */
                                                        memcpy(new_buf.offset(clone_to
                                                                                  as
                                                                                  isize).offset(clone_len
                                                                                                    as
                                                                                                    isize)
                                                                   as
                                                                   *mut libc::c_void,
                                                               out_buf.offset(clone_to
                                                                                  as
                                                                                  isize)
                                                                   as
                                                                   *const libc::c_void,
                                                               (temp_len as
                                                                    libc::c_uint).wrapping_sub(clone_to)
                                                                   as
                                                                   libc::c_ulong);
                                                        swap_bufs(&mut (*afl).out_buf
                                                                      as
                                                                      *mut *mut u8_0
                                                                      as
                                                                      *mut *mut libc::c_void,
                                                                  &mut (*afl).out_size,
                                                                  &mut (*afl).out_scratch_buf
                                                                      as
                                                                      *mut *mut u8_0
                                                                      as
                                                                      *mut *mut libc::c_void,
                                                                  &mut (*afl).out_scratch_size);
                                                        out_buf = new_buf;
                                                        temp_len =
                                                            (temp_len as
                                                                 libc::c_uint).wrapping_add(clone_len)
                                                                as s32 as s32;
                                                        let ref mut fresh87 =
                                                            *MOpt_globals.cycles_v2.offset(14
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh87 =
                                                            (*fresh87 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                15 => {
                                                    /* Overwrite bytes with a randomly selected chunk (75%) or fixed
                 bytes (25%). */
                                                    let mut copy_from: u32_0 =
                                                        0;
                                                    let mut copy_to: u32_0 =
                                                        0;
                                                    let mut copy_len: u32_0 =
                                                        0;
                                                    if !(temp_len <
                                                             2 as libc::c_int)
                                                       {
                                                        copy_len =
                                                            choose_block_len(afl,
                                                                             (temp_len
                                                                                  -
                                                                                  1
                                                                                      as
                                                                                      libc::c_int)
                                                                                 as
                                                                                 u32_0);
                                                        copy_from =
                                                            rand_below(afl,
                                                                       (temp_len
                                                                            as
                                                                            libc::c_uint).wrapping_sub(copy_len).wrapping_add(1
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                                  as
                                                                                                                                  libc::c_uint));
                                                        copy_to =
                                                            rand_below(afl,
                                                                       (temp_len
                                                                            as
                                                                            libc::c_uint).wrapping_sub(copy_len).wrapping_add(1
                                                                                                                                  as
                                                                                                                                  libc::c_int
                                                                                                                                  as
                                                                                                                                  libc::c_uint));
                                                        if rand_below(afl,
                                                                      4 as
                                                                          libc::c_int
                                                                          as
                                                                          u32_0)
                                                               != 0 {
                                                            if copy_from !=
                                                                   copy_to {
                                                                memmove(out_buf.offset(copy_to
                                                                                           as
                                                                                           isize)
                                                                            as
                                                                            *mut libc::c_void,
                                                                        out_buf.offset(copy_from
                                                                                           as
                                                                                           isize)
                                                                            as
                                                                            *const libc::c_void,
                                                                        copy_len
                                                                            as
                                                                            libc::c_ulong);
                                                            }
                                                        } else {
                                                            memset(out_buf.offset(copy_to
                                                                                      as
                                                                                      isize)
                                                                       as
                                                                       *mut libc::c_void,
                                                                   if rand_below(afl,
                                                                                 2
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     u32_0)
                                                                          != 0
                                                                      {
                                                                       rand_below(afl,
                                                                                  256
                                                                                      as
                                                                                      libc::c_int
                                                                                      as
                                                                                      u32_0)
                                                                   } else {
                                                                       *out_buf.offset(rand_below(afl,
                                                                                                  temp_len
                                                                                                      as
                                                                                                      u32_0)
                                                                                           as
                                                                                           isize)
                                                                           as
                                                                           libc::c_uint
                                                                   } as
                                                                       libc::c_int,
                                                                   copy_len as
                                                                       libc::c_ulong);
                                                        }
                                                        let ref mut fresh88 =
                                                            *MOpt_globals.cycles_v2.offset(15
                                                                                               as
                                                                                               libc::c_int
                                                                                               as
                                                                                               isize);
                                                        *fresh88 =
                                                            (*fresh88 as
                                                                 libc::c_ulonglong).wrapping_add(1
                                                                                                     as
                                                                                                     libc::c_int
                                                                                                     as
                                                                                                     libc::c_ulonglong)
                                                                as u64_0 as
                                                                u64_0
                                                    }
                                                }
                                                _ => { }
                                            }
                                            i += 1
                                            /* switch select_algorithm() */
                                        }
                                        *MOpt_globals.pTime =
                                            (*MOpt_globals.pTime as
                                                 libc::c_ulonglong).wrapping_add(1
                                                                                     as
                                                                                     libc::c_int
                                                                                     as
                                                                                     libc::c_ulonglong)
                                                as u64_0 as u64_0;
                                        let mut temp_total_found: u64_0 =
                                            ((*afl).queued_paths as
                                                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                        if common_fuzz_stuff(afl, out_buf,
                                                             temp_len as
                                                                 u32_0) != 0 {
                                            break 'c_20510 ;
                                        }
                                        /* out_buf might have been mangled a bit, so let's restore it to its
           original size and shape. */
                                        out_buf =
                                            ck_maybe_grow(&mut (*afl).out_buf
                                                              as
                                                              *mut *mut u8_0
                                                              as
                                                              *mut *mut libc::c_void,
                                                          &mut (*afl).out_size,
                                                          len as size_t) as
                                                *mut u8_0;
                                        temp_len = len;
                                        memcpy(out_buf as *mut libc::c_void,
                                               in_buf as *const libc::c_void,
                                               len as libc::c_ulong);
                                        /* If we're finding new stuff, let's run for a bit longer, limits
           permitting. */
                                        if (*afl).queued_paths as
                                               libc::c_ulonglong !=
                                               havoc_queued {
                                            if perf_score <=
                                                   ((*afl).havoc_max_mult as
                                                        libc::c_int *
                                                        100 as libc::c_int) as
                                                       libc::c_uint {
                                                (*afl).stage_max *=
                                                    2 as libc::c_int;
                                                perf_score =
                                                    (perf_score as
                                                         libc::c_uint).wrapping_mul(2
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint)
                                                        as u32_0 as u32_0
                                            }
                                            havoc_queued =
                                                (*afl).queued_paths as u64_0
                                        }
                                        if ((*afl).queued_paths as
                                                libc::c_ulonglong).wrapping_add((*afl).unique_crashes)
                                               > temp_total_found {
                                            let mut temp_temp_puppet: u64_0 =
                                                ((*afl).queued_paths as
                                                     libc::c_ulonglong).wrapping_add((*afl).unique_crashes).wrapping_sub(temp_total_found);
                                            (*afl).total_puppet_find =
                                                (*afl).total_puppet_find.wrapping_add(temp_temp_puppet);
                                            i = 0 as libc::c_int;
                                            while i < 16 as libc::c_int {
                                                if *MOpt_globals.cycles_v2.offset(i
                                                                                      as
                                                                                      isize)
                                                       >
                                                       *MOpt_globals.cycles_v3.offset(i
                                                                                          as
                                                                                          isize)
                                                   {
                                                    let ref mut fresh89 =
                                                        *MOpt_globals.finds_v2.offset(i
                                                                                          as
                                                                                          isize);
                                                    *fresh89 =
                                                        (*fresh89 as
                                                             libc::c_ulonglong).wrapping_add(temp_temp_puppet)
                                                            as u64_0 as u64_0
                                                }
                                                i += 1
                                            }
                                        }
                                        (*afl).stage_cur += 1
                                    }
                                    new_hit_cnt =
                                        ((*afl).queued_paths as
                                             libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
                                    if MOpt_globals.is_pilot_mode != 0 {
                                        if splice_cycle == 0 {
                                            (*afl).stage_finds[STAGE_HAVOC as
                                                                   libc::c_int
                                                                   as usize] =
                                                ((*afl).stage_finds[STAGE_HAVOC
                                                                        as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                    as u64_0 as u64_0;
                                            (*afl).stage_cycles[STAGE_HAVOC as
                                                                    libc::c_int
                                                                    as usize]
                                                =
                                                ((*afl).stage_cycles[STAGE_HAVOC
                                                                         as
                                                                         libc::c_int
                                                                         as
                                                                         usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                         as
                                                                                         libc::c_ulonglong)
                                                    as u64_0 as u64_0
                                        } else {
                                            (*afl).stage_finds[STAGE_SPLICE as
                                                                   libc::c_int
                                                                   as usize] =
                                                ((*afl).stage_finds[STAGE_SPLICE
                                                                        as
                                                                        libc::c_int
                                                                        as
                                                                        usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add(new_hit_cnt.wrapping_sub(orig_hit_cnt))
                                                    as u64_0 as u64_0;
                                            (*afl).stage_cycles[STAGE_SPLICE
                                                                    as
                                                                    libc::c_int
                                                                    as usize]
                                                =
                                                ((*afl).stage_cycles[STAGE_SPLICE
                                                                         as
                                                                         libc::c_int
                                                                         as
                                                                         usize]
                                                     as
                                                     libc::c_ulonglong).wrapping_add((*afl).stage_max
                                                                                         as
                                                                                         libc::c_ulonglong)
                                                    as u64_0 as u64_0
                                        }
                                    }
                                    loop 
                                         /* ***********
       * SPLICING *
       ************/
                                         {
                                        if (*afl).use_splicing as libc::c_int
                                               != 0 &&
                                               {
                                                   let fresh90 =
                                                       splice_cycle; /* if splice_cycle */
                                                   splice_cycle =
                                                       splice_cycle.wrapping_add(1);
                                                   (fresh90) <
                                                       (*afl).SPLICE_CYCLES_puppet
                                                           as libc::c_uint
                                               } &&
                                               (*afl).queued_paths >
                                                   1 as libc::c_int as
                                                       libc::c_uint &&
                                               (*(*afl).queue_cur).len >
                                                   1 as libc::c_int as
                                                       libc::c_uint {
                                            let mut target: *mut queue_entry =
                                                0 as *mut queue_entry;
                                            let mut tid: u32_0 = 0;
                                            let mut split_at: u32_0 = 0;
                                            let mut new_buf_0: *mut u8_0 =
                                                0 as *mut u8_0;
                                            let mut f_diff: s32 = 0;
                                            let mut l_diff: s32 = 0;
                                            /* First of all, if we've modified in_buf for havoc, let's clean that
           up... */
                                            if in_buf != orig_in {
                                                in_buf = orig_in;
                                                len =
                                                    (*(*afl).queue_cur).len as
                                                        s32
                                            }
                                            loop 
                                                 /* Pick a random queue entry and seek to it. Don't splice with yourself.
         */
                                                 {
                                                tid =
                                                    rand_below(afl,
                                                               (*afl).queued_paths);
                                                if !(tid ==
                                                         (*afl).current_entry)
                                                   {
                                                    break ;
                                                }
                                            }
                                            (*afl).splicing_with = tid as s32;
                                            target = (*afl).queue;
                                            while tid >=
                                                      100 as libc::c_int as
                                                          libc::c_uint {
                                                target = (*target).next_100;
                                                tid =
                                                    (tid as
                                                         libc::c_uint).wrapping_sub(100
                                                                                        as
                                                                                        libc::c_int
                                                                                        as
                                                                                        libc::c_uint)
                                                        as u32_0 as u32_0
                                            }
                                            loop  {
                                                let fresh91 = tid;
                                                tid = tid.wrapping_sub(1);
                                                if !(fresh91 != 0) { break ; }
                                                target = (*target).next
                                            }
                                            /* Make sure that the target has a reasonable length. */
                                            while !target.is_null() &&
                                                      ((*target).len <
                                                           2 as libc::c_int as
                                                               libc::c_uint ||
                                                           target ==
                                                               (*afl).queue_cur)
                                                  {
                                                target = (*target).next;
                                                (*afl).splicing_with += 1
                                            }
                                            if target.is_null() { continue ; }
                                            /* Read the testcase into a new buffer. */
                                            fd =
                                                open((*target).fname as
                                                         *const libc::c_char,
                                                     0 as libc::c_int);
                                            if fd < 0 as libc::c_int {
                                                fflush(stdout);
                                                printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mUnable to open \'%s\'\x00"
                                                           as *const u8 as
                                                           *const libc::c_char,
                                                       (*target).fname);
                                                printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                           as *const u8 as
                                                           *const libc::c_char,
                                                       b"func_unknown\x00" as
                                                           *const u8 as
                                                           *const libc::c_char,
                                                       b"src/afl-fuzz-one.c\x00"
                                                           as *const u8 as
                                                           *const libc::c_char,
                                                       4096 as libc::c_int);
                                                printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                           as *const u8 as
                                                           *const libc::c_char,
                                                       strerror(*__errno_location()));
                                                exit(1 as libc::c_int);
                                            }
                                            new_buf_0 =
                                                ck_maybe_grow(&mut (*afl).in_scratch_buf
                                                                  as
                                                                  *mut *mut u8_0
                                                                  as
                                                                  *mut *mut libc::c_void,
                                                              &mut (*afl).in_scratch_size,
                                                              (*target).len as
                                                                  size_t) as
                                                    *mut u8_0;
                                            let mut _len: u32_0 =
                                                (*target).len;
                                            let mut _res: s32 =
                                                read(fd,
                                                     new_buf_0 as
                                                         *mut libc::c_void,
                                                     _len as size_t) as s32;
                                            if _res as libc::c_uint != _len {
                                                if _res < 0 as libc::c_int {
                                                    fflush(stdout);
                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mShort read from %s\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           (*target).fname);
                                                    printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           b"func_unknown\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           b"src/afl-fuzz-one.c\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           4100 as
                                                               libc::c_int);
                                                    printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           strerror(*__errno_location()));
                                                    exit(1 as libc::c_int);
                                                } else {
                                                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mShort read from %s\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           (*target).fname);
                                                    printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           b"func_unknown\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           b"src/afl-fuzz-one.c\x00"
                                                               as *const u8 as
                                                               *const libc::c_char,
                                                           4100 as
                                                               libc::c_int);
                                                    exit(1 as libc::c_int);
                                                }
                                            }
                                            close(fd);
                                            /* Find a suitable splicin g location, somewhere between the first and
           the last differing byte. Bail out if the difference is just a single
           byte or so. */
                                            locate_diffs(in_buf, new_buf_0,
                                                         ({
                                                              let mut _a:
                                                                      s32 =
                                                                  len;
                                                              let mut _b:
                                                                      u32_0 =
                                                                  (*target).len;
                                                              if (_a as
                                                                      libc::c_uint)
                                                                     < _b {
                                                                  _a as
                                                                      libc::c_uint
                                                              } else { _b }
                                                          }), &mut f_diff,
                                                         &mut l_diff);
                                            if f_diff < 0 as libc::c_int ||
                                                   l_diff < 2 as libc::c_int
                                                   || f_diff == l_diff {
                                                continue ;
                                            }
                                            /* Split somewhere between the first and last differing byte. */
                                            split_at =
                                                (f_diff as
                                                     libc::c_uint).wrapping_add(rand_below(afl,
                                                                                           (l_diff
                                                                                                -
                                                                                                f_diff)
                                                                                               as
                                                                                               u32_0));
                                            /* Do the thing. */
                                            len = (*target).len as s32;
                                            memcpy(new_buf_0 as
                                                       *mut libc::c_void,
                                                   in_buf as
                                                       *const libc::c_void,
                                                   split_at as libc::c_ulong);
                                            swap_bufs(&mut (*afl).in_buf as
                                                          *mut *mut u8_0 as
                                                          *mut *mut libc::c_void,
                                                      &mut (*afl).in_size,
                                                      &mut (*afl).in_scratch_buf
                                                          as *mut *mut u8_0 as
                                                          *mut *mut libc::c_void,
                                                      &mut (*afl).in_scratch_size);
                                            in_buf = new_buf_0;
                                            out_buf =
                                                ck_maybe_grow(&mut (*afl).out_buf
                                                                  as
                                                                  *mut *mut u8_0
                                                                  as
                                                                  *mut *mut libc::c_void,
                                                              &mut (*afl).out_size,
                                                              len as size_t)
                                                    as *mut u8_0;
                                            memcpy(out_buf as
                                                       *mut libc::c_void,
                                                   in_buf as
                                                       *const libc::c_void,
                                                   len as libc::c_ulong);
                                            break ;
                                        } else {
                                            /* !IGNORE_FINDS */
                                            ret_val =
                                                0 as libc::c_int as u8_0;
                                            break 'c_20510 ;
                                        }
                                    }
                                }
                            /* block */
                        }
                    }
                }
            }
        }
        _ => { }
    }
    if splice_cycle >= (*afl).SPLICE_CYCLES_puppet as libc::c_uint {
        (*afl).SPLICE_CYCLES_puppet =
            rand_below(afl,
                       (25 as libc::c_int - 5 as libc::c_int +
                            1 as libc::c_int) as
                           u32_0).wrapping_add(5 as libc::c_int as
                                                   libc::c_uint) as s32
    }
    (*afl).splicing_with = -(1 as libc::c_int);
    /* Update afl->pending_not_fuzzed count if we made it through the
         calibration cycle and have not seen this entry before. */
    // if (!afl->stop_soon && !afl->queue_cur->cal_failed &&
      // !afl->queue_cur->was_fuzzed) {
    //   afl->queue_cur->was_fuzzed = 1;
      //   --afl->pending_not_fuzzed;
      //   if (afl->queue_cur->favored) --afl->pending_favored;
      // }
    munmap(orig_in as *mut libc::c_void, (*(*afl).queue_cur).len as size_t);
    if (*afl).key_puppet == 1 as libc::c_int {
        if ((*afl).queued_paths as
                libc::c_ulonglong).wrapping_add((*afl).unique_crashes) as
               libc::c_double >
               ((*afl).queued_paths as
                    libc::c_ulonglong).wrapping_add((*afl).unique_crashes) as
                   libc::c_double * 1.1f64 +
                   (*afl).orig_hit_cnt_puppet as libc::c_double {
            (*afl).key_puppet = 0 as libc::c_int;
            (*afl).orig_hit_cnt_puppet = 0 as libc::c_int as u64_0;
            (*afl).last_limit_time_start = 0 as libc::c_int as u64_0
        }
    }
    if *MOpt_globals.pTime > MOpt_globals.period {
        (*afl).total_pacemaker_time =
            ((*afl).total_pacemaker_time as
                 libc::c_ulonglong).wrapping_add(*MOpt_globals.pTime) as u64_0
                as u64_0;
        *MOpt_globals.pTime = 0 as libc::c_int as u64_0;
        (*afl).temp_puppet_find = (*afl).total_puppet_find;
        new_hit_cnt =
            ((*afl).queued_paths as
                 libc::c_ulonglong).wrapping_add((*afl).unique_crashes);
        if MOpt_globals.is_pilot_mode != 0 {
            (*afl).swarm_fitness[(*afl).swarm_now as usize] =
                (*afl).total_puppet_find.wrapping_sub((*afl).temp_puppet_find)
                    as libc::c_double /
                    ((*afl).tmp_pilot_time as libc::c_double /
                         (*afl).period_pilot_tmp)
        }
        let mut temp_stage_finds_puppet: u64_0 = 0 as libc::c_int as u64_0;
        /* if pilot_mode */
        i = 0 as libc::c_int; /* for i = 0; i < operator_num */
        while i < 16 as libc::c_int {
            if MOpt_globals.is_pilot_mode != 0 {
                let mut temp_eff: libc::c_double =
                    0.0f64; /* if afl->swarm_now == swarm_num */
                if *MOpt_globals.cycles_v2.offset(i as isize) >
                       *MOpt_globals.cycles.offset(i as isize) {
                    temp_eff =
                        (*MOpt_globals.finds_v2.offset(i as
                                                           isize)).wrapping_sub(*MOpt_globals.finds.offset(i
                                                                                                               as
                                                                                                               isize))
                            as libc::c_double /
                            (*MOpt_globals.cycles_v2.offset(i as
                                                                isize)).wrapping_sub(*MOpt_globals.cycles.offset(i
                                                                                                                     as
                                                                                                                     isize))
                                as libc::c_double
                }
                if (*afl).eff_best[(*afl).swarm_now as usize][i as usize] <
                       temp_eff {
                    (*afl).eff_best[(*afl).swarm_now as usize][i as usize] =
                        temp_eff;
                    (*afl).L_best[(*afl).swarm_now as usize][i as usize] =
                        (*afl).x_now[(*afl).swarm_now as usize][i as usize]
                }
            }
            *MOpt_globals.finds.offset(i as isize) =
                *MOpt_globals.finds_v2.offset(i as isize);
            *MOpt_globals.cycles.offset(i as isize) =
                *MOpt_globals.cycles_v2.offset(i as isize);
            temp_stage_finds_puppet =
                (temp_stage_finds_puppet as
                     libc::c_ulonglong).wrapping_add(*MOpt_globals.finds.offset(i
                                                                                    as
                                                                                    isize))
                    as u64_0 as u64_0;
            i += 1
        }
        if MOpt_globals.is_pilot_mode != 0 {
            (*afl).swarm_now = (*afl).swarm_now + 1 as libc::c_int;
            if (*afl).swarm_now == 5 as libc::c_int {
                (*afl).key_module = 1 as libc::c_int;
                i = 0 as libc::c_int;
                while i < 16 as libc::c_int {
                    (*afl).core_operator_cycles_puppet_v2[i as usize] =
                        (*afl).core_operator_cycles_puppet[i as usize];
                    (*afl).core_operator_cycles_puppet_v3[i as usize] =
                        (*afl).core_operator_cycles_puppet[i as usize];
                    (*afl).core_operator_finds_puppet_v2[i as usize] =
                        (*afl).core_operator_finds_puppet[i as usize];
                    i += 1
                }
                let mut swarm_eff: libc::c_double = 0.0f64;
                (*afl).swarm_now = 0 as libc::c_int;
                i = 0 as libc::c_int;
                while i < 5 as libc::c_int {
                    if (*afl).swarm_fitness[i as usize] > swarm_eff {
                        swarm_eff = (*afl).swarm_fitness[i as usize];
                        (*afl).swarm_now = i
                    }
                    i += 1
                }
                if (*afl).swarm_now < 0 as libc::c_int ||
                       (*afl).swarm_now > 5 as libc::c_int - 1 as libc::c_int
                   {
                    fflush(stdout);
                    printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-]  SYSTEM ERROR : \x1b[0mswarm_now error number  %d\x00"
                               as *const u8 as *const libc::c_char,
                           (*afl).swarm_now);
                    printf(b"\x1b[1;91m\n    Stop location : \x1b[0m%s(), %s:%u\n\x00"
                               as *const u8 as *const libc::c_char,
                           b"func_unknown\x00" as *const u8 as
                               *const libc::c_char,
                           b"src/afl-fuzz-one.c\x00" as *const u8 as
                               *const libc::c_char, 4249 as libc::c_int);
                    printf(b"\x1b[1;91m       OS message : \x1b[0m%s\n\x00" as
                               *const u8 as *const libc::c_char,
                           strerror(*__errno_location()));
                    exit(1 as libc::c_int);
                }
            }
            /* adjust pointers dependent on 'afl->swarm_now' */
            (*afl).mopt_globals_pilot.finds =
                (*afl).stage_finds_puppet[(*afl).swarm_now as
                                              usize].as_mut_ptr();
            (*afl).mopt_globals_pilot.finds_v2 =
                (*afl).stage_finds_puppet_v2[(*afl).swarm_now as
                                                 usize].as_mut_ptr();
            (*afl).mopt_globals_pilot.cycles =
                (*afl).stage_cycles_puppet[(*afl).swarm_now as
                                               usize].as_mut_ptr();
            (*afl).mopt_globals_pilot.cycles_v2 =
                (*afl).stage_cycles_puppet_v2[(*afl).swarm_now as
                                                  usize].as_mut_ptr();
            (*afl).mopt_globals_pilot.cycles_v3 =
                (*afl).stage_cycles_puppet_v3[(*afl).swarm_now as
                                                  usize].as_mut_ptr()
        } else {
            (*afl).key_module = 2 as libc::c_int;
            (*afl).old_hit_count = new_hit_cnt
        }
    }
    return ret_val;
}
#[no_mangle]
pub unsafe extern "C" fn core_fuzzing(mut afl: *mut afl_state_t) -> u8_0 {
    return mopt_common_fuzzing(afl, (*afl).mopt_globals_core);
}
#[no_mangle]
pub unsafe extern "C" fn pilot_fuzzing(mut afl: *mut afl_state_t) -> u8_0 {
    return mopt_common_fuzzing(afl, (*afl).mopt_globals_pilot);
}
#[no_mangle]
pub unsafe extern "C" fn pso_updating(mut afl: *mut afl_state_t) {
    (*afl).g_now += 1 as libc::c_int;
    if (*afl).g_now > (*afl).g_max { (*afl).g_now = 0 as libc::c_int }
    (*afl).w_now =
        ((*afl).w_init - (*afl).w_end) *
            ((*afl).g_max - (*afl).g_now) as libc::c_double /
            (*afl).g_max as libc::c_double + (*afl).w_end;
    let mut tmp_swarm: libc::c_int = 0;
    let mut i: libc::c_int = 0;
    let mut j: libc::c_int = 0;
    let mut temp_operator_finds_puppet: u64_0 = 0 as libc::c_int as u64_0;
    i = 0 as libc::c_int;
    while i < 16 as libc::c_int {
        (*afl).operator_finds_puppet[i as usize] =
            (*afl).core_operator_finds_puppet[i as usize];
        j = 0 as libc::c_int;
        while j < 5 as libc::c_int {
            (*afl).operator_finds_puppet[i as usize] =
                (*afl).operator_finds_puppet[i as
                                                 usize].wrapping_add((*afl).stage_finds_puppet[j
                                                                                                   as
                                                                                                   usize][i
                                                                                                              as
                                                                                                              usize]);
            j += 1
        }
        temp_operator_finds_puppet =
            temp_operator_finds_puppet.wrapping_add((*afl).operator_finds_puppet[i
                                                                                     as
                                                                                     usize]);
        i += 1
    }
    i = 0 as libc::c_int;
    while i < 16 as libc::c_int {
        if (*afl).operator_finds_puppet[i as usize] != 0 {
            (*afl).G_best[i as usize] =
                (*afl).operator_finds_puppet[i as usize] as libc::c_double /
                    temp_operator_finds_puppet as libc::c_double
        }
        i += 1
    }
    tmp_swarm = 0 as libc::c_int;
    while tmp_swarm < 5 as libc::c_int {
        let mut x_temp: libc::c_double = 0.0f64;
        i = 0 as libc::c_int;
        while i < 16 as libc::c_int {
            (*afl).probability_now[tmp_swarm as usize][i as usize] = 0.0f64;
            (*afl).v_now[tmp_swarm as usize][i as usize] =
                (*afl).w_now * (*afl).v_now[tmp_swarm as usize][i as usize] +
                    (rand() % 1000 as libc::c_int) as libc::c_double *
                        0.001f64 *
                        ((*afl).L_best[tmp_swarm as usize][i as usize] -
                             (*afl).x_now[tmp_swarm as usize][i as usize]) +
                    (rand() % 1000 as libc::c_int) as libc::c_double *
                        0.001f64 *
                        ((*afl).G_best[i as usize] -
                             (*afl).x_now[tmp_swarm as usize][i as usize]);
            (*afl).x_now[tmp_swarm as usize][i as usize] +=
                (*afl).v_now[tmp_swarm as usize][i as usize];
            if (*afl).x_now[tmp_swarm as usize][i as usize] >
                   1 as libc::c_int as libc::c_double {
                (*afl).x_now[tmp_swarm as usize][i as usize] =
                    1 as libc::c_int as libc::c_double
            } else if (*afl).x_now[tmp_swarm as usize][i as usize] < 0.05f64 {
                (*afl).x_now[tmp_swarm as usize][i as usize] = 0.05f64
            }
            x_temp += (*afl).x_now[tmp_swarm as usize][i as usize];
            i += 1
        }
        i = 0 as libc::c_int;
        while i < 16 as libc::c_int {
            (*afl).x_now[tmp_swarm as usize][i as usize] =
                (*afl).x_now[tmp_swarm as usize][i as usize] / x_temp;
            if i != 0 as libc::c_int {
                (*afl).probability_now[tmp_swarm as usize][i as usize] =
                    (*afl).probability_now[tmp_swarm as
                                               usize][(i - 1 as libc::c_int)
                                                          as usize] +
                        (*afl).x_now[tmp_swarm as usize][i as usize]
            } else {
                (*afl).probability_now[tmp_swarm as usize][i as usize] =
                    (*afl).x_now[tmp_swarm as usize][i as usize]
            }
            i += 1
        }
        if (*afl).probability_now[tmp_swarm as
                                      usize][(16 as libc::c_int -
                                                  1 as libc::c_int) as usize]
               < 0.99f64 ||
               (*afl).probability_now[tmp_swarm as
                                          usize][(16 as libc::c_int -
                                                      1 as libc::c_int) as
                                                     usize] > 1.01f64 {
            printf(b"\x0f\x1b)B\x1b[?25h\x1b[0m\x1b[1;91m\n[-] PROGRAM ABORT : \x1b[0mERROR probability\x00"
                       as *const u8 as *const libc::c_char);
            printf(b"\x1b[1;91m\n         Location : \x1b[0m%s(), %s:%u\n\n\x00"
                       as *const u8 as *const libc::c_char,
                   b"func_unknown\x00" as *const u8 as *const libc::c_char,
                   b"src/afl-fuzz-one.c\x00" as *const u8 as
                       *const libc::c_char, 4362 as libc::c_int);
            exit(1 as libc::c_int);
        }
        tmp_swarm += 1
    }
    (*afl).swarm_now = 0 as libc::c_int;
    (*afl).key_module = 0 as libc::c_int;
}
/*
   american fuzzy lop++ - fuzzer header
   ------------------------------------

   Originally written by Michal Zalewski

   Now maintained by Marc Heuse <mh@mh-sec.de>,
                     Heiko Eißfeldt <heiko.eissfeldt@hexco.de>,
                     Andrea Fioraldi <andreafioraldi@gmail.com>,
                     Dominik Maier <mail@dmnk.co>

   Copyright 2016, 2017 Google Inc. All rights reserved.
   Copyright 2019-2020 AFLplusplus Project. All rights reserved.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

   This is the real deal: the program takes an instrumented binary and
   attempts a variety of basic fuzzing tricks, paying close attention to
   how they affect the execution path.

 */
/* __APPLE__ || __FreeBSD__ || __OpenBSD__ */
/* For systems that have sched_setaffinity; right now just Linux, but one
   can hope... */
/* __linux__ */
/* clashes with FreeBSD */
/* ^!SIMPLE_FILES */
/* usable size for stage name buf in afl_state */
/* File name for the test case      */
/* Input length                     */
/* Calibration failed?              */
/* Trimmed?                         */
/* historical, but needed for MOpt  */
/* Deterministic stages passed?     */
/* Triggers new coverage?           */
/* Variable behavior?               */
/* Currently favored?               */
/* Marked as redundant in the fs?   */
/* Do not run redqueen stage again  */
/* Number of bits set in bitmap     */
/* Number of fuzzing iterations     */
/* Checksum of the execution trace  */
/* Execution time (us)              */
/* Number of queue cycles behind    */
/* Number of fuzz, does not overflow */
/* Path depth                       */
/* Trace bytes, if kept             */
/* Trace bytes ref count            */
/* Next element, if any             */
/* 100 elements ahead               */
/* Dictionary token data            */
/* Dictionary token length          */
/* Use count in the corpus          */
/* Fuzzing stages */
/* 00 */
/* 01 */
/* 02 */
/* 03 */
/* 04 */
/* 05 */
/* 06 */
/* 07 */
/* 08 */
/* 09 */
/* 10 */
/* 11 */
/* 12 */
/* 13 */
/* 14 */
/* 15 */
/* 16 */
/* 17 */
/* 18 */
/* 19 */
/* 20 */
/* 21 */
/* Stage value types */
/* 00 */
/* 01 */
/* 02 */
/* Execution status fault codes */
/* 00 */
/* 01 */
/* 02 */
/* 03 */
/* 04 */
/* 05 */
/* 00 */
/* AFL default, Exploration-based constant schedule */
/* 01 */
/* Exponential schedule             */
/* 02 */
/* Cut-Off Exponential schedule     */
/* 03 */
/* Linear schedule                  */
/* 04 */
/* Quadratic schedule               */
/* 05 */
/* AFL's exploitation-based const.  */
/* 06 */
/* Modified MOPT schedule           */
/* 07 */
/* Rare edges                       */
/* Python stuff */
/* Position of this state in the global states list */
/* argv if needed */
/* MOpt:
    Lots of globals, but mostly for the status UI and other things where it
    really makes no sense to haul them around as function parameters. */
/* Patterns found per
                                                            fuzz stage    */
/* Execs per fuzz stage */
/* Input directory with test cases  */
/* Working & output directory       */
/* Temporary directory for input    */
/* Synchronization directory        */
/* Fuzzer ID                        */
/* Power schedule name              */
/* Display banner                   */
/* Input bitmap                     */
/* File extension                   */
/* Original command line            */
/* Command to execute on a new crash */
/* Timeout used for hang det (ms)   */
/* Calibration cycles defaults      */
/* Calibration cycles defaults      */
/* do not unlink cur_input          */
/* Debug mode                       */
/* Custom mutator only mode         */
/* Python-only mode                 */
/* Stats update frequency (execs)   */
/* Power schedule (default: EXPLORE)*/
/* Skip deterministic stages?       */
/* Force deterministic stages?      */
/* Recombine input files?           */
/* Run in non-instrumented mode?    */
/* Scoring for favorites changed?   */
/* Signal that killed the child     */
/* Resuming an older fuzzing job?   */
/* Specific timeout given?          */
/* stdout is not a tty              */
/* terminal dimensions too small    */
/* Disable forkserver?              */
/* Crash mode! Yeah!                */
/* Attempt in-place resume?         */
/* Resume if afl->out_dir exists?   */
/* Auto-generated tokens changed?   */
/* Feng shui on the status screen   */
/* Skip most arithmetic ops         */
/* Shuffle input queue?             */
/* Time to update bitmap?           */
/* Running in Unicorn mode?         */
/* Use WINE with QEMU mode          */
/* Skip request, via SIGUSR1        */
/* Run time over 10 minutes?        */
/* Running in persistent mode?      */
/* Deferred forkserver mode?        */
/* do not reseed                    */
/* Try to calibrate faster?         */
/* Never trim in fuzz_one           */
/* Regions yet untouched by fuzzing */
/* Bits we haven't seen in tmouts   */
/* Bits we haven't seen in crashes  */
/* Bytes that appear to be variable */
/* Ctrl-C pressed?                  */
/* Window resized?                  */
/* Total number of queued testcases */
/* Testcases with variable behavior */
/* Total number of initial inputs   */
/* Items discovered during this run */
/* Items imported via -S            */
/* Paths deemed favorable           */
/* Paths with new coverage bytes    */
/* Queued but not done yet          */
/* Pending favored paths            */
/* Abandoned inputs in cur cycle    */
/* Current path depth               */
/* Max path depth                   */
/* Number of useless starting paths */
/* Bitmap bytes with var behavior   */
/* Current queue entry ID           */
/* Cycle count divisor for havoc    */
/* Total number of crashes          */
/* Crashes with unique signatures   */
/* Total number of timeouts         */
/* Timeouts with unique signatures  */
/* Hangs with unique signatures     */
/* Total execve() calls             */
/* Exec counter at last crash       */
/* Queue round counter              */
/* Cycles without any new paths     */
/* Execs done to trim input files   */
/* Bytes coming into the trimmer    */
/* Bytes coming outa the trimmer    */
/* Blocks subject to effector maps  */
/* Blocks selected as fuzzable      */
/* Unix start time (ms)             */
/* Time for most recent path (ms)   */
/* Time for most recent crash (ms)  */
/* Time for most recent hang (ms)   */
/* Slowest testcase non hang in ms  */
/* Number of timeouts in a row      */
/* Name of the current fuzz stage   */
/* Short stage name                 */
/* Currently syncing with...        */
/* reused stagename buf with len 64 */
/* Stage progression                */
/* Splicing with which test case?   */
/* Master instance job splitting    */
/* Syncing with case #...           */
/* Byte offset of current stage op  */
/* Value used for stage op          */
/* Value type (STAGE_VAL_*)         */
/* Patterns found per fuzz stage    */
/* Execs per fuzz stage             */
/* Random number counter            */
/* Total calibration time (us)      */
/* Total calibration cycles         */
/* Total bit count for all bitmaps  */
/* Number of bitmaps counted        */
/* CPU core count                   */
/* Selected CPU core                */
/* HAVE_AFFINITY */
/* Fuzzing queue (linked list)      */
/* Current offset within the queue  */
/* Top of the list                  */
/* Previous 100 marker              */
/* Top entries for bitmap bytes */
/* Extra tokens to fuzz with        */
/* Total number of tokens read      */
/* Automatically selected extras    */
/* Total number of tokens available */
/* afl_postprocess API */
/* CmpLog */
/* cmplog has its own little forkserver */
/* Custom mutators */
/* cmplog forkserver ids */
/* describe_op will use this to return a string
                                  up to 256 */
/* statistics file */
/* plot file saves from last run */
/*needed for afl_fuzz_one */
  // TODO: see which we can reuse
/* A global pointer to all instances is needed (for now) for signals to arrive
 */
/* custom mutator data ptr */
/* hooks for the custom mutator function */
/* *
   * Initialize the custom mutator.
   *
   * @param afl AFL instance.
   * @param seed Seed used for the mutation.
   * @return pointer to internal data or NULL on error
   */
/* *
   * Perform custom mutations on a given input
   *
   * (Optional for now. Required in the future)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param[in] buf Pointer to the input data to be mutated and the mutated
   *     output
   * @param[in] buf_size Size of the input/output data
   * @param[out] out_buf the new buffer. We may reuse *buf if large enough.
   *             *out_buf = NULL is treated as FATAL.
   * @param[in] add_buf Buffer containing the additional test case
   * @param[in] add_buf_size Size of the additional test case
   * @param[in] max_size Maximum size of the mutated output. The mutation must
   * not produce data larger than max_size.
   * @return Size of the mutated output.
   */
/* *
   * A post-processing function to use right before AFL writes the test case to
   * disk in order to execute the target.
   *
   * (Optional) If this functionality is not needed, simply don't define this
   * function.
   *
   * @param[in] data pointer returned in afl_custom_init for this fuzz case
   * @param[in] buf Buffer containing the test case to be executed
   * @param[in] buf_size Size of the test case
   * @param[out] out_buf Pointer to the buffer storing the test case after
   *     processing. External library should allocate memory for out_buf.
   *     It can chose to alter buf in-place, if the space is large enough.
   * @return Size of the output buffer.
   */
/* *
   * This method is called at the start of each trimming operation and receives
   * the initial buffer. It should return the amount of iteration steps possible
   * on this input (e.g. if your input has n elements and you want to remove
   * them one by one, return n, if you do a binary search, return log(n),
   * and so on...).
   *
   * If your trimming algorithm doesn't allow you to determine the amount of
   * (remaining) steps easily (esp. while running), then you can alternatively
   * return 1 here and always return 0 in post_trim until you are finished and
   * no steps remain. In that case, returning 1 in post_trim will end the
   * trimming routine. The whole current index/max iterations stuff is only used
   * to show progress.
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param buf Buffer containing the test case
   * @param buf_size Size of the test case
   * @return The amount of possible iteration steps to trim the input.
   *        Negative on error.
   */
/* *
   * This method is called for each trimming operation. It doesn't have any
   * arguments because we already have the initial buffer from init_trim and we
   * can memorize the current state in global variables. This can also save
   * reparsing steps for each iteration. It should return the trimmed input
   * buffer, where the returned data must not exceed the initial input data in
   * length. Returning anything that is larger than the original data (passed
   * to init_trim) will result in a fatal abort of AFLFuzz.
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param[out] out_buf Pointer to the buffer containing the trimmed test case.
   *             The library can reuse a buffer for each call
   *             and will have to free the buf (for example in deinit)
   * @return the size of the trimmed test case
   */
/* *
   * This method is called after each trim operation to inform you if your
   * trimming step was successful or not (in terms of coverage). If you receive
   * a failure here, you should reset your input to the last known good state.
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param success Indicates if the last trim operation was successful.
   * @return The next trim iteration index (from 0 to the maximum amount of
   *     steps returned in init_trim). Negative on error.
   */
/* *
   * Perform a single custom mutation on a given input.
   * This mutation is stacked with the other muatations in havoc.
   *
   * (Optional)
   *
   * @param[in] data pointer returned in afl_custom_init for this fuzz case
   * @param[in] buf Pointer to the input data to be mutated and the mutated
   *     output
   * @param[in] buf_size Size of input data
   * @param[out] out_buf The new buffer. It's legal to reuse *buf if it's <
   * buf_size.
   * @param[in] max_size Maximum size of the mutated output. The mutation must
   *     not produce data larger than max_size.
   * @return Size of the mutated output (out_size).
   */
/* *
   * Return the probability (in percentage) that afl_custom_havoc_mutation
   * is called in havoc. By default it is 6 %.
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @return The probability (0-100).
   */
/* *
   * Determine whether the fuzzer should fuzz the current queue entry or not.
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param filename File name of the test case in the queue entry
   * @return Return True(1) if the fuzzer will fuzz the queue entry, and
   *     False(0) otherwise.
   */
/* *
   * Allow for additional analysis (e.g. calling a different tool that does a
   * different kind of coverage and saves this for the custom mutator).
   *
   * (Optional)
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   * @param filename_new_queue File name of the new queue entry
   * @param filename_orig_queue File name of the original queue entry. This
   *     argument can be NULL while initializing the fuzzer
   */
/* *
   * Deinitialize the custom mutator.
   *
   * @param data pointer returned in afl_custom_init for this fuzz case
   */
/* *** Prototypes ****/
/* Custom mutators */
/* Python */
/* Queue */
/* Bitmap */
/* Extras */
/* Stats */
/* Run */
/* Fuzz one */
/* larger change for MOpt implementation: the original fuzz_one was renamed
   to fuzz_one_original. All documentation references to fuzz_one therefore
   mean fuzz_one_original */
#[no_mangle]
pub unsafe extern "C" fn fuzz_one(mut afl: *mut afl_state_t) -> u8_0 {
    let mut key_val_lv_1: libc::c_int = 0 as libc::c_int;
    let mut key_val_lv_2: libc::c_int = 0 as libc::c_int;
    // if limit_time_sig == -1 then both are run after each other
    if (*afl).limit_time_sig <= 0 as libc::c_int {
        key_val_lv_1 = fuzz_one_original(afl) as libc::c_int
    }
    if (*afl).limit_time_sig != 0 as libc::c_int {
        if (*afl).key_module == 0 as libc::c_int {
            key_val_lv_2 = pilot_fuzzing(afl) as libc::c_int
        } else if (*afl).key_module == 1 as libc::c_int {
            key_val_lv_2 = core_fuzzing(afl) as libc::c_int
        } else if (*afl).key_module == 2 as libc::c_int { pso_updating(afl); }
    }
    return (key_val_lv_1 | key_val_lv_2) as u8_0;
}
